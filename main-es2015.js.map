{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/COMPONENTES/lexico/lexico.component.ts","./src/app/COMPONENTES/lexico/lexico.component.html","./src/app/COMPONENTES/nav/nav.component.ts","./src/app/COMPONENTES/nav/nav.component.html","./src/app/COMPONENTES/regreso/regreso.component.ts","./src/app/COMPONENTES/regreso/regreso.component.html","./src/app/COMPONENTES/sintactico/sintactico.component.ts","./src/app/COMPONENTES/sintactico/sintactico.component.html","./src/app/MODELS/An_lexico.ts","./src/app/MODELS/An_sintactico.ts","./src/app/MODELS/Entrada.ts","./src/app/MODELS/ErrorLexico.ts","./src/app/MODELS/ErroresSintacticos.ts","./src/app/MODELS/Estatico.ts","./src/app/MODELS/Tabla_Simbolos.ts","./src/app/MODELS/Token.ts","./src/app/MODELS/formateaHTML.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport {Estatico} from '../../MODELS/Estatico';\n@Component({\n  selector: 'app-lexico',\n  templateUrl: './lexico.component.html',\n  styleUrls: ['./lexico.component.css']\n})\nexport class LexicoComponent implements OnInit {\n  \n  tokens: any = [];\n  errores:any = [];\n  constructor() {\n    \n    this.tokens = Estatico.lista_mostrar_tokens;\n    this.errores = Estatico.lista_mostrar_errores_lexicos;\n   }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class = \"col-12\">\n    <app-regreso></app-regreso>\n</div>\n<div class=\"row\">\n    \n<table class=\"table table-bordered col-6 tabl\">\n    <thead>\n        <tr > \n           <th colspan=\"5\" class=\"tituloTb\"> LISTA DE TOKENS </th> \n        </tr>\n      <tr>\n        <th scope=\"col\">#</th>\n        <th scope=\"col\">Lexema</th>\n        <th scope=\"col\">Tipo </th>\n        <th scope=\"col\">Fila</th>\n        <th scope=\"col\">Columna</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr  *ngFor='let token of tokens' >\n        <th scope=\"row\">{{token.getID()}}</th>\n        <td>{{token.getValor_lexema()}}</td>\n        <td>{{token.getTipo_str()}}</td>\n        <td>{{token.getFila()}}</td>\n        <td>{{token.getColumna()}}</td>\n      </tr>\n      \n    </tbody>\n  </table>\n\n  <table class=\"table table-bordered col-6 tabl\">\n    <thead>\n        <tr > \n            <th colspan=\"5\" class=\"tituloErr\"> LISTA DE ERRORES </th> \n         </tr>\n      <tr>\n        <th scope=\"col\">#</th>\n        <th scope=\"col\">Valor</th>\n        <th scope=\"col\">Tipo</th>\n        <th scope=\"col\">Fila</th>\n        <th scope=\"col\">Columna</th>\n      </tr>\n    </thead>\n    <tbody>\n        <tr  *ngFor='let error of errores' >\n            <th scope=\"row\">{{error.getID()}}</th>\n            <td>{{error.getValor()}}</td>\n            <td>{{error.getTipo_error()}}</td>\n            <td>{{error.getFila()}}</td>\n            <td>{{error.getColumna()}}</td>\n          </tr>\n    </tbody>\n  </table>\n\n</div>\n","import { Component, OnInit ,HostBinding} from '@angular/core';\nimport { Estatico} from '../../MODELS/Estatico';// lo importo\nimport { Entrada } from 'src/app/MODELS/Entrada';\nimport {Token ,Tipo} from '../../MODELS/Token';\nimport {An_lexico} from '../../MODELS/An_lexico';\nimport{Router} from '@angular/router';\nimport {ErrorLexico} from '../../MODELS/ErrorLexico';\nimport {ErroresSintacticos} from '../../MODELS/ErroresSintacticos';\nimport { An_sintatico } from 'src/app/MODELS/An_sintactico';\nimport {formateaHTML} from '../../MODELS/formateaHTML';\n\nimport * as File_ from 'file-saver';\nimport {saveAs} from 'file-saver';\n\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n  @HostBinding('class') clases = 'row';\n  listaTXT : any = []; // lista de text area\n  guarda:string  = \"\";\n\n\n\n\n\n\n\n\n  public filestring:any = \"ESTE TEXTAREA ES SOLO PARA LEER ARCHIVOS , NO MODIFICAR\"; \n  file:any; \n  unlocown:any; \n  \nfileChanged(e) {\n  this.file = e.target.files[0];\n  this.uploadDocument();\n}\n\n\nuploadDocument(){\nlet fileReader = new FileReader(); \nfileReader.onload = (e) =>{\nconsole.log(fileReader.result);\nthis.filestring = fileReader.result;\n}\nfileReader.readAsText(this.file);\n}\n\n\n  cadena_traducir:Entrada = new Entrada(10,\"\");\n  cadena_html:Entrada = new Entrada(10,\"\");\n  cadena_json:Entrada = new Entrada(10,\"\");\n  guarda_traduccion:string =\"\"; // igual para HTML Y JSON \n  guarda_cadena_html:string = \"\"; \n  guarda_cadena_json:string=\"\";\n  tabla_sin:any = [];\n\n  constructor(private router:Router) {\n    this.guarda_traduccion = Estatico.guarda_traduccion;\n    this.guarda_cadena_html= Estatico.guarda_cadena_html; \n    this.guarda_cadena_json = Estatico.guarda_cadena_json;\n    this.llenarListaTxt();    \n    this.restablecer();\n    this.filestring = Estatico.guarda_entrada;\n    this.tabla_sin = Estatico.lista_mostrar_tabla_simbolos;\n   }\n\n  \n  ngOnInit(): void {\n\n  }\n\n  llenarListaTxt(){\n\n   this.listaTXT = Estatico.listaTXT;\n  }\n\n \n  crear_nueva_ventana(){\n    alert(\"creando nueva ventana\");\n    this.listaTXT.push(new Entrada(2,\"\"));\n  }\n\n  analizar(){\n    this.limpiarVariables();\n    let entrada:string = this.filestring;\n    let analizador:An_lexico = new An_lexico(); \n    Estatico.guarda_entrada = entrada;\n    analizador.analisis_lexico(entrada);\n    Estatico.lista_mostrar_tokens = analizador.getListaTokens();\n    Estatico.lista_mostrar_errores_lexicos = analizador.getListaErrores();\n    \n   \n\n    let sharp:Token  = new Token(Tipo.sharp, \"fin_de_entrada\");\n    let lista_analizar:any[] = analizador.getListaTokens();\n    lista_analizar.push(sharp);\n    let llama_sintactico:An_sintatico = new An_sintatico(lista_analizar);\n    Estatico.lista_mostrar_errores_sintacticos = llama_sintactico.getListaErrores();\n    lista_analizar.pop();\n\n\n    if(analizador.getListaErrores().length == 0 &&  llama_sintactico.getListaErrores().length == 0 ){\n      this.traduce(llama_sintactico.getCADENATRADUCIDA());\n      Estatico.lista_mostrar_tabla_simbolos = llama_sintactico.getTablaSIMBOLOS();\n      this.tabla_sin =  Estatico.lista_mostrar_tabla_simbolos ;\n      this.guarda_cadena_html = llama_sintactico.getCADENA_HTML();\n      this.cadena_html.cadena =  this.guarda_cadena_html;\n\n      let llama_formato:formateaHTML = new formateaHTML(this.guarda_cadena_html);\n      this.guarda_cadena_html = llama_formato.getNuevaCadena();\n      this.cadena_html.cadena =  llama_formato.getNuevaCadena();\n      this.guarda_cadena_json = llama_formato.getCADENA_JSON();\n      this.cadena_json.cadena = llama_formato.getCADENA_JSON();\n\n    }else{\n      alert(\"LA ENTRADA POSEE ERRORES\");\n      this.guarda_traduccion = \"\";\n      this.cadena_traducir.cadena = \"\";\n    }\n   \n   \n    alert(\"Analizando...\");\n    \n    // lo envio a mi clase de analizador_lexico \n    // a la clase de mi analizador sintactico \n    // si todo bien traduce sino nel \n\n  }\n  analizar2(cadena:any){\n    this.limpiarVariables();\n    let analizador:An_lexico = new An_lexico(); \n    analizador.analisis_lexico(cadena);\n    Estatico.lista_mostrar_tokens = analizador.getListaTokens();\n    Estatico.lista_mostrar_errores_lexicos = analizador.getListaErrores();\n    \n    let sharp:Token  = new Token(Tipo.sharp, \"fin_de_entrada\");\n    let lista_analizar:any[] = analizador.getListaTokens();\n    lista_analizar.push(sharp);\n    let llama_sintactico:An_sintatico = new An_sintatico(lista_analizar);\n    Estatico.lista_mostrar_errores_sintacticos = llama_sintactico.getListaErrores();\n    lista_analizar.pop();\n\n    if(analizador.getListaErrores().length == 0 &&  llama_sintactico.getListaErrores().length == 0 ){\n      this.traduce(llama_sintactico.getCADENATRADUCIDA());\n      Estatico.lista_mostrar_tabla_simbolos = llama_sintactico.getTablaSIMBOLOS();\n      this.tabla_sin =  Estatico.lista_mostrar_tabla_simbolos ;\n      this.guarda_cadena_html = llama_sintactico.getCADENA_HTML();\n      this.cadena_html.cadena =  this.guarda_cadena_html;\n\n      \n      let llama_formato:formateaHTML = new formateaHTML(this.guarda_cadena_html);\n      this.guarda_cadena_html = llama_formato.getNuevaCadena();\n      this.cadena_html.cadena =  llama_formato.getNuevaCadena();\n      this.guarda_cadena_json = llama_formato.getCADENA_JSON();\n      this.cadena_json.cadena = llama_formato.getCADENA_JSON();\n\n\n    }else{\n      alert(\"LA ENTRADA POSEE ERRORES\");\n      this.guarda_traduccion = \"\";\n      this.cadena_traducir.cadena = \"\";\n    }\n   \n\n    alert(\"Analizando...\");\n    // lo envio a mi clase de analizador_lexico \n    // a la clase de mi analizador sintactico \n    // si todo bien traduce sino nel \n\n  }\n\n  limpiarVariables(){\n    Estatico.COLUMNAS = 0;\n    Estatico.FILAS = 1;\n    Token.CONTADORTOKEN = 1;\n    ErrorLexico.CONTADOR_ERRORES = 1;\n    ErroresSintacticos.CONT_SINTACTICOS = 1;\n  }\n\n\n  ir_lexico(){\n    this.router.navigate(['/lexico']);\n    Estatico.listaTXT = this.listaTXT;\n    Estatico.guarda_traduccion = this.guarda_traduccion;\n  }\n\n  ir_sitactico(){\n    this.router.navigate(['/sintactico']);\n    Estatico.listaTXT = this.listaTXT;\n    Estatico.guarda_traduccion = this.guarda_traduccion;\n  }\n    \n  restablecer(){\n    this.cadena_traducir.cadena = this.guarda_traduccion;\n    this.cadena_html.cadena = this.guarda_cadena_html; // DARLES SUS THIS DE CADA CADENA \n    this.cadena_json.cadena = this.guarda_cadena_json;\n    \n  }\n\n\n  \n\n\n\n  traduce(cadena_del_sintactico:string){\n    let t1:string  = \"\";\n    let comentarioBloque:string = \"\\'\" + \" \" + \"\\'\" + \" \" + \"\\'\";\n    this.guarda_traduccion = cadena_del_sintactico;\n    this.cadena_traducir.cadena = cadena_del_sintactico;\n  }\n  \n  GUARDA_ARCHIVO(){\n    try{\n      let cadena__py:any = this.cadena_traducir.cadena;\n      let cadena__html:any = this.cadena_html.cadena; \n      let cadena__json:any = this.cadena_json.cadena;\n      let data_py = new Blob([cadena__py], { type: \"text/csv;charset=utf-8\" });\n      let data_html = new Blob([cadena__html],{ type: \"text/csv;charset=utf-8\" });\n      let data_json = new Blob([cadena__json], { type: \"text/csv;charset=utf-8\" });\n      saveAs(data_py, \"TRADUCCION.py\");\n      saveAs(data_html, \"CODIGO_HTML.html\");\n      saveAs(data_json, \"CODIGO_JSON.json\");\n      alert(\"GENERANDO REPORTES...\");\n    }catch(e){\n      alert(\"algo salio mal..\");\n    }\n    \n  }\n\n  SA_VE(){\n    try{ \n    let c_sharp_entrada = new Blob([this.filestring], { type: \"text/csv;charset=utf-8\" });\n    saveAs(c_sharp_entrada, \"Entrada_.cs\");\n    alert(\"Entrada guardada correctamente\");\n  }catch(e){\n    alert(\"algo salio mal..\");\n  }\n  }\n\n\n\n\n\n\n\n\n\n}\n\n","<nav class=\"navbar navbar-dark bg-dark navbar-expand-lg navbar-light bg-light alert alert-dark col-12\" role=\"alert\" >\n    <div class=\"container \">\n\n        <a class=\"navbar-brand\"  routerLink=\"/menuAux\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\"> <i class=\"fas fa-code\"></i> COMPI 1 </a>\n        <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span class=\"navbar-toggler-icon\"></span>\n        </button>\n      \n        <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul class=\"navbar-nav mr-auto\">\n            <li class=\"nav-item \">\n              <button class = \"nav-link btn \" (click) = \"crear_nueva_ventana()\">\n                <p>NUEVO <i class =\"fas fa-plus-circle\"></i></p>\n              </button>\n              \n            </li>\n\n            <li class=\"nav-item\">\n              \n              <input id=\"fileInput\"  type=\"file\" size=\"40\" (change) =\"fileChanged($event)\" class = \"nav-link btn  \">\n              \n            </li>\n                           \n            <li class=\"nav-item\">\n              <button class = \"nav-link btn  \" (click) = \"GUARDA_ARCHIVO()\">\n                <p> REPORTES <i class=\"fa fa-clone\" aria-hidden=\"true\"></i>    </p>\n              </button>\n            </li>\n\n\n            <li class=\"nav-item\">\n             \n              <button class = \"nav-link btn  \" (click) = \"ir_lexico()\">\n                <p> LEXICO <i class=\"fa fa-inbox\" aria-hidden=\"true\"></i>   </p>\n              </button>\n              \n            </li>\n\n            <li class=\"nav-item\">\n              <button class = \"nav-link btn \" (click) = \"ir_sitactico()\">\n                <p> SINTACTICO <i class=\"fa fa-inbox\" aria-hidden=\"true\"></i>   </p>\n              </button>\n              \n            </li>\n          </ul>\n        </div>\n    </div>\n  </nav>\n\n\n  <!--                 FORMA VISUAL            -->\n  \n\n  \n\n\n  \n  \n  \n<div class = \"container\"> \n  <div class = \"row\">\n    <div id=\"carouselExampleControls\" class=\"carousel slide  col-6 tam_carusel\" data-ride=\"carousel\" data-interval=\"false\">\n    \n      <div class=\"carousel-inner tam_carusel\">\n        <div class=\"carousel-item active tam_carusel\">\n          <ngx-codemirror \n          \n          id = \"abrir\" \n          [(ngModel)] = \"filestring\"\n         [options]=\"{\n           lineNumbers: true,\n           matchBrackets:true,\n           styeleActiveLine:true,\n           theme: 'eclipse',\n           mode: 'javascript'\n         }\"\n       >\n       </ngx-codemirror>\n\n           \n         \n          <button class = \"btn btn-primary adecuada\" (click) = \"analizar()\">\n            <p>ANALIZAR <i class=\"fa fa-check-square\" aria-hidden=\"true\"></i></p>\n          </button>\n        </div>\n  \n  \n     <!-- el modelo teine que ser de tipo entrada-->\n        <div class=\"carousel-item acomodaTexAr\" *ngFor='let obj of listaTXT' > \n          <textarea [(ngModel)] = \"obj.cadena\" class=\"d-block  justify-content-center acomodaTexAr\">\n          \n          </textarea>   \n\n       \n\n\n\n         \n          <button class = \"btn btn-primary col-11\" (click) = \"analizar2(obj.cadena)\">\n            <p>ANALIZAR <i class=\"fa fa-check-square\" aria-hidden=\"true\" ></i></p>\n          </button>\n        </div>\n  \n  \n      </div>\n  \n      <a class=\"carousel-control-prev \" href=\"#carouselExampleControls\" role=\"button\" data-slide=\"prev\">\n        <span class=\"carousel-control-prev-icon bg-black\" ></span>\n        <span class=\"sr-only\">Previous</span>\n      </a>\n      <a class=\"carousel-control-next\" href=\"#carouselExampleControls\" role=\"button\" data-slide=\"next\">\n        <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n        <span class=\"sr-only\">Next</span>\n      </a>\n    </div>\n\n\n\n\n\n\n\n\n\n    <!--ROW\n     <textarea id = \"traductor\"   [(ngModel)] = \"cadena_traducir.cadena\" (focus) = \"restablecer()\" (change) = \"restablecer()\" class=\"d-block  justify-content-center \">\n      </textarea>  \n\n    -->\n \n\n     \n\n    \n<ngx-codemirror \nid = \"traductor\"   [(ngModel)] = \"cadena_traducir.cadena\" (focus) = \"restablecer()\" (change) = \"restablecer()\"\n[options]=\"{\n lineNumbers: true,\n readOnly: 'nocursor',\n matchBrackets:true,\n styeleActiveLine:true,\n theme: 'dracula',\n mode: 'javascript'\n}\"\n>\n\n</ngx-codemirror>\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    <div id=\"posCarusel\"  class=\"carousel slide  col-8 \" data-ride=\"carousel\" data-interval=\"false\">\n    \n      <div class=\"carousel-inner\" >\n        <div class=\"carousel-item active \">\n\n          <ngx-codemirror \n          id=\"H_tml\"   [(ngModel)] = \"cadena_html.cadena\" (focus) = \"restablecer()\" (change) = \"restablecer()\"\n[options]=\"{\n lineNumbers: true,\n matchBrackets:true,\n readOnly: 'nocursor',\n styeleActiveLine:true,\n theme: 'twilight',\n mode: 'javascript'\n}\"\n>\n\n</ngx-codemirror>\n\n\n          <!--\n          <textarea [(ngModel)] = \"cadena_html.cadena\"   class=\"d-block justify-content-center\" id=\"H_tml\">\n           MUESTRA HTML\n          </textarea> \n          -->\n           \n        </div>\n\n\n        <div class=\"carousel-item\">\n\n          <textarea id=\"J_son\" [(ngModel)] = \"cadena_json.cadena\" class=\"d-block justify-content-center\" (change) = \"restablecer()\">\n           MUESTRA JSON \n          </textarea>   \n        \n\n\n\n        </div>\n\n\n\n      </div>\n  \n      <a class=\"carousel-control-prev \" href=\"#posCarusel\" role=\"button\" data-slide=\"prev\" id=\" posCarusel\">\n        <span class=\"carousel-control-prev-icon bg-black\" ></span>\n        <span class=\"sr-only\">Previous</span>\n      </a>\n      <a class=\"carousel-control-next\" href=\"#posCarusel\" role=\"button\" data-slide=\"next\">\n        <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n        <span class=\"sr-only\">Next</span>\n      </a>\n    </div>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    <!--TERMINA LAS ROW -->\n  </div>\n</div>\n\n\n\n\n\n\n\n\n\n\n  \n\n          \n\n<table class=\"table table-bordered col-8 tabl subir_tabla\">\n  <thead>\n      <tr > \n          <th colspan=\"3\" class=\"tituloErr\"> TABLA DE VARIABLES </th> \n       </tr>\n    <tr>\n      <th scope=\"col\">Nombre</th>\n      <th scope=\"col\">Tipo</th>\n      <th scope=\"col\">Linea</th>\n    </tr>\n  </thead>\n  <tbody>\n       <tr  *ngFor='let variable of tabla_sin' >\n         <th scope=\"row\">{{variable.getNombre()}}</th>\n          <td>{{variable.getTipo()}}</td>\n          <td>{{variable.getFila()}}</td>\n        </tr>\n  </tbody>\n</table>\n\n\n\n\n\n\n\n<button class = \"btn btn-primary save_\" (click) = \"SA_VE()\">\n  <p>SAVE</p>\n</button>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-regreso',\n  templateUrl: './regreso.component.html',\n  styleUrls: ['./regreso.component.css']\n})\nexport class RegresoComponent implements OnInit {\n\n  constructor(private router:Router) {\n\n   }\n\n  ngOnInit(): void {\n  }\n  ir_principal(){\n    this.router.navigate(['/principal']);\n  }\n  ir_lexico(){\n    this.router.navigate(['/lexico']);\n  }\n\n  ir_sitactico(){\n    this.router.navigate(['/sintactico']);\n  }\n    \n}\n","\n<nav class=\"navbar navbar-dark bg-dark navbar-expand-lg navbar-light bg-light alert alert-dark col-12\" role=\"alert\" >\n    <div class=\"container \">\n\n        <a class=\"navbar-brand\"  routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\"> <i class=\"fas fa-code\"></i> COMPI 1 </a>\n        <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span class=\"navbar-toggler-icon\"></span>\n        </button>\n      \n        <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul class=\"navbar-nav mr-auto\">\n            <li class=\"nav-item\">\n             \n                <button class = \"nav-link btn  \" (click) = \"ir_principal()\">\n                  <p> BACK <i class=\"fa fa-inbox\" aria-hidden=\"true\"></i>   </p>\n                </button>\n                \n              </li>\n\n            <li class=\"nav-item\">\n             \n              <button class = \"nav-link btn  \" (click) = \"ir_lexico()\">\n                <p> LEXICO <i class=\"fa fa-inbox\" aria-hidden=\"true\"></i>   </p>\n              </button>\n              \n            </li>\n\n            <li class=\"nav-item\">\n              <button class = \"nav-link btn \" (click) = \"ir_sitactico()\">\n                <p> SINTACTICO <i class=\"fa fa-inbox\" aria-hidden=\"true\"></i>   </p>\n              </button>\n              \n            </li>\n          \n               \n              \n\n            \n          </ul>\n        </div>\n    </div>\n  </nav>","import { Component, OnInit } from '@angular/core';\r\nimport {Estatico} from '../../MODELS/Estatico';\r\n@Component({\r\n  selector: 'app-sintactico',\r\n  templateUrl: './sintactico.component.html',\r\n  styleUrls: ['./sintactico.component.css']\r\n})\r\nexport class SintacticoComponent implements OnInit {\r\n\r\n  \r\n  errores:any = [];\r\n   constructor() {\r\n    this.errores = Estatico.lista_mostrar_errores_sintacticos;\r\n   }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class = \"col-12\">\n    <app-regreso></app-regreso>\n</div>\n\n\n<table class=\"table table-bordered col-12 tabl\">\n    <thead>\n        <tr > \n            <th colspan=\"5\" class=\"tituloErr\"> LISTA DE ERRORES SINTACTICOS </th> \n         </tr>\n      <tr>\n        <th scope=\"col\">#</th>\n        <th scope=\"col\">Valor</th>\n        <th scope=\"col\">Tipo</th>\n        <th scope=\"col\">Fila</th>\n        <th scope=\"col\">Columna</th>\n      </tr>\n    </thead>\n    <tbody>\n         <tr  *ngFor='let error of errores' >\n           <th scope=\"row\">{{error.getID()}}</th>\n            <td>{{error.getError()}}</td>\n            <td>{{error.getTipo_error()}}</td>\n            <td>{{error.getFila()}}</td>\n            <td>{{error.getColumna()}}</td> \n          </tr>\n    </tbody>\n  </table>\n\n","import {Token , Tipo} from'./Token';\r\nimport {ErrorLexico} from './ErrorLexico';\r\nimport { Estatico } from './Estatico';\r\nexport class An_lexico{\r\n\r\n    private ListaTokens_Salida : any = []; // simulan mi linkenList\r\n    private ListaErroresLexicos :any = []; \r\n    private estado:number;\r\n    private aux_lexico:string = \"\";\r\n    constructor(){\r\n        this.aux_lexico=\"\";\r\n    }\r\n\r\n    public analisis_lexico(cadena_entrada:string ){\r\n        console.log(\"ANALIZANDO: \" + cadena_entrada);\r\n        cadena_entrada += \"\\n\";\r\n        this.estado = 0; // inicia en el estado de inicio \r\n        this.aux_lexico = \"\"; // cadena acumuladora de lexema acutual \r\n        let act:string =\"\"; // caracter actual  o tipo string \r\n\r\n        for (let i = 0; i < cadena_entrada.length; i++) {\r\n            Estatico.COLUMNAS++;\r\n            act = cadena_entrada[i]; \r\n            \r\n            switch (this.estado)\r\n            {\r\n                case 0: \r\n                if (act == \"\\n\")\r\n                {\r\n                    Estatico.FILAS++;\r\n                    Estatico.COLUMNAS = 0 ;            \r\n                }else if (act == \" \" || act == \"\\t\")\r\n                {\r\n                    // solo no lo reconoce como un error\r\n                }else if (act ==\"+\"){ this.aux_lexico += act; this.estado = 5; }\r\n                else if (act ==\"-\") {this.aux_lexico += act; this.estado = 7; }\r\n                else if (act ==\"*\") { this.aux_lexico += act; this.addToken(Tipo.sb_por);}\r\n                else if (act ==\"/\") { this.aux_lexico += act; this.estado = 8; }\r\n                else if (act ==\"(\") { this.aux_lexico += act; this.addToken(Tipo.parentesis_izq);}\r\n                else if (act ==\")\")  { this.aux_lexico += act; this.addToken(Tipo.parentesis_derecho); }\r\n                else if (act ==\"{\")  { this.aux_lexico += act; this.addToken(Tipo.llave_izq); }\r\n                else if (act ==\"}\")  { this.aux_lexico += act; this.addToken(Tipo.llave_derecha); }\r\n                else if (act ==\"=\")  { this.aux_lexico += act; this.estado = 6; }\r\n                else if (act ==\":\")  { this.aux_lexico += act; this.addToken(Tipo.dosPuntos); }\r\n                else if (act ==\";\")  { this.aux_lexico += act; this.addToken(Tipo.punto_y_coma); }\r\n                else if (act ==\">\")  { this.aux_lexico += act; this.estado = 12; }\r\n                else if (act ==\"<\")  { this.aux_lexico += act; this.estado = 13; }\r\n                else if (act ==\"[\")  {\r\n                    this.aux_lexico += act; \r\n                    this.addToken(Tipo.corchete_izquierdo);\r\n                 }\r\n                else if (act ==\"]\")  { this.aux_lexico += act; this.addToken(Tipo.corchete_derecho); }\r\n                else if (act ==\"!\")  { this.aux_lexico += act; this.estado = 14; }\r\n                else if (act ==\"\\'\"){ this.aux_lexico += act; this.estado = 16; } // VERIFICAR SI FUNCIONA \r\n                else if (act ==\"|\"){ this.aux_lexico += act; this.estado = 4; }\r\n                else if (act ==\"&\"){ this.aux_lexico += act; this.estado = 15; } \r\n                else if (act ==\",\"){ this.aux_lexico += act; this.addToken(Tipo.coma); }\r\n                else if (act ==\".\") { this.aux_lexico += act; this.addToken(Tipo.punto); }\r\n                else if (this.esDigito(act)) //NUMEROS Y DECIMALES\r\n                { this.aux_lexico += act; this.estado = 1; }\r\n                else if (act== \"\\\"\") // cadenas de texto \r\n                {\r\n                this.aux_lexico += act;\r\n                this.estado = 17;\r\n                }\r\n                else if (this.esLetra(act))// palabras reservadas\r\n                {\r\n                this.aux_lexico += act;\r\n                this.estado = 18;\r\n                }\r\n                else{\r\n                this.aux_lexico += act;\r\n                //  Form1.pintar(inicio, i + 1, \"rojo\");\r\n                this.addError(this.aux_lexico);\r\n                }\r\n\r\n                break; // FIN DEL CASO 0 \r\n                case 1:\r\n                    if (this.esDigito(act))\r\n                    {\r\n                        this.aux_lexico += act;\r\n                       \r\n                    } else if (act == \".\"){\r\n                        this.aux_lexico += act;\r\n                        this.estado = 2;\r\n                    }\r\n                    else\r\n                    {\r\n                        Estatico.COLUMNAS--;\r\n                        this.addToken(Tipo.numero);\r\n                        i--;\r\n                    }\r\n                break;// FIN DEL CASO 1 -- DIGITOS\r\n                case 2:\r\n                    if (this.esDigito(act)) // ACEPTA CASOS DECIMALES \r\n                    {\r\n                        this.aux_lexico += act;\r\n                       \r\n                    }\r\n                    else\r\n                    {\r\n                        Estatico.COLUMNAS--;\r\n                        this.addToken(Tipo.decimales);\r\n                        i--;\r\n                    }\r\n                break; // FIN CASO 2    \r\n                case 3:\r\n                      \r\n\r\n\r\n                break; // CASO DE LO DECIMALES\r\n                case 4: // caso OR LOGICO \r\n                if (act == \"|\") { \r\n                    this.aux_lexico += act; \r\n                    this.addToken(Tipo.sb_or);\r\n                } \r\n                else if (act==\"\\n\")\r\n                {   \r\n                    this.addError(this.aux_lexico);    Estatico.FILAS++;    Estatico.COLUMNAS = 0;\r\n                }\r\n                else\r\n                {\r\n                    this.aux_lexico += act;\r\n                    this.addError(this.aux_lexico);\r\n                }        \r\n\r\n                break; // DISPONIBLE PARA USARSE----------------------\r\n                case 5:// INCREMENTO \r\n                        if (act == \"+\")\r\n                        { this.aux_lexico += act; this.addToken(Tipo.incremento); }\r\n                        else\r\n                        {Estatico.COLUMNAS--; this.addToken(Tipo.sb_mas); i--;} // regresa a ver que era lo que se topo que no es +\r\n\r\n                break;\r\n                case 6://COMPARA IGUAL \r\n                        if (act == \"=\")\r\n                        { this.aux_lexico += act; this.addToken(Tipo.igualComparacion);}\r\n                        else\r\n                        {Estatico.COLUMNAS--; this.addToken(Tipo.igual); i--;}\r\n                break;\r\n                case 7:// DECREMENTO \r\n                        if (act == \"-\")\r\n                        { this.aux_lexico += act; this.addToken(Tipo.decremento); }\r\n                        else\r\n                        { Estatico.COLUMNAS--; this.addToken(Tipo.sb_menos); i--; }\r\n                break;\r\n                case 8:// comentarios\r\n                        if (act == \"/\")\r\n                        { this.aux_lexico += act; this.estado = 9; }\r\n                        else if (act == \"*\")\r\n                        { this.aux_lexico += act; this.estado = 10; }\r\n                        else\r\n                        { Estatico.COLUMNAS--; this.addToken(Tipo.sb_division); i--; }\r\n                        break; // decision de comentarios \r\n                case 9:\r\n                        if (act != \"\\n\")\r\n                        {\r\n                            this.aux_lexico += act;\r\n                        }\r\n                        else {\r\n                            this.addToken(Tipo.comentarioLinea);\r\n                            Estatico.FILAS++;\r\n                            Estatico.COLUMNAS = 0;\r\n                        }\r\n                break;// FIN COMENTARIOS DE LINEA \r\n                case 10:// COMENTARIO BLOQUE \r\n                if (act ==\"\\n\")\r\n                {\r\n                   this.aux_lexico += act;\r\n                   Estatico.FILAS++; \r\n                   Estatico.COLUMNAS = 0 ; \r\n                }\r\n                else if (act == \"*\")\r\n                {\r\n                    this.aux_lexico += act;\r\n                    this.estado=11; \r\n                }\r\n                else if (i == cadena_entrada.length - 1)\r\n                {\r\n                    this.aux_lexico += act; this.addError(this.aux_lexico);\r\n                }\r\n                else\r\n                {\r\n                    this.aux_lexico += act;}\r\n                break;\r\n            case 11:// COMENTARIO BLOQUE \r\n                if (act == \"/\" )\r\n                { this.aux_lexico += act; this.addToken(Tipo.comentarioBloques);}\r\n                else if (i == cadena_entrada.length-1)//-----------------------------------------------------------------------------------\r\n                {\r\n                    this.aux_lexico += act; this.addError(this.aux_lexico);\r\n                }\r\n                else\r\n                {\r\n                    this.aux_lexico += act;\r\n                    this.estado = 10;\r\n\r\n                }\r\n                break;\r\n            case 12://MAYOR O IGUAL  \r\n                if (act == \"=\")\r\n                { this.aux_lexico += act; this.addToken(Tipo.mayor_o_igual); }\r\n                else\r\n                {Estatico.COLUMNAS--; this.addToken(Tipo.mayor_que); i--; }\r\n                break;\r\n            case 13://menor O IGUAL  \r\n                if (act == \"=\")\r\n                { this.aux_lexico += act; this.addToken(Tipo.menor_o_igual); }\r\n                else\r\n                { Estatico.COLUMNAS--;this.addToken(Tipo.menor_que); i--; }\r\n                break;\r\n            case 14://diferente  \r\n                if (act ==\"=\") \r\n                { this.aux_lexico += act; this.addToken(Tipo.diferente); }\r\n                else\r\n                { Estatico.COLUMNAS--;this.addToken(Tipo.sb_negacion); i--; }\r\n                break;\r\n            case 15:\r\n                if (act == \"&\") {  // AND LOGICO \r\n                    this.aux_lexico += act;\r\n                    this.addToken(Tipo.sb_and);\r\n                } \r\n                else if (act==\"\\n\")\r\n                {   \r\n                    this.addError(this.aux_lexico);    Estatico.FILAS++;    Estatico.COLUMNAS = 0;\r\n                }\r\n                else\r\n                {\r\n                    this.aux_lexico += act;\r\n                    this.addError(this.aux_lexico);\r\n                }        \r\n\r\n            break;\r\n            case 16:\r\n                if (act != \"\\'\")\r\n                {\r\n                    let act2:any = act;\r\n                    this.aux_lexico += act;\r\n                    if (cadena_entrada.length - 1 == i)\r\n                    {\r\n\r\n                        this.addError(this.aux_lexico);\r\n                        alert(\" no se encontro comilla de cierre\");\r\n                    }\r\n                    if  (act2 == \"\\n\")\r\n                    {\r\n                        Estatico.FILAS++;\r\n                        Estatico.COLUMNAS = 0 ; \r\n                    }\r\n                   \r\n                }\r\n                else\r\n                {\r\n                   \r\n                    this.aux_lexico += act; \r\n                    if(this.aux_lexico.length <= 3){\r\n                        this.addToken(Tipo.caracter);\r\n                    }else{\r\n                        this.addToken(Tipo.html);\r\n                    }\r\n                \r\n                }\r\n                break;\r\n            case 17:\r\n                try\r\n                {\r\n\r\n                    if(act != \"\\\"\")\r\n                    {\r\n                        let act2:any = act;\r\n                        this.aux_lexico += act;\r\n                        if (cadena_entrada.length - 1 == i)\r\n                        {\r\n\r\n                            this.addError(this.aux_lexico);\r\n                            alert(\" no se encontro comillas de cierre\");\r\n                        }\r\n                        if  (act2 == \"\\n\")\r\n                        {\r\n                            Estatico.FILAS++;\r\n                            Estatico.COLUMNAS = 0 ; \r\n                        }\r\n                    }\r\n                    else if (act== \"\\\"\")\r\n                    {\r\n                        this.aux_lexico += act;\r\n                        this.addToken(Tipo.cadena);\r\n                    }\r\n                }\r\n                catch (error)\r\n                {\r\n                    console.log(\"FALLO EN LAS CADENAS\" + error);\r\n                }\r\n                break;\r\n\r\n            case 18:\r\n                if(this.esDigito(act) || this.esLetra(act) || act == \"_\")\r\n                {\r\n\r\n                    this.aux_lexico += act;\r\n\r\n                }\r\n                else\r\n                {\r\n\r\n                    i--;\r\n                    Estatico.COLUMNAS--;\r\n\r\n\r\n                    if (this.aux_lexico == \"int\")\r\n                    {\r\n                        \r\n                        this.addToken(Tipo.p_res_Int);\r\n\r\n                    }\r\n                    else if  (this.aux_lexico ==\"char\" || this.aux_lexico ==\"Char\")\r\n                    {\r\n                        \r\n                        this.addToken(Tipo.p_res_Char);\r\n\r\n                    }\r\n                    else if (this.aux_lexico ==\"String\" || this.aux_lexico ==\"string\")   // MAYUSCULA O NO  IMPORTA ? \r\n                    {\r\n                        \r\n                        this.addToken(Tipo.p_res_String);\r\n                       \r\n                    }\r\n                    else if (this.aux_lexico ==\"bool\") \r\n                    {\r\n                        \r\n                        this.addToken(Tipo.p_res_Bool);\r\n\r\n                    }\r\n                    else if (this.aux_lexico ==\"class\")\r\n                    {\r\n                        \r\n                        this.addToken(Tipo.p_res_Class);\r\n\r\n                    }\r\n                   /* else if (aux_lexico.CompareTo(\"static\") == 0)\r\n                    {\r\n                        estado = 0;\r\n                        añadeToken(Token.Tipo.p_res_static);\r\n\r\n                    }*/\r\n                    else if (this.aux_lexico ==\"void\")\r\n                    {\r\n                        \r\n                        this.addToken(Tipo.p_res_void);\r\n\r\n                    }\r\n                    else if (this.aux_lexico ==\"do\")\r\n                    {\r\n                        \r\n                        this.addToken(Tipo.p_res_do);\r\n\r\n                    }else if(this.aux_lexico == \"double\"){\r\n                        this.addToken(Tipo.p_res_double);\r\n                    }\r\n                    /*else if (this.aux_lexico==\"Main\") \r\n                    {\r\n                        this.estado = 0;\r\n                        this.addToken(Tipo.p_res_Main);\r\n\r\n                    }*/\r\n                    else if (this.aux_lexico==\"false\")\r\n                    {\r\n                        \r\n                        this.addToken(Tipo.p_res_false);\r\n\r\n                    }\r\n                    else if (this.aux_lexico==\"true\") \r\n                    {\r\n                        \r\n                        this.addToken(Tipo.p_res_true);\r\n\r\n                    }\r\n                    else if (this.aux_lexico==\"if\") \r\n                    {\r\n                       \r\n                    this.addToken(Tipo.p_res_if);\r\n\r\n                    }\r\n                    else if (this.aux_lexico==\"for\")\r\n                    {\r\n                        \r\n                        this.addToken(Tipo.p_for);\r\n\r\n                    }\r\n\r\n                    else if (this.aux_lexico==\"else\")                     {\r\n                      \r\n                        this.addToken(Tipo.p_res_else);\r\n\r\n                    }\r\n                    else if (this.aux_lexico==\"switch\") \r\n                    {\r\n                        \r\n                        this.addToken(Tipo.p_res_switch);\r\n\r\n                    }\r\n                    else if (this.aux_lexico==\"case\")\r\n                    {\r\n                        \r\n                        this.addToken(Tipo.p_res_case);\r\n\r\n                    }\r\n                    else if (this.aux_lexico==\"break\")\r\n                    {\r\n                       \r\n                        this.addToken(Tipo.p_res_break);\r\n\r\n                    }\r\n                    else if (this.aux_lexico==\"default\") \r\n                    {\r\n                        \r\n                        this.addToken(Tipo.p_res_default);\r\n\r\n                    }\r\n                  /*  else if (aux_lexico.CompareTo(\"new\") == 0)\r\n                    {\r\n                        estado = 0;\r\n                        añadeToken(Token.Tipo.p_res_new);\r\n\r\n                    }*/\r\n                    else if (this.aux_lexico==\"while\") \r\n                    {\r\n                        this.addToken(Tipo.p_res_while);\r\n\r\n                    }\r\n                    else if (this.aux_lexico==\"Console\")\r\n                    {\r\n                        this.addToken(Tipo.p_Console);\r\n                        // System.Windows.Forms.MessageBox.Show(aux_lexico);\r\n                    }\r\n                    else if (this.aux_lexico==\"Write\")\r\n                    {\r\n                      //  System.Windows.Forms.MessageBox.Show(\"entra \" + aux_lexico +\"   \"+act);\r\n                        this.addToken(Tipo.p_Write);\r\n\r\n                    } \r\n                      else if (this.aux_lexico==\"continue\")\r\n                    {\r\n                      \r\n                        this.addToken(Tipo.p_res_continue);\r\n\r\n                    }   \r\n                    else if (this.aux_lexico==\"return\")\r\n                    {\r\n                      \r\n                        this.addToken(Tipo.P_res_return);\r\n\r\n                    }\r\n\r\n                    else\r\n                    {\r\n                        // es un id \r\n                        this.addToken(Tipo.id);\r\n\r\n                    }\r\n\r\n                }\r\n\r\n                break;\r\n\r\n\r\n\r\n\r\n\r\n            } // FIN DEL SWITCH \r\n            \r\n        }// FIN DEL FOR \r\n\r\n    }\r\n\r\n    \r\n\r\n    public imprimir_tokens():void{ // --------------------------- PROBAR SI FUNCIONAAA\r\n        for (let x = 0; x < this.ListaTokens_Salida.length; x++) {\r\n      console.log(\"LEXEMA-> \" + this.ListaTokens_Salida[x].getValor_lexema() + \" TIPO: \" + this.ListaTokens_Salida[x].getTipo_str() + \" Fila \" + this.ListaTokens_Salida[x].getFila() + \" Columna \" + this.ListaTokens_Salida[x].getColumna());\r\n        }\r\n   \r\n      \r\n    }\r\n\r\n\r\n    public imprimir_Errores():void{ // --------------------------- PROBAR SI FUNCIONAAA\r\n        for (let t = 0; t < this.ListaErroresLexicos.length; t++) {\r\n             console.log(\"LEXEMA-> \" + this.ListaErroresLexicos[t].getValor() + \" TIPO: \" + this.ListaErroresLexicos[t].getTipo_error() + \" Fila \" + this.ListaErroresLexicos[t].getFila() + \" Columna \" + this.ListaErroresLexicos[t].getColumna());\r\n        }\r\n    }\r\n\r\n    esDigito (caracter){\r\n        let ascii = caracter.charCodeAt(0);\r\n        return ascii > 47 && ascii < 58;\r\n    }\r\n    esLetra(caracter){\r\n        let ascii = caracter.toUpperCase().charCodeAt(0);\r\n        return ascii > 64 && ascii < 91;\r\n    }\r\n\r\n    public addError(Error:string){\r\n      if(Error != \"\\n\" && Error != \"\\r\"){\r\n        this.ListaErroresLexicos.push(new ErrorLexico(Error));\r\n      }\r\n      this.aux_lexico = \"\";//LIMIPIA EL ACUMULADOR \r\n      this.estado = 0; // REINICIA EL ESTADO , implemetar el booleano \r\n\r\n    }\r\n\r\n    public addToken(tipoToken: Tipo){\r\n        this.ListaTokens_Salida.push(new Token(tipoToken, this.aux_lexico));\r\n        this.aux_lexico = \"\";// LIMPIA LE ACUMULADOR\r\n        this.estado = 0;\r\n    };\r\n\r\n    public getListaTokens():any[] {\r\n        return this.ListaTokens_Salida;\r\n    };\r\n    public getListaErrores():any[] {\r\n        return this.ListaErroresLexicos;\r\n    };\r\n}","import {ErroresSintacticos} from './ErroresSintacticos';\r\nimport {Token, Tipo} from './Token';\r\nimport {Tabla_Simbolos} from './Tabla_Simbolos';\r\nimport { Estatico } from './Estatico';\r\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\r\n\r\nexport class An_sintatico{\r\n     // variables solo para el parea \r\n     private hay_error:boolean = false; \r\n     //--------------------------------\r\n    private  Traducir:boolean;\r\n    private contadorTab:number; \r\n    private cadena_traducida:string;\r\n    private NO_salto:boolean;\r\n    private lista_errores_sin:any = []; \r\n    private  tomarLLaves:boolean;\r\n    // PARA SENTENCIAS \r\n    private acepta_sentencia_break: boolean = false; // VA DAR CLAVO SI LO PONGO ADENTRO DE UN CASE \r\n    private acepta_sentencia_continue:boolean = false; \r\n    private acepta_return_funciones:boolean =  false; \r\n    private acepta_return_metodos:boolean =false;\r\n    private esta_en_el_switch:boolean = false;; \r\n    // atributos publicos PARA PARSEAR \r\n    tokenActual:Token; \r\n    listaTok:any = [];\r\n    sig :number;  \r\n  \r\n    \r\n    // ATRIBUTOS PARA TRADUCIR \r\n    \r\n    private INTERVALO1_:string=\"\";\r\n    private INTERVALO2_:string=\"\";\r\n    private save_expression:boolean = false;\r\n    private GUARDAR_EXPRESION :string=\"\";\r\n    private nombres_variables_declaracion:any=[];\r\n    private tabla:any =[];\r\n    private TipoActualVariable:string = \"\";\r\n    nombreVar:string  = \"\";\r\n    esElMain:boolean = false;\r\n    private guardarIntervalo:number = 0; \r\n    private intervalo1:any = 0; \r\n    private intervalo2:any = 0;\r\n    private simboloComparativoFor:string = \"\";\r\n    private viene_de_sentencia_imprimir:boolean = false; // IMPLEMENTAR PARA LA ,    HACER SWTICH Y DECLARACIONSE , FOR DE UNA FUNCION A OTRA \r\n    private al_menos_una_cadena:boolean = false;\r\n    // PROPIEDADES--------------\r\n    public getCADENATRADUCIDA():string{\r\n        \r\n        return this.cadena_traducida;\r\n    }\r\n    public getTablaSIMBOLOS():any[] {\r\n        return this.tabla;\r\n    }\r\n    public getListaErrores():any[]{\r\n        return this.lista_errores_sin; \r\n    }\r\n    public getCADENA_HTML():string{\r\n        return this.cadena_html;\r\n    }\r\n    private cadena_html:string = \"\";\r\n    // trabar al metodo cuando haya un error y esperar a que llegue a un punto y coma\r\n    // luego seguir analizando como si  nada \r\n    constructor(tokens:any[]){\r\n    this.NO_salto = false; \r\n    this.contadorTab = 0 ; \r\n    this.Traducir = false; \r\n    this.cadena_traducida = \"\"; \r\n    this.listaTok = tokens;\r\n    this.sig = 0 ; \r\n    this.tokenActual = this.listaTok[this.sig];\r\n    //tokenActual = listaTok.ElementAt(sig);\r\n    this.tomarLLaves = true;\r\n    // LISTO PARA INICIAR EL SINTACTICO \r\n    console.log(\"INICIA A ANALIZAR\");\r\n    this.ignoraComentarios();\r\n    this.inicio();\r\n\r\n    console.log(\"TERMINO DE ANALIZAR\");\r\n    if(this.lista_errores_sin.length === 0){\r\n        console.log(\"ENTRADA ESTRICTAMENTE ACEPTADA\");\r\n    }else{\r\n        console.log(\"ESA ONDA TIENE ERROES SINTACTICOS\");\r\n    }\r\n\r\n  \r\n   this.imprimirTABLA_SEND();\r\n \r\n    }\r\n\r\n    private inicio():void{\r\n        this.sentencia_clase();\r\n        this.lista_clasesP();\r\n        this.parea(Tipo.sharp);\r\n    }\r\n    private lista_clasesP(){\r\n        this.ignoraComentarios();\r\n        if(this.tokenActual.getTipo() == Tipo.p_res_Class){\r\n            this.sentencia_clase();\r\n            this.lista_clasesP();\r\n        }else{\r\n\r\n        }\r\n     \r\n    }\r\n    private sentencia_clase(){\r\n        this.Traducir = true;\r\n        this.parea(Tipo.p_res_Class); this.cadena_traducida+=\" \";\r\n        this.parea(Tipo.id); this.cadena_traducida+=\":\";\r\n        this.parea(Tipo.llave_izq);\r\n        this.Lista_Declaraciones_metFunVar();\r\n        this.parea(Tipo.llave_derecha);\r\n        this.Traducir = false;\r\n    }\r\n    private Lista_Declaraciones_metFunVar(){\r\n        //Declaracion Lista_Declaraciones_metFunVarP\r\n        this.ignoraComentarios();\r\n        if(this.tokenActual.getTipo() == Tipo.llave_derecha){\r\n\r\n        }else{\r\n            this.Declaracion(); \r\n            this.Lista_Declaraciones_metFunVarP();\r\n        }\r\n        /*  ACA NO ME RECONOCIA BIEN LOS ERRORES :v \r\n               if(this.tokenActual.getTipo() == Tipo.p_res_Int || this.tokenActual.getTipo() == Tipo.p_res_double  || this.tokenActual.getTipo() == Tipo.p_res_Char || this.tokenActual.getTipo() == Tipo.p_res_String  || this.tokenActual.getTipo() == Tipo.p_res_Bool || this.tokenActual.getTipo() == Tipo.p_res_void){\r\n            this.Declaracion(); \r\n            this.Lista_Declaraciones_metFunVarP();\r\n        }\r\n        else{\r\n            // epsilon \r\n        }*/\r\n     \r\n    }\r\n    private Lista_Declaraciones_metFunVarP(){\r\n        this.ignoraComentarios();\r\n        if(this.tokenActual.getTipo() == Tipo.p_res_Int || this.tokenActual.getTipo() == Tipo.p_res_double  || this.tokenActual.getTipo() == Tipo.p_res_Char || this.tokenActual.getTipo() == Tipo.p_res_String  || this.tokenActual.getTipo() == Tipo.p_res_Bool || this.tokenActual.getTipo() == Tipo.p_res_void){\r\n            this.Declaracion(); \r\n            this.Lista_Declaraciones_metFunVarP();\r\n        }\r\n        else if ( (this.tokenActual.getTipo() == Tipo.punto_y_coma || this.tokenActual.getTipo() == Tipo.llave_derecha) && this.hay_error == true ) {\r\n            this.hay_error = false;\r\n            console.log(\"[HAMBITO DE CLASE ] SE RECUPERO CON EL SIMBOLO ; O }  EN LA FILA :\"+this.tokenActual.getFila()+\"   \"+this.tokenActual.getValor_lexema());\r\n            this.sig++;\r\n            this.tokenActual = this.listaTok[this.sig];  \r\n            this.Declaracion(); \r\n            this.Lista_Declaraciones_metFunVarP();\r\n        }\r\n        else{\r\n            // epsilon \r\n        }\r\n\r\n    }\r\n    private Lista_inst(){\r\n        this.Instruccion();\r\n        this.Lista_instP();// prima , solol pregunta si hay mas instrucciones \r\n    }\r\n\r\n    //----------------------------->>>>>>>>>>>>>> INIT INSTRUCCIONES \r\n\r\n    private Instruccion(){ \r\n       \r\n        this.ignoraComentarios(); \r\n\r\n        if(this.tokenActual.getTipo() == Tipo.p_res_if){// instruccion IF \r\n            this.tab(); \r\n            this.sentencia_if();\r\n        }else if(this.tokenActual.getTipo() == Tipo.p_Console){// CONSOLE.WRITE\r\n            this.tab(); \r\n            this.sentenciaImprime();\r\n        }else if(this.tokenActual.getTipo() == Tipo.id ){\r\n            this.tab(); \r\n            this.asignacionSimple();\r\n        }else if(this.tokenActual.getTipo() == Tipo.p_res_Int || this.tokenActual.getTipo() == Tipo.p_res_double  || this.tokenActual.getTipo() == Tipo.p_res_Char || this.tokenActual.getTipo() == Tipo.p_res_String  || this.tokenActual.getTipo() == Tipo.p_res_Bool){\r\n            this.tab(); \r\n            this.DECLARACION_ADENTRO_DE_METODOS_FUNCIONES();\r\n        }else if(this.tokenActual.getTipo() == Tipo.p_res_while){\r\n            this.tab();\r\n            this.sentencia_while();\r\n        }else if(this.tokenActual.getTipo() == Tipo.p_res_do){\r\n            this.tab();\r\n            this.sentencia_do_while();\r\n        }else if(this.tokenActual.getTipo() == Tipo.p_for){\r\n           this.tab(); \r\n           this.sentencia_for();\r\n        }else if(this.tokenActual.getTipo() == Tipo.p_res_switch){\r\n           this.tab();\r\n           this.sentencia_switch();\r\n        }else if(this.tokenActual.getTipo() == Tipo.P_res_return && this.acepta_return_metodos == true){\r\n            this.tab();\r\n            this.sentencia_return_metodos();\r\n        }else if(this.tokenActual.getTipo() == Tipo.P_res_return && this.acepta_return_funciones == true){\r\n            this.tab();\r\n            this.sentencia_return_funciones();\r\n        }else if(this.tokenActual.getTipo() == Tipo.p_res_continue && this.acepta_sentencia_continue == true){\r\n            this.tab(); \r\n            this.sentencia_continue();\r\n        }else if(this.tokenActual.getTipo() == Tipo.p_res_break && this.esta_en_el_switch == false && this.acepta_sentencia_break == true){\r\n            this.tab();\r\n            this.sentencia_break();\r\n        }\r\n        else{\r\n            // epsilon \r\n        }\r\n\r\n    }\r\n    \r\n    private Lista_instP(){\r\n        this.ignoraComentarios(); // siempre que voy a ver hacia que produccion ir \r\n        if(this.tokenActual.getTipo() == Tipo.p_res_if){\r\n            this.Instruccion(); \r\n            this.Lista_instP();\r\n        }else if(this.tokenActual.getTipo() == Tipo.p_Console){\r\n            this.Instruccion(); \r\n            this.Lista_instP(); \r\n        }else if(this.tokenActual.getTipo() == Tipo.id ){\r\n            this.Instruccion();\r\n            this.Lista_instP();\r\n        }else if(this.tokenActual.getTipo() == Tipo.p_res_Int || this.tokenActual.getTipo() == Tipo.p_res_double  || this.tokenActual.getTipo() == Tipo.p_res_Char || this.tokenActual.getTipo() == Tipo.p_res_String  || this.tokenActual.getTipo() == Tipo.p_res_Bool){\r\n            this.Instruccion();\r\n            this.Lista_instP();  \r\n        }else if(this.tokenActual.getTipo() == Tipo.p_res_while){\r\n            this.Instruccion();\r\n            this.Lista_instP();\r\n        }else if(this.tokenActual.getTipo() == Tipo.p_res_do){\r\n            this.Instruccion();\r\n            this.Lista_instP();\r\n        }else if(this.tokenActual.getTipo() == Tipo.p_for){\r\n            this.Instruccion();\r\n            this.Lista_instP();\r\n        }else if(this.tokenActual.getTipo() == Tipo.p_res_switch){\r\n            this.Instruccion();\r\n            this.Lista_instP();\r\n        }else if(this.tokenActual.getTipo() == Tipo.P_res_return && this.acepta_return_metodos == true){\r\n           this.Instruccion(); \r\n           this.Lista_instP();\r\n        }else if(this.tokenActual.getTipo() == Tipo.P_res_return && this.acepta_return_funciones == true){\r\n            this.Instruccion(); \r\n            this.Lista_instP();\r\n        }else if(this.tokenActual.getTipo() == Tipo.p_res_continue && this.acepta_sentencia_continue == true){\r\n            this.Instruccion(); \r\n            this.Lista_instP();\r\n        }else if(this.tokenActual.getTipo() == Tipo.p_res_break && this.esta_en_el_switch == false && this.acepta_sentencia_break == true){\r\n            this.Instruccion(); \r\n            this.Lista_instP();\r\n        }else if ( (this.tokenActual.getTipo() == Tipo.punto_y_coma || this.tokenActual.getTipo() == Tipo.llave_derecha) && this.hay_error == true ) {\r\n            this.hay_error = false;\r\n            console.log(\"[INSTRUCCION] SE RECUPERO CON EL SIMBOLO ; O }  EN LA FILA :\"+this.tokenActual.getFila());\r\n            this.sig++;\r\n            this.tokenActual = this.listaTok[this.sig];  \r\n            this.Instruccion();\r\n            this.Lista_instP();\r\n        } else {\r\n           \r\n              // epsilon -----\r\n              \r\n        }\r\n\r\n\r\n        // el ELSE ES MI EPSILON \r\n    }\r\n\r\n    //--------------------> INSTRUCCIONES FIN  <---------------------\r\n     /*   DECLARACION_ADENTRO_DE_METODOS_FUNCIONES-> tipo ID DeclaracionP_metodos\r\n    DeclaracionP_metodos -> Lista_ids asignacion \";\"*/\r\n    private DECLARACION_ADENTRO_DE_METODOS_FUNCIONES(){\r\n        this.vaciarVariables()//VACIA CONTENEDOR AUX \r\n        this.TipoActualVariable = this.tokenActual.getParaTabla();\r\n        this.Tipo(); \r\n        this.nombreVar = this.tokenActual.getValor_lexema();\r\n        this.nombres_variables_declaracion.push(new Tabla_Simbolos(this.tokenActual.getValor_lexema(),this.TipoActualVariable , this.tokenActual.getFila(), this.getValorPorDefecto(this.TipoActualVariable))); // NOM , TIP , FIL , VAL\r\n        this.Traducir = false;\r\n        this.parea(Tipo.id);\r\n        this.Traducir = true;\r\n        this.DeclaracionP_metodos();\r\n    }\r\n    private DeclaracionP_metodos(){\r\n        this.Lista_ids();\r\n        this.asignacion();\r\n        this.parea(Tipo.punto_y_coma);\r\n        // PUNTO DE SEND CANDENA TRADUCIDA \r\n        this.setValorAsignacion();\r\n     //   this.imprimirTABLA();\r\n        this.llenarListaTabla();\r\n    }\r\n\r\n    private sentencia_switch():void{\r\n        this.esta_en_el_switch = true;this.cadena_traducida+=\"def \";\r\n        this.parea(Tipo.p_res_switch);\r\n        this.parea(Tipo.parentesis_izq);  this.cadena_traducida +=\"case,\"\r\n        this.parea(Tipo.id);\r\n        this.parea(Tipo.parentesis_derecho); this.cadena_traducida+=\":\";\r\n        this.parea(Tipo.llave_izq);\r\n        this.tab(); this.cadena_traducida += \"switcher = {\\n\"; this.contadorTab++;\r\n        this.ListaCases();  // PREGUNTAR SI EL RETURN FUNCIONARIA EN VEZ DE UN BREAK\r\n        this.Default_();\r\n        this.tab(); this.cadena_traducida+= \"}\\n\";this.contadorTab--;\r\n        this.parea(Tipo.llave_derecha);\r\n        this.esta_en_el_switch = false;\r\n    }\r\n    private Default_(){\r\n        this.ignoraComentarios(); // SIEMPRE PARA PREGUNTAR A DONDE IR \r\n        if (this.tokenActual.getTipo() == Tipo.p_res_default)\r\n        {\r\n            this.tab();\r\n            this.parea(Tipo.p_res_default);\r\n            this.parea(Tipo.dosPuntos); this.salto();\r\n            this.Lista_inst(); \r\n            this.tab(); \r\n            this.parea(Tipo.p_res_break);this.cadena_traducida+=\",\";\r\n            this.parea(Tipo.punto_y_coma);\r\n        }\r\n        else {\r\n            // epsilón :v\r\n        }\r\n\r\n    }\r\n    private ListaCases(){\r\n        this.caseP();\r\n        this.ListaCasesP();\r\n    }\r\n\r\n    public recuperarDelError(){\r\n\r\n        if(this.hay_error == true && (this.tokenActual.getTipo() == Tipo.punto_y_coma || this.tokenActual.getTipo() == Tipo.llave_derecha  )){\r\n            this.hay_error = false; \r\n            this.sig++;\r\n            this.tokenActual = this.listaTok[this.sig];\r\n\r\n        }\r\n    }\r\n\r\n    private  ListaCasesP() {\r\n        this.ignoraComentarios();\r\n        if (this.tokenActual.getTipo() == Tipo.p_res_case)\r\n        {\r\n            this.caseP();\r\n            this.ListaCasesP();\r\n        }else if (this.tokenActual.getTipo() != Tipo.llave_derecha  && this.tokenActual.getTipo() != Tipo.sharp && this.tokenActual.getTipo() != Tipo.p_res_default   ) {\r\n            console.log(\"[ListaCasesP] RECUPERACION -->  \" + this.tokenActual.getValor_lexema()+\"   EN FILA : \"+this.tokenActual.getFila());\r\n            this.sig++;\r\n            this.tokenActual = this.listaTok[this.sig];\r\n            this.caseP();\r\n            this.ListaCasesP();\r\n          }\r\n        else\r\n        {\r\n            // epsilon -----\r\n        }\r\n\r\n\r\n    }\r\n    private caseP(){\r\n        this.tab(); this.Traducir = false;\r\n        this.parea(Tipo.p_res_case);  this.Traducir = true;\r\n        this.opcionCase(); \r\n        this.parea(Tipo.dosPuntos); this.cadena_traducida+=\"\\n\";\r\n        this.Lista_inst(); \r\n        this.tab(); \r\n        this.parea(Tipo.p_res_break);this.cadena_traducida+=\",\";\r\n        this.parea(Tipo.punto_y_coma);\r\n    }\r\n    private  opcionCase() {\r\n        this.ignoraComentarios();\r\n        \r\n        if (this.tokenActual.getTipo() == Tipo.numero) {\r\n            this.parea(Tipo.numero);\r\n        } else if (this.tokenActual.getTipo() == Tipo.cadena) {\r\n            this.parea(Tipo.cadena);\r\n        } else if(this.tokenActual.getTipo() == Tipo.id){\r\n            this.parea(Tipo.id);\r\n        }\r\n        else {\r\n            this.parea(Tipo.caracter); // cae un error si no es un caracter acá\r\n        }\r\n    }\r\n    private sentencia_for():void{ this.acepta_sentencia_continue = true;  this.acepta_sentencia_break =true ;\r\n    this.parea(Tipo.p_for);this.Traducir= false;\r\n    this.parea(Tipo.parentesis_izq);\r\n    this.declaracionFOR();this.NO_salto =true;\r\n    this.parea(Tipo.punto_y_coma);// PUNTO Y COMA DONDE NO DEBE HACER SALTO \r\n    this.lista_expresiones_condicionales();this.definirRango_for();\r\n    this.parea(Tipo.punto_y_coma);// PUNTO Y COMA DONDE NO DEBE HACER SALTO \r\n    this.parea(Tipo.id);this.NO_salto =false;\r\n    this.DecrementoIncremento();\r\n    this.parea(Tipo.parentesis_derecho);\r\n    this.ListaIns_entreLLaves(); \r\n    this.acepta_sentencia_continue = false; this.acepta_sentencia_break =false ; this.guardarIntervalo = 0;\r\n    }\r\n    private declaracionFOR(){\r\n        this.ignoraComentarios(); // VA SIEMPRE ANTES DE PREGUNTAR A DONDE MOVERME \r\n        if(this.tokenActual.getTipo() == Tipo.id){this.Traducir = true;this.cadena_traducida += \" \";\r\n            this.parea(Tipo.id);\r\n            this.cadena_traducida+= \" in range(\" ;this.Traducir= false;\r\n            this.parea(Tipo.igual);this.guardarIntervalo = 1 ; \r\n            this.expresion();\r\n           // this.cadena_traducida+=this.intervalo1 +\",\";\r\n        }else{\r\n            this.TipoActualVariable = this.tokenActual.getParaTabla(); // GUARDO EL TIPO \r\n            this.Tipo(); this.Traducir = true; this.cadena_traducida += \" \";\r\n            let id:string = \"\"; \r\n            id = this.tokenActual.getValor_lexema();\r\n            let fila:number = 0; \r\n            fila = this.tokenActual.getFila();\r\n            this.parea(Tipo.id);\r\n            this.cadena_traducida+= \" in range(\" ;this.Traducir= false;\r\n            this.parea(Tipo.igual);\r\n            this.guardarIntervalo = 1 ;// interruptor para saber en donde guardar\r\n            this.GUARDAR_EXPRESION=\"\";// LIMPIA \r\n            this.save_expression = true;\r\n            this.expresion();\r\n            this.save_expression = false;\r\n            console.log(\"INTERVALO 1 \"+id+\" = \"+ this.GUARDAR_EXPRESION);\r\n            this.INTERVALO1_  = this.GUARDAR_EXPRESION;\r\n            this.tabla.push(new Tabla_Simbolos(id,this.TipoActualVariable ,fila ,this.GUARDAR_EXPRESION )); // NOM , TIP , FIL , VAL\r\n            // this.cadena_traducida+=this.intervalo1 +\",\";\r\n        }\r\n    }\r\n    private DecrementoIncremento(){\r\n        this.ignoraComentarios();\r\n        if(this.tokenActual.getTipo() == Tipo.decremento){\r\n            this.parea(Tipo.decremento);\r\n        }else{\r\n            this.parea(Tipo.incremento);\r\n        }\r\n    }\r\n    private sentencia_do_while():void{this.acepta_sentencia_continue = true; this.acepta_sentencia_break =true ; this.Traducir = false; \r\n        this.cadena_traducida+=\"while True:\";\r\n        this.parea(Tipo.p_res_do);this.Traducir = true;\r\n        this.ListaIns_entreLLaves();\r\n        this.Traducir = false;\r\n        this.parea(Tipo.p_res_while);this.tab(); this.cadena_traducida+=\"if \"; this.Traducir = true;\r\n        this.parea(Tipo.parentesis_izq);\r\n        this.lista_expresiones_condicionales(); \r\n        this.parea(Tipo.parentesis_derecho);this.cadena_traducida+=\":\\n\";this.tab(); this.cadena_traducida+=\"\\tbreak\\n\" \r\n        this.parea(Tipo.punto_y_coma);this.acepta_sentencia_continue = false;this.acepta_sentencia_break = false;\r\n    }\r\n    private sentencia_while():void{ this.acepta_sentencia_continue = true; this.acepta_sentencia_break = true ;\r\n        this.parea(Tipo.p_res_while);\r\n        this.parea(Tipo.parentesis_izq);\r\n        this.lista_expresiones_condicionales();\r\n        this.parea(Tipo.parentesis_derecho);\r\n        this.ListaIns_entreLLaves();\r\n        this.acepta_sentencia_continue = false;  this.acepta_sentencia_break = false ;\r\n    }\r\n\r\n    private Declaracion(){\r\n        this.ignoraComentarios();\r\n        this.Traducir = false;\r\n        if(this.tokenActual.getTipo() == Tipo.p_res_void){\r\n            \r\n          this.parea(Tipo.p_res_void);this.Traducir = true;this.acepta_return_metodos = true; \r\n          this.tab();\r\n           this.cadena_traducida += \"def \";\r\n            if(this.tokenActual.getValor_lexema() == \"main\"){\r\n                this.esElMain = true;\r\n            }\r\n            this.parea(Tipo.id);\r\n            this.parea(Tipo.parentesis_izq);\r\n            this.opcionMetodoFuncion();\r\n        }else{\r\n            this.vaciarVariables()//VACIA CONTENEDOR AUX \r\n            this.TipoActualVariable = this.tokenActual.getParaTabla();\r\n            \r\n            this.Tipo(); \r\n            this.nombreVar = this.tokenActual.getValor_lexema();\r\n            this.nombres_variables_declaracion.push(new Tabla_Simbolos(this.tokenActual.getValor_lexema(),this.TipoActualVariable , this.tokenActual.getFila(), this.getValorPorDefecto(this.TipoActualVariable))); // NOM , TIP , FIL , VAL\r\n            this.Traducir = false; \r\n            this.parea(Tipo.id);\r\n            this.Traducir = true;\r\n            this.DeclaracionP();\r\n        }\r\n    }\r\n    private vaciarVariables(){\r\n        let Vaciar:any =[];\r\n        this.nombres_variables_declaracion = Vaciar;\r\n    }\r\n    public imprimirTABLA(){\r\n        console.log(\"-------IMPRIMIENDO TABLA-------\");\r\n        for (let x = 0; x <this.nombres_variables_declaracion.length; x++) {\r\n            console.log(\"VARIABLE \" + this.nombres_variables_declaracion[x].getNombre() + \" TIPO: \" + this.nombres_variables_declaracion[x].getTipo() + \" Fila \" + this.nombres_variables_declaracion[x].getFila() );\r\n        }\r\n    }\r\n    public getValorPorDefecto(tipo:string):string{\r\n        if(tipo == \"int\"){// SI CAMBIO ALGO ACA TENGO QUE CAMBIARLO TAMBIEN EN TOKEN \r\n            return \"0\";\r\n        }\r\n        else if(tipo == \"char\"){\r\n            return \"\\' \\'\"\r\n\r\n        }else if(tipo == \"string\"){\r\n            return \"\\\"\\\"\";\r\n\r\n        }else if(tipo == \"Bool\"){\r\n            return \"True\"\r\n        }else if(tipo == \"Double\"){\r\n            return \"0.00\"\r\n        }else{\r\n            return \" \";\r\n        }\r\n    }\r\n    \r\n    private opcionMetodoFuncion(){\r\n        this.ignoraComentarios();\r\n        if(this.tokenActual.getTipo() == Tipo.parentesis_derecho || this.esElMain == true){\r\n            this.parea(Tipo.parentesis_derecho); this.cadena_traducida += \":\";\r\n            this.ListaIns_entreLLaves();\r\n            this.acepta_return_metodos = false;\r\n             this.acepta_return_funciones = false; \r\n             this.esElMain = false;\r\n        }else{\r\n            this.Tipo(); \r\n            this.parea(Tipo.id);\r\n            this.lista_parametros(); \r\n            this.parea(Tipo.parentesis_derecho);this.cadena_traducida += \":\";\r\n            this.ListaIns_entreLLaves();this.acepta_return_metodos = false;\r\n            this.acepta_return_funciones = false;  \r\n            this.esElMain = false;  \r\n        }\r\n    }\r\n    private ListaIns_entreLLaves(){\r\n      \r\n        this.parea(Tipo.llave_izq);\r\n        this.Lista_inst();\r\n        this.Traducir= false;\r\n        if(this.esElMain == true){\r\n            this.cadena_traducida +=\"\\n\";\r\n            this.tab();\r\n            this.cadena_traducida += \"if_name_ = \\\"_main_\\\": \\n\";\r\n            this.tab(); \r\n            this.cadena_traducida+=\"\\tmain()\\n\";\r\n        }\r\n        this.parea(Tipo.llave_derecha);\r\n       this.Traducir = true;\r\n    }\r\n    private DeclaracionP(){\r\n        this.ignoraComentarios();\r\n        if(this.tokenActual.getTipo() == Tipo.parentesis_izq){\r\n            this.tab();this.cadena_traducida+=\"def \"+ this.nombreVar;\r\n            this.parea(Tipo.parentesis_izq);this.acepta_return_funciones = true;\r\n            this.opcionMetodoFuncion();\r\n        }else{\r\n             this.Lista_ids();\r\n             this.asignacion();\r\n             this.parea(Tipo.punto_y_coma);\r\n             // PUNTO DE SEND CANDENA TRADUCIDA \r\n             this.setValorAsignacion();\r\n          //   this.imprimirTABLA();\r\n             this.llenarListaTabla();\r\n            }\r\n    }\r\n    public llenarListaTabla(){\r\n        for (let x = 0; x <this.nombres_variables_declaracion.length; x++) {\r\n            let obj:Tabla_Simbolos = new Tabla_Simbolos(this.nombres_variables_declaracion[x].getNombre() , this.nombres_variables_declaracion[x].getTipo() , this.nombres_variables_declaracion[x].getFila()  , this.nombres_variables_declaracion[x].getValor());\r\n            this.tabla.push(obj);\r\n        } \r\n    }\r\n    private setValorAsignacion(){\r\n        if(this.GUARDAR_EXPRESION ==\"NO\"){\r\n            for (let x = 0; x <this.nombres_variables_declaracion.length; x++) {\r\n                this.tab();\r\n                this.cadena_traducida+=\"var \" +this.nombres_variables_declaracion[x].getNombre() +\" = \" +this.nombres_variables_declaracion[x].getValor() +\"\\n\";\r\n            }\r\n             \r\n        }else{\r\n            for (let x = 0; x <this.nombres_variables_declaracion.length; x++) {\r\n                this.tab();\r\n                this.cadena_traducida+=\"var \" + this.nombres_variables_declaracion[x].getNombre() +\" = \" +this.GUARDAR_EXPRESION +\"\\n\";\r\n            } \r\n           \r\n        }\r\n    }\r\n    public imprimirTABLA_SEND(){\r\n        console.log(\" IMPRIMIENDO TABLA a MOSTRAR \");\r\n        for (let x = 0; x < this.tabla.length; x++) {\r\n            console.log(\"VAR: \" + this.tabla[x].getNombre() + \" TIPO: \" + this.tabla[x].getTipo() + \" Fila \" + this.tabla[x].getFila() +\" VALOR: \"+this.tabla[x].getValor());\r\n        }    \r\n    }\r\n    private Lista_ids(){\r\n        this.ignoraComentarios();\r\n        if(this.tokenActual.getTipo() == Tipo.coma ){\r\n            this.Traducir = false;\r\n            this.parea(Tipo.coma);\r\n            this.nombres_variables_declaracion.push(new Tabla_Simbolos(this.tokenActual.getValor_lexema(),this.TipoActualVariable , this.tokenActual.getFila(), this.getValorPorDefecto(this.TipoActualVariable))); // NOM , TIP , FIL , VAL\r\n            this.parea(Tipo.id);\r\n            this.Lista_ids();\r\n            this.Traducir = true;\r\n             // PARA VER QUE PEX :v\r\n\r\n        }else{\r\n            // EPSILON \r\n        }\r\n       \r\n    }\r\n    private asignacion(){\r\n        this.ignoraComentarios();\r\n        if(this.tokenActual.getTipo() == Tipo.igual){\r\n            this.Traducir = false;\r\n            this.GUARDAR_EXPRESION =\"\";\r\n            this.parea(Tipo.igual);\r\n            this.save_expression = true;\r\n            this.expresion();\r\n            this.save_expression = false;\r\n            this.Traducir = true;\r\n        }else{\r\n             this.GUARDAR_EXPRESION =\"NO\";\r\n            // epsilon \r\n        }\r\n    }\r\n    private asignacionSimple():void{\r\n        this.parea(Tipo.id);\r\n        this.OpcionAsignacion();\r\n    }\r\n    private OpcionAsignacion(){\r\n        this.ignoraComentarios();\r\n        if(this.tokenActual.getTipo() == Tipo.parentesis_izq){\r\n         // CASO DE LLAMANDO METODO \r\n         this.parea(Tipo.parentesis_izq);\r\n         this.sentencia_llama_metodo(); \r\n         this.parea(Tipo.punto_y_coma); // this.salto();\r\n        }else{\r\n            \r\n           this.parea(Tipo.igual);\r\n          \r\n           this.expresion();\r\n           this.parea(Tipo.punto_y_coma);// this.salto();\r\n        }\r\n    }\r\n    private ListaExpresiones(){\r\n        this.expresion();\r\n       this.ListaExpresionesP();\r\n    }\r\n    private ListaExpresionesP(){\r\n        this.ignoraComentarios();\r\n        if(this.tokenActual.getTipo() == Tipo.coma){\r\n            this.parea(Tipo.coma);\r\n            this.expresion();\r\n            this.ListaExpresionesP();\r\n        }else{\r\n            // epsilon \r\n        }\r\n    }\r\n    private sentencia_llama_metodo(){\r\n        this.ignoraComentarios();\r\n        if(this.tokenActual.getTipo() == Tipo.parentesis_derecho){     \r\n            this.parea(Tipo.parentesis_derecho);\r\n        }else{\r\n             this.ListaExpresiones();\r\n             this.parea(Tipo.parentesis_derecho);\r\n        }\r\n    }\r\n    private  lista_parametros(){\r\n        this.ignoraComentarios();\r\n        if(this.tokenActual.getTipo() == Tipo.coma){\r\n            this.parea(Tipo.coma);\r\n            this.Tipo(); \r\n            this.parea(Tipo.id);\r\n            this.lista_parametros();\r\n        }else{\r\n            // epsilon \r\n        }\r\n\r\n    }\r\n    private Tipo(){\r\n        this.ignoraComentarios();\r\n        this.Traducir = false; \r\n        if(this.tokenActual.getTipo() == Tipo.p_res_Int){\r\n            this.parea(Tipo.p_res_Int);\r\n        }else if( this.tokenActual.getTipo() == Tipo.p_res_double ){\r\n            this.parea(Tipo.p_res_double);\r\n        }else if ( this.tokenActual.getTipo() == Tipo.p_res_Char){\r\n            this.parea(Tipo.p_res_Char);\r\n        }else if(this.tokenActual.getTipo() == Tipo.p_res_String){\r\n            this.parea(Tipo.p_res_String);\r\n        }else{\r\n            this.parea(Tipo.p_res_Bool);\r\n        }\r\n        this.Traducir = true;\r\n    }\r\n   \r\n    private sentenciaImprime():void{\r\n        this.Traducir = false;this.viene_de_sentencia_imprimir = true;\r\n        this.cadena_traducida += \"print\";\r\n        this.parea(Tipo.p_Console);\r\n        this.parea(Tipo.punto);\r\n        this.parea(Tipo.p_Write);this.al_menos_una_cadena = false;\r\n        this.Traducir = true;\r\n        this.parea(Tipo.parentesis_izq);\r\n        this.expresion();\r\n        this.parea(Tipo.parentesis_derecho);\r\n        this.parea(Tipo.punto_y_coma);this.viene_de_sentencia_imprimir = false; this.al_menos_una_cadena = true;\r\n    }\r\n        \r\n    \r\n    private sentencia_if(){\r\n        this.parea(Tipo.p_res_if);this.cadena_traducida+=\" \";this.Traducir = false;\r\n        this.parea(Tipo.parentesis_izq);this.Traducir = true;\r\n        this.lista_expresiones_condicionales();this.Traducir = false;\r\n        this.parea(Tipo.parentesis_derecho); this.Traducir = true; this.cadena_traducida +=\":\";this.Traducir = false;\r\n        this.parea(Tipo.llave_izq); this.Traducir = true; //this.salto();\r\n        this.Lista_inst(); this.Traducir = false;\r\n        this.parea(Tipo.llave_derecha);this.Traducir = true; //this.salto();\r\n        this.elseP();\r\n    }\r\n    private elseP(){\r\n        this.tab(); this.ignoraComentarios();\r\n\r\n        if (this.tokenActual.getTipo() == Tipo.p_res_else) {\r\n            this.Traducir = false;\r\n            this.parea(Tipo.p_res_else);\r\n            this.Traducir= true; \r\n            this.multiplesIf();\r\n        } else { \r\n            // EPSILON \r\n        }\r\n       \r\n    }\r\n    private multiplesIf(){\r\n        this.ignoraComentarios();\r\n        if(this.tokenActual.getTipo() == Tipo.llave_izq){\r\n            this.cadena_traducida+=\"else\"; this.Traducir = false;\r\n            this.parea(Tipo.llave_izq);  this.Traducir= true; //this.salto();\r\n            this.Lista_inst();this.Traducir = false;\r\n            this.parea(Tipo.llave_derecha); this.Traducir = true; //this.salto();\r\n        }else{\r\n\r\n            this.sentencia_elif();\r\n        }\r\n    }\r\n    private sentencia_elif(){\r\n        this.Traducir = false; this.cadena_traducida +=\"elif\";\r\n        this.parea(Tipo.p_res_if);this.cadena_traducida+=\" \";this.Traducir = false;\r\n        this.parea(Tipo.parentesis_izq);this.Traducir = true;\r\n        this.lista_expresiones_condicionales();this.Traducir = false;\r\n        this.parea(Tipo.parentesis_derecho); this.Traducir = true; this.cadena_traducida +=\":\";this.Traducir = false;\r\n        this.parea(Tipo.llave_izq); this.Traducir = true; //this.salto();\r\n        this.Lista_inst(); this.Traducir = false;\r\n        this.parea(Tipo.llave_derecha); this.Traducir = true;//this.salto();\r\n        this.elseP();        \r\n    }\r\n    private sentencia_return_funciones(){\r\n        this.parea(Tipo.P_res_return);this.cadena_traducida+=\" \";\r\n        this.lista_expresiones_condicionales(); \r\n        this.parea(Tipo.punto_y_coma); \r\n    }\r\n    private sentencia_return_metodos(){\r\n        this.parea(Tipo.P_res_return);\r\n        this.parea(Tipo.punto_y_coma); \r\n    }\r\n    private sentencia_continue(){\r\n        this.parea(Tipo.p_res_continue);\r\n        this.parea(Tipo.punto_y_coma);\r\n    }\r\n    private sentencia_break(){\r\n        this.parea(Tipo.p_res_break);\r\n        this.parea(Tipo.punto_y_coma);\r\n    }\r\n\r\n    private lista_expresiones_condicionales(){\r\n        this.guardarIntervalo= 2;this.guardaIntervalorFor(this.tokenActual.getValor_lexema());\r\n        this.expresion(); this.guardarIntervalo =0;\r\n        this.lista_expresiones_condicionalesP();\r\n    }\r\n\r\n    private lista_expresiones_condicionalesP(){\r\n        this.ignoraComentarios();\r\n       if(this.tokenActual.getTipo() == Tipo.sb_and){ this.cadena_traducida+=\" and \";this.Traducir = false;\r\n        this.parea(Tipo.sb_and);this.Traducir = true;\r\n        this.expresion(); \r\n        this.lista_expresiones_condicionalesP();\r\n       }else if(this.tokenActual.getTipo() == Tipo.sb_or){this.cadena_traducida+=\" or \";this.Traducir = false;\r\n        this.parea(Tipo.sb_or);this.Traducir = true;\r\n        this.expresion(); \r\n        this.lista_expresiones_condicionalesP();\r\n       }else{\r\n           // epsilon \r\n       }\r\n    }\r\n    \r\n    // ------------------> EXPRESIONES <----------------------------\r\n    private expresionMetodo(){\r\n        this.ignoraComentarios();\r\n        if(this.tokenActual.getTipo() == Tipo.parentesis_izq){\r\n            this.parea(Tipo.parentesis_izq);\r\n            this.sentencia_llama_metodo(); \r\n          \r\n        }else{\r\n            // EPSILON \r\n        }\r\n    }\r\n    private  expresion() {\r\n        this.E();\r\n        this.simboloComparacionOpcional();\r\n    }\r\n    private E(){ // E-> T() EP\r\n        this.T();\r\n        this.EP();// E PRIMA \r\n\r\n    }\r\n    private T(){\r\n            // T->F TP  = T-> FT'\r\n        this.F();\r\n        this.TP();\r\n    }\r\n    private TP ():void\r\n    {\r\n        this.ignoraComentarios();\r\n        if (this.tokenActual.getTipo() == Tipo.sb_por)\r\n        {\r\n            // TP-> * F TP\r\n            this.parea(Tipo.sb_por);\r\n            this.F();\r\n            this.TP();\r\n        }\r\n        else if (this.tokenActual.getTipo() == Tipo.sb_division)\r\n        {\r\n            // TP-> / F TP\r\n            this.parea(Tipo.sb_division);\r\n            this.F();\r\n            this.TP();\r\n        }\r\n        else\r\n        {\r\n            // TP-> EPSILON\r\n        }\r\n    }\r\n    private guardaIntervalorFor(loqueVenga:any){\r\n        if(this.guardarIntervalo == 1){\r\n            this.intervalo1 = loqueVenga;\r\n        }else if(this.guardarIntervalo == 2){\r\n            this.intervalo2 = loqueVenga;\r\n        }\r\n    }\r\n    public  F():void\r\n    {\r\n        this.ignoraComentarios(); \r\n  \r\n       if(this.tokenActual.getTipo() == Tipo.numero){\r\n        this.guardaIntervalorFor(this.tokenActual.getValor_lexema());\r\n       }\r\n\r\n        if (this.tokenActual.getTipo() == Tipo.decimales)\r\n        {\r\n            //F->  NUMERO\r\n            this.parea(Tipo.decimales);\r\n        }\r\n        else if (this.tokenActual.getTipo() == Tipo.parentesis_izq)\r\n        {\r\n            //F->  (E)\r\n            this.parea(Tipo.parentesis_izq);\r\n            this.expresion();\r\n            this.parea(Tipo.parentesis_derecho);\r\n        }\r\n        \r\n        else if (this.tokenActual.getTipo() == Tipo.cadena)\r\n        {\r\n            //F->  CADENA\r\n            this.al_menos_una_cadena = true;\r\n            this.parea(Tipo.cadena);\r\n        }\r\n        else if (this.tokenActual.getTipo() == Tipo.id)\r\n        {\r\n            //F->  id\r\n            this.parea(Tipo.id);\r\n            this.expresionMetodo();\r\n        }\r\n        else if (this.tokenActual.getTipo() == Tipo.p_res_true)\r\n        {\r\n            //F->  TRUE\r\n            this.Traducir = false; this.cadena_traducida+=\"True\";\r\n            this.parea(Tipo.p_res_true);\r\n            this.Traducir= true;\r\n        }\r\n        else if (this.tokenActual.getTipo() == Tipo.p_res_false)\r\n        {\r\n            //F->  FALSE\r\n            this.Traducir = false; this.cadena_traducida+=\"False\";\r\n            this.parea(Tipo.p_res_false);\r\n            this.Traducir= true;\r\n        }\r\n        else if (this.tokenActual.getTipo() == Tipo.caracter)\r\n        {\r\n            // caracter \r\n \r\n            this.parea(Tipo.caracter);\r\n        }\r\n        else if(this.tokenActual.getTipo() == Tipo.sb_negacion){\r\n            this.Traducir= false;\r\n            this.parea(Tipo.sb_negacion);this.cadena_traducida +=\" not \"; this.Traducir= true;\r\n            this.E();\r\n        }else if(this.viene_de_sentencia_imprimir == true && this.tokenActual.getTipo() == Tipo.html){\r\n                let cad_temporal = this.tokenActual.getValor_lexema();\r\n                for(let k = 1 ; k< cad_temporal.length-1 ; k++){\r\n                    this.cadena_html+=cad_temporal[k];\r\n                }\r\n                \r\n                this.parea(Tipo.html);\r\n        }\r\n        else \r\n        {\r\n            // EXCEPTION  \r\n            this.parea(Tipo.numero);\r\n        }\r\n    }\r\n    private EP(){\r\n        this.ignoraComentarios();\r\n            if (this.tokenActual.getTipo() == Tipo.sb_mas)\r\n            {\r\n                //EP-> + T EP\r\n\r\n                this.parea(Tipo.sb_mas);\r\n                this.T();\r\n                this.EP();\r\n            }\r\n            else if (this.tokenActual.getTipo() == Tipo.sb_menos)\r\n            {\r\n                //EP-> - T EP\r\n                this.parea(Tipo.sb_menos);\r\n                this.T();\r\n                this.EP();\r\n            }\r\n            else\r\n            {\r\n                // EP-> EPSILON\r\n            }\r\n    }\r\n\r\n    public definirRango_for(){ // numero , numero): saLTO DE LINEA\r\n        if(this.la_cadena_son_solo_numeros(this.INTERVALO1_) == true && this.la_cadena_son_solo_numeros(this.INTERVALO2_) == true ){\r\n            if(this.simboloComparativoFor == \">=\"){\r\n                // quiere decir que el primero es mas pequeño \r\n                let num:number = parseInt( this.intervalo1)+1;\r\n                let num2:number = parseInt( this.intervalo2) + 1;\r\n                this.cadena_traducida+=num2+\",\"+num+\"):\\n\";\r\n            }else if (this.simboloComparativoFor == \"<=\"){\r\n                let num:number = parseInt( this.intervalo1) + 1;\r\n                let num2:number = parseInt( this.intervalo2) + 1;\r\n                this.cadena_traducida+=num +\",\"+num2+\"):\\n\";\r\n            }else if (this.simboloComparativoFor == \"<\"){\r\n                let num:number = parseInt( this.intervalo1) + 1;\r\n                this.cadena_traducida+= num+\",\"+ this.intervalo2+\"):\\n\";\r\n            }else if (this.simboloComparativoFor == \">\"){\r\n                let num2:number = parseInt( this.intervalo2) + 1;\r\n                this.cadena_traducida+=num2+\",\"+this.intervalo1+\"):\\n\";\r\n            }\r\n        }else{\r\n            this.cadena_traducida+= this.INTERVALO1_+\",\"+this.INTERVALO2_+\"):\\n\";\r\n        }\r\n\r\n    }\r\n\r\n    private simboloComparacionOpcional(){\r\n        this.ignoraComentarios();\r\n        // PARA TRAUDCIR\r\n        if(this.guardarIntervalo == 2){\r\n           this.simboloComparativoFor = this.tokenActual.getValor_lexema();\r\n        }    \r\n        //----\r\n        if (this.tokenActual.getTipo() == Tipo.igualComparacion)\r\n        {             // simboloComparacionOpcional  -> == E\r\n            this.parea(Tipo.igualComparacion);\r\n            if(this.guardarIntervalo == 2){\r\n                this.GUARDAR_EXPRESION=\"\";// LIMPIA \r\n                this.save_expression = true;\r\n                this.E();\r\n                this.save_expression = false;\r\n                console.log(\"INTERVALO 2 == \"+ this.GUARDAR_EXPRESION);\r\n                this.INTERVALO2_ = this.GUARDAR_EXPRESION;\r\n             }else{\r\n                this.E();\r\n             }    \r\n\r\n        }\r\n        else if (this.tokenActual.getTipo() == Tipo.mayor_que)\r\n        {             // simboloComparacionOpcional  -> > E\r\n            this.parea(Tipo.mayor_que);\r\n            if(this.guardarIntervalo == 2){\r\n                this.GUARDAR_EXPRESION=\"\";// LIMPIA \r\n                this.save_expression = true;\r\n                this.E();\r\n                this.save_expression = false;\r\n                console.log(\"INTERVALO 2 > \"+ this.GUARDAR_EXPRESION);\r\n                this.INTERVALO2_ = this.GUARDAR_EXPRESION;\r\n             }else{\r\n                this.E();\r\n             }    \r\n        }\r\n        else if (this.tokenActual.getTipo() == Tipo.menor_que)\r\n        {\r\n            this.parea(Tipo.menor_que);\r\n            if(this.guardarIntervalo == 2){\r\n                this.GUARDAR_EXPRESION=\"\";// LIMPIA \r\n                this.save_expression = true;\r\n                this.E();\r\n                this.save_expression = false;\r\n                console.log(\"INTERVALO 2 < \"+ this.GUARDAR_EXPRESION);\r\n                this.INTERVALO2_ = this.GUARDAR_EXPRESION;\r\n             }else{\r\n                this.E();\r\n             }    \r\n        }\r\n        else if (this.tokenActual.getTipo() == Tipo.menor_o_igual)\r\n        { \r\n            this.parea(Tipo.menor_o_igual);\r\n            if(this.guardarIntervalo == 2){\r\n                this.GUARDAR_EXPRESION=\"\";// LIMPIA \r\n                this.save_expression = true;\r\n                this.E();\r\n                this.save_expression = false;\r\n                console.log(\"INTERVALO 2 <= \"+ this.GUARDAR_EXPRESION);\r\n                this.INTERVALO2_ = this.GUARDAR_EXPRESION;\r\n             }else{\r\n                this.E();\r\n             }    \r\n        }\r\n        else if (this.tokenActual.getTipo() == Tipo.mayor_o_igual)\r\n        {             // simboloComparacionOpcional  ->   >= E\r\n            this.parea(Tipo.mayor_o_igual);\r\n            if(this.guardarIntervalo == 2){\r\n                this.GUARDAR_EXPRESION=\"\";// LIMPIA \r\n                this.save_expression = true;\r\n                this.E();\r\n                this.save_expression = false;\r\n                console.log(\"INTERVALO 2 >= \"+ this.GUARDAR_EXPRESION);\r\n                this.INTERVALO2_ = this.GUARDAR_EXPRESION;\r\n             }else{\r\n                this.E();\r\n             }    \r\n        }\r\n        else if (this.tokenActual.getTipo() == Tipo.diferente)\r\n        {             // simboloComparacionOpcional  ->   != E\r\n            this.parea(Tipo.diferente);\r\n            if(this.guardarIntervalo == 2){\r\n                this.GUARDAR_EXPRESION=\"\";// LIMPIA \r\n                this.save_expression = true;\r\n                this.E();\r\n                this.save_expression = false;\r\n                console.log(\"INTERVALO 2 != \"+ this.GUARDAR_EXPRESION);\r\n                this.INTERVALO2_ = this.GUARDAR_EXPRESION;\r\n             }else{\r\n                this.E();\r\n             }    \r\n        }\r\n        else\r\n        {\r\n            // simboloComparacionOpcional  -> -EPSILON\r\n        }\r\n    } \r\n    public la_cadena_son_solo_numeros(intervaloN:string):boolean{\r\n        console.log(\"***********************************************\");\r\n        console.log(\"Revisando el intervalo: \" + intervaloN);\r\n        for (let i = 0; i < intervaloN.length; i++) {\r\n            let caracter:any = intervaloN[i];\r\n              if(this.esDigito(caracter)){\r\n\r\n              }else{\r\n                  console.log(\"NO es un numero\");\r\n                  console.log(\"***********************************************\");\r\n\r\n                  return false;\r\n              }\r\n        }\r\n        console.log(\"SI es un numero\");\r\n        console.log(\"***********************************************\");\r\n\r\n        return true; \r\n    }\r\n\r\n    public esDigito (caracter){\r\n        let ascii = caracter.charCodeAt(0);\r\n        return ascii > 47 && ascii < 58;\r\n    }\r\n\r\n   \r\n    private parea(tip : Tipo):void{\r\n    // LLAMAR A IGNORA COMENTARIOS \r\n    this.ignoraComentarios();\r\n    if(this.tokenActual.getTipo() != tip){\r\n    if(this.hay_error == false){\r\n        this.lista_errores_sin.push(new ErroresSintacticos(this.tokenActual.getFila() , this.tokenActual.getColumna() ,this.getTipoParaError(tip), this.tokenActual.getTipo_str() ));\r\n        console.log(\"se activo un   ERROR en la fila \" + this.tokenActual.getFila() + \"SE ESPERABA \" + this.getTipoParaError(tip) + \"en lugar de \"+ this.tokenActual.getTipo_str() );\r\n        this.hay_error = true;\r\n    }\r\n    }\r\n            \r\n    if((this.hay_error == true && this.tokenActual.getTipo() == Tipo.punto_y_coma && tip == Tipo.punto_y_coma) || (this.hay_error == true && this.tokenActual.getTipo() == Tipo.llave_derecha && tip == Tipo.llave_derecha) ){// truncamiento de fin de \r\n        this.hay_error = false;\r\n        console.log(\"[PAREA]SE RECUPERO a partir de la fila :  \" + this.tokenActual.getFila());\r\n    }\r\n\r\n    if (this.tokenActual.getTipo() != Tipo.sharp) // AGREGAR EL SHARP \r\n    {  \r\n        if(this.tomarLLaves){   \r\n            this.ControldeLLaves();\r\n        }\r\n\r\n        if((this.tokenActual.getTipo() == Tipo.punto_y_coma|| this.tokenActual.getTipo() == Tipo.llave_derecha || this.tokenActual.getTipo() == Tipo.llave_izq) && this.NO_salto == false){\r\n            this.cadena_traducida = this.cadena_traducida + \"\\n\";\r\n        }\r\n        if(this.save_expression == true){\r\n            this.GUARDAR_EXPRESION += this.tokenActual.getValor_lexema();\r\n        }\r\n \r\n            if (this.Traducir) {\r\n            if(this.tokenActual.getTipo() != Tipo.punto_y_coma && this.tokenActual.getTipo() != Tipo.llave_izq && this.tokenActual.getTipo() != Tipo.llave_derecha){\r\n                // si viene un switcher si le agrego LAS LLAVES  \r\n                if(this.viene_de_sentencia_imprimir == true && this.al_menos_una_cadena == true && this.tokenActual.getTipo() == Tipo.sb_mas){\r\n                    this.cadena_traducida+=\",\";\r\n                }else{\r\n                    this.cadena_traducida += this.tokenActual.getValor_lexema();\r\n                } \r\n            }    \r\n            }// fin traducir\r\n         \r\n        if(this.hay_error){\r\n            // CUANDO DEJO DE CAMBIAR DE TOKENS , debo desechar hasta llegar a punto y coma o llave de cierre\r\n            if(\r\n               this.tokenActual.getTipo() != Tipo.punto_y_coma &&\r\n               this.tokenActual.getTipo() != Tipo.llave_derecha &&\r\n               this.tokenActual.getTipo() != Tipo.sharp\r\n               ){\r\n            this.sig++;\r\n            this.tokenActual = this.listaTok[this.sig];\r\n            }   \r\n          \r\n        }else{\r\n            this.sig++;\r\n            this.tokenActual = this.listaTok[this.sig];\r\n        }\r\n    \r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nprivate salto():void{\r\n    // es solo para los primeros de cada instruccion \r\n    this.cadena_traducida += \"\\n\";\r\n}\r\n\r\nprivate ControldeLLaves():void{ // QUITAR 2 CASOS \r\n\r\n    if (this.tokenActual.getTipo() == Tipo.llave_izq)\r\n    {\r\n\r\n        this.contadorTab++;\r\n       //alert(\"contador de tabs POR LLAVE + :\" + this.contadorTab  +\"  en linea: \" +this.tokenActual.getFila());\r\n\r\n\r\n    } else if (this.tokenActual.getTipo() == Tipo.llave_derecha) {\r\n        this.contadorTab--;\r\n      //alert(\"contador de tabs POR LLAVE - en :\" + this.contadorTab+\"  en linea: \" +this.tokenActual.getFila());\r\n    }\r\n}\r\n\r\nprivate ignoraComentarios():void {\r\n    while (this.tokenActual.getTipo() == Tipo.comentarioBloques || this.tokenActual.getTipo() == Tipo.comentarioLinea)\r\n    {\r\n        this.sig++;\r\n        this.tokenActual = this.listaTok[this.sig];\r\n    }\r\n}\r\n\r\nprivate tab():void {\r\n   \r\n    for (let i:number = 0; i < this.contadorTab ; i++)\r\n    {\r\n        this.cadena_traducida += \"\\t\";\r\n    }\r\n}\r\n\r\n\r\nprivate getTipoParaError(tip : Tipo):string{\r\nswitch (tip) {\r\n    case Tipo.sb_mas:\r\n        return \"mas\";\r\n    case Tipo.sb_menos:\r\n        return \"menos\";\r\n    case Tipo.sb_por:\r\n        return \"Por\";\r\n    case Tipo.sb_division:\r\n        return \"division\";\r\n    case Tipo.parentesis_izq:\r\n        return \"Parentesis_izquierdo\";\r\n    case Tipo.parentesis_derecho:\r\n        return \"Parentesis Derecho\";\r\n    case Tipo.llave_izq:\r\n        return \"LLave_izquierda\";\r\n    case Tipo.llave_derecha:\r\n        return \"llave_Derecha\";\r\n    case Tipo.caracter:\r\n        return \"caracter\";\r\n    case Tipo.decimales:\r\n        return \"Numero Decimal\";\r\n    case Tipo.comentarioLinea:\r\n        return \"ComentarioLineal\";\r\n    case Tipo.comentarioBloques:\r\n        return \"ComentarioBloque\";\r\n    case Tipo.numero:\r\n        return \"Numero_Entero\";\r\n\r\n    case Tipo.cadena:\r\n        return \"cadena\";\r\n\r\n    case Tipo.igual:\r\n        return \"Signo_Igual\";\r\n    case Tipo.mayor_que:\r\n        return \"MayorQue\";\r\n\r\n    case Tipo.menor_que:\r\n        return \"MenorQue\";\r\n    case Tipo.dosPuntos:\r\n        return \"Dos_puntos\";\r\n\r\n    case Tipo.punto_y_coma:\r\n        return \"Punto_y_coma\";\r\n    case Tipo.corchete_derecho:\r\n    return \"Corchete Derecho\";\r\ncase Tipo.igualComparacion:\r\n    return \"igual comparacion\";\r\ncase Tipo.diferente:\r\n    return \"diferente de\";\r\ncase Tipo.mayor_o_igual:\r\n    return \"mayor o igual \";\r\ncase Tipo.menor_o_igual:\r\n    return \"menor o igual \";\r\ncase Tipo.incremento:\r\n    return \"incremento \";\r\ncase Tipo.decremento:\r\n    return \"decremento \";\r\ncase Tipo.coma:\r\n    return \"coma \";\r\ncase Tipo.id:\r\n    return \"ID \";\r\ncase Tipo.corchete_izquierdo:\r\n    return \"Corchete izquierdo \";\r\ncase Tipo.sharp:\r\n    return  \"FINALIZACION\";\r\ncase Tipo.p_res_Int:\r\n    return \"Palabra Reservada Int\";\r\ncase Tipo.p_res_Float:\r\n    return \"Palabra Reservada Float\";\r\ncase Tipo.p_res_Char:\r\n    return \"Palabra Reservada Char\";\r\ncase Tipo.p_res_String:\r\n    return \"Palabra Reservada String\";\r\ncase Tipo.p_res_while:\r\n    return \"Palabra Reservada Int\";\r\ncase Tipo.p_res_Bool:\r\n    return \"TIPO DE DATO\";\r\ncase Tipo.p_res_Class:\r\n    return \"Palabra Reservada Class\";\r\ncase Tipo.p_res_static:\r\n    return \"Palabra Reservada static\";\r\ncase Tipo.p_res_void:\r\n    return \"Palabra Reservada void\";\r\ncase Tipo.p_res_Main:\r\n    return \"Palabra Reservada Main\";\r\ncase Tipo.p_res_false:\r\n    return \"Palabra Reservada false\";\r\ncase Tipo.p_res_true:\r\n    return \"Palabra Reservada true\";\r\ncase Tipo.p_res_if:\r\n    return \"Palabra Reservada if\";\r\ncase Tipo.p_res_else:\r\n    return \"Palabra Reservada else\";\r\ncase Tipo.p_res_switch:\r\n    return \"Palabra Reservada switch\";\r\ncase Tipo.p_res_case:\r\n    return \"Palabra Reservada case\";\r\ncase Tipo.p_res_break:\r\n    return \"Palabra Reservada break\";\r\ncase Tipo.p_res_default:\r\n    return \"Palabra Reservada default\";\r\ncase Tipo.p_res_continue:\r\n    return \"Palabra Reservada Continue\";\r\n\r\ncase Tipo.p_Console:\r\n    return \"Objeto Console\";\r\ncase Tipo.p_Write:\r\n    return \"Propiedad Write\";\r\n\r\ncase Tipo.punto:\r\n    return \"punto\";\r\ncase Tipo.p_for:\r\n    return \"for\";\r\ncase   Tipo.P_res_return:\r\n     return \"Palabra reservada return\";\r\ncase Tipo.sb_and:\r\n    return \"AND LOGICO \";\r\ncase Tipo.sb_or:\r\n    return \"OR LOGICO \";\r\ncase Tipo.sb_negacion:\r\n    return \"NEGACION LOGICA\";\r\ncase Tipo.p_res_do:\r\n    return \"Palabra Reservada do\";\r\ncase Tipo.p_res_double:\r\n    return\"Palabra Reservada double\";\r\ncase Tipo.html:\r\n    return \"Cadena HTML\";\r\n\r\n    default:\r\n        console.log(\"ERROR NO RECONOCIDO\");\r\n        return \"ERROR NO RECONOCIDO \";\r\n        break;\r\n}\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}// FIN CLASE ","\r\nexport class Entrada{\r\n    id?:any;\r\n    cadena?:String;\r\n\r\nconstructor(id?:any, cadena?:string){\r\nthis.id = id; \r\nthis.cadena = cadena;\r\n}\r\n\r\n}","\r\nimport { Estatico} from './Estatico';// lo importo\r\nexport class ErrorLexico{\r\n    public static CONTADOR_ERRORES:number = 1 ;\r\n    private fila:number;\r\n    private tipo:string;// PUEDO USAR LA CLASE ENUM Y AHORRAR  ESCRINIR EL TIPO EN EL ANALIZADOR\r\n    private valor:string;\r\n    private columna:number;\r\n    private id:number;\r\n  \r\nconstructor(Valor_error:string){\r\n           this.fila = Estatico.FILAS;\r\n           this.columna = Estatico.COLUMNAS;\r\n            this.valor = Valor_error;\r\n            this.tipo = \"ERROR LEXICO\";\r\n            this.id = ErrorLexico.CONTADOR_ERRORES;\r\n            ErrorLexico.CONTADOR_ERRORES++;\r\n}\r\n\r\npublic getID():number{\r\n    return this.id;\r\n}\r\n\r\npublic getValor():string\r\n{\r\n    return this.valor;\r\n}\r\n\r\npublic  getTipo_error():string\r\n{\r\n    return this.tipo;\r\n}\r\n\r\npublic  getFila() :number\r\n{\r\n    return this.fila;\r\n}\r\npublic getColumna():number\r\n{\r\n    return this.columna;\r\n}\r\n\r\n}","export class ErroresSintacticos{\r\n    public static CONT_SINTACTICOS : number = 1;\r\n    private columna:number ; \r\n    private fila : number ; \r\n    private error:string;\r\n    private id:number;\r\n    constructor(fila_ : number , columna_:number , error:string , encontro:any){// fil acolumna error\r\n        this.id = ErroresSintacticos.CONT_SINTACTICOS; \r\n        ErroresSintacticos.CONT_SINTACTICOS++; \r\n        this.fila = fila_; \r\n        this.columna = columna_; \r\n        this.error = \"se esperaba  \" + error  + \"   en lugar de   \"+encontro +\"   \";\r\n    }\r\n     \r\n    public getID():number{\r\n        return this.id;\r\n    }\r\n    \r\n    public getError():string\r\n    {\r\n        return this.error;\r\n    }\r\n    \r\n    public  getTipo_error():string\r\n    {\r\n        return \"Error Sintactico\";\r\n    }\r\n    \r\n    public  getFila() :number\r\n    {\r\n        return this.fila;\r\n    }\r\n    public getColumna():number\r\n    {\r\n        return this.columna;\r\n    }\r\n\r\n\r\n\r\n}","import { Tabla_Simbolos } from './Tabla_Simbolos';\r\n\r\nexport class Estatico{\r\n    nickname?:string;\r\n     rol?:any;\r\nconstructor(nickname?:string, nombre?:string,carnet?:any,correo?:string, pass?:String , rol?:any){\r\n\r\n}\r\n\r\npublic static FILAS:number = 1;\r\npublic static COLUMNAS:number = 0;// ejemplo de commo importar algo estatico \r\n\r\n\r\npublic static lista_mostrar_tokens:any = [];\r\npublic static lista_mostrar_errores_lexicos:any = [];\r\npublic static lista_mostrar_errores_sintacticos:any=[];\r\npublic static listaTXT:any = [];\r\npublic static guarda_entrada:any = \"\"; \r\npublic static lista_mostrar_tabla_simbolos:any = [];\r\n\r\npublic static guarda_traduccion:string = \"\"; \r\npublic static guarda_cadena_html:string = \"\"; \r\npublic static guarda_cadena_json:string = \"\"; \r\n\r\n}","\r\n\r\n\r\nexport class Tabla_Simbolos{\r\nprivate nombre:string; \r\nprivate tipo:string;\r\nprivate fila:number;\r\nprivate valor:string;\r\n\r\nconstructor(nom:string , tip:string , fil:number , valo:string){\r\nthis.nombre = nom; \r\nthis.tipo = tip; \r\nthis.fila = fil; \r\nthis.valor = valo; \r\n}\r\n\r\npublic getTipo():string{\r\n    return this.tipo;\r\n}\r\n\r\npublic getNombre():string{\r\n    return this.nombre; \r\n}\r\n\r\npublic  getFila() :number\r\n{\r\n    return this.fila;\r\n}\r\npublic getValor():string{\r\n    return this.valor;\r\n}\r\npublic setValor( val: string){\r\n    this.valor = val;\r\n}\r\npublic setTipo(tip:string){\r\n    this.tipo = tip; \r\n}\r\n\r\npublic setNombre(nom: string){\r\n    this.nombre = nom;\r\n}\r\npublic setFila(filaaa:number){\r\n    this.fila = filaaa;\r\n}\r\n\r\n\r\npublic esNueva():boolean{\r\n\r\n    return true;\r\n}\r\n\r\n\r\n\r\n\r\n}","import { Estatico} from './Estatico';// lo importo\r\n\r\nexport enum Tipo {\r\n    sb_mas,\r\n    sb_menos,\r\n    sb_por,\r\n    sb_division,\r\n    parentesis_izq,\r\n    parentesis_derecho,\r\n    llave_izq,\r\n    llave_derecha,\r\n    caracter,\r\n    decimales,\r\n    comentarioLinea,\r\n    comentarioBloques,\r\n    numero,\r\n    cadena,\r\n    igual,\r\n    mayor_que,\r\n    menor_que,\r\n    dosPuntos,\r\n    punto_y_coma,\r\n    corchete_derecho,\r\n    igualComparacion,\r\n    diferente,\r\n    mayor_o_igual,\r\n    menor_o_igual,\r\n    incremento,\r\n    decremento,\r\n    coma,\r\n    id,\r\n    corchete_izquierdo,\r\n    sharp, // FINALIZA \r\n    p_res_Int,//  comienzan palabras reservadas\r\n    p_res_Float,\r\n    p_res_Char,\r\n    p_res_String,\r\n    p_res_while,//\r\n    p_res_Bool,\r\n    p_res_Class,\r\n    p_res_static, // TAL VEZ YA NO VENGA \r\n    p_res_void,\r\n    p_res_Main,\r\n    p_res_false,\r\n    p_res_true,\r\n    p_res_if,\r\n    p_res_else,\r\n    p_res_switch,\r\n    p_res_case,\r\n    p_res_break,\r\n    p_res_default,\r\n    p_res_continue,\r\n    p_Console,\r\n    p_Write,\r\n    punto,\r\n    p_for,\r\n    P_res_return,\r\n    sb_and,\r\n    sb_or,\r\n    sb_negacion, \r\n    p_res_do,\r\n    p_res_double,\r\n    html\r\n}\r\nexport class Token{ // si falla implementar el '?' \r\n  public static CONTADORTOKEN : number = 1; // cada vez que le de analizar regresa a 0 \r\n  private id: number; \r\n  private fila:number;\r\n  private Tipo_token:Tipo;// PUEDO USAR LA CLASE ENUM Y AHORRAR  ESCRINIR EL TIPO EN EL ANALIZADOR\r\n  private valor_lexema: string;\r\n  private columna: number;\r\n\r\n  constructor(tipo_: Tipo,valor_:string){\r\n  this.Tipo_token = tipo_;\r\n  this.valor_lexema = valor_; \r\n  this.id = Token.CONTADORTOKEN;\r\n  Token.CONTADORTOKEN++;\r\n  this.fila = Estatico.FILAS; \r\n  this.columna = Estatico.COLUMNAS;\r\n  }\r\n\r\n  public getID():number{\r\n      return this.id;\r\n  }\r\n\r\n  \r\n  public getValor_lexema():string\r\n  {\r\n      return this.valor_lexema;\r\n  }\r\n\r\n  public  getTipo():Tipo\r\n  {\r\n      return this.Tipo_token;\r\n  }\r\n  \r\n  public  getFila() :number\r\n  {\r\n      return this.fila;\r\n  }\r\n  public getColumna():number\r\n  {\r\n      return this.columna;\r\n  }\r\n\r\n  public getParaTabla():string{\r\n      switch(this.Tipo_token){\r\n            case Tipo.p_res_Int:\r\n                 return \"int\";\r\n            case Tipo.p_res_Char:\r\n                return \"char\";\r\n            case Tipo.p_res_String:\r\n                return \"string\";\r\n          \r\n            case Tipo.p_res_Bool:\r\n                return \"Bool\";\r\n\r\n            case Tipo.p_res_double:\r\n                return\"Double\";\r\n            default:\r\n                return\"any\";\r\n      }\r\n  }\r\n\r\n  public  getTipo_str():string\r\n  {\r\n      switch (this.Tipo_token)\r\n      {\r\n          case Tipo.sb_mas:\r\n              return \"mas\";\r\n          case Tipo.sb_menos:\r\n              return \"menos\";\r\n          case Tipo.sb_por:\r\n              return \"Por\";\r\n          case Tipo.sb_division:\r\n              return \"division\";\r\n          case Tipo.parentesis_izq:\r\n              return \"Parentesis_izquierdo\";\r\n          case Tipo.parentesis_derecho:\r\n              return \"Parentesis Derecho\";\r\n          case Tipo.llave_izq:\r\n              return \"LLave_izquierda\";\r\n          case Tipo.llave_derecha:\r\n              return \"llave_Derecha\";\r\n          case Tipo.caracter:\r\n              return \"caracter\";\r\n          case Tipo.decimales:\r\n              return \"Numero Decimal\";\r\n          case Tipo.comentarioLinea:\r\n              return \"ComentarioLineal\";\r\n          case Tipo.comentarioBloques:\r\n              return \"ComentarioBloque\";\r\n          case Tipo.numero:\r\n              return \"Numero_Entero\";\r\n\r\n          case Tipo.cadena:\r\n              return \"cadena\";\r\n\r\n          case Tipo.igual:\r\n              return \"Signo_Igual\";\r\n          case Tipo.mayor_que:\r\n              return \"MayorQue\";\r\n\r\n          case Tipo.menor_que:\r\n              return \"MenorQue\";\r\n          case Tipo.dosPuntos:\r\n              return \"Dos_puntos\";\r\n\r\n          case Tipo.punto_y_coma:\r\n              return \"Punto_y_coma\";\r\n      case Tipo.corchete_derecho:\r\n          return \"Corchete Derecho\";\r\n      case Tipo.igualComparacion:\r\n          return \"igual comparacion\";\r\n      case Tipo.diferente:\r\n          return \"diferente de\";\r\n      case Tipo.mayor_o_igual:\r\n          return \"mayor o igual \";\r\n      case Tipo.menor_o_igual:\r\n          return \"menor o igual \";\r\n      case Tipo.incremento:\r\n          return \"incremento \";\r\n      case Tipo.decremento:\r\n          return \"decremento \";\r\n      case Tipo.coma:\r\n          return \"coma \";\r\n      case Tipo.id:\r\n          return \"ID \";\r\n      case Tipo.corchete_izquierdo:\r\n          return \"Corchete izquierdo \";\r\n      case Tipo.sharp:\r\n          return  \"FINALIZACION\";\r\n      case Tipo.p_res_Int:\r\n          return \"Palabra Reservada Int\";\r\n      case Tipo.p_res_Float:\r\n          return \"Palabra Reservada Float\";\r\n      case Tipo.p_res_Char:\r\n          return \"Palabra Reservada Char\";\r\n      case Tipo.p_res_String:\r\n          return \"Palabra Reservada String\";\r\n      case Tipo.p_res_while:\r\n          return \"Palabra Reservada While\";\r\n      case Tipo.p_res_Bool:\r\n          return \"Palabra Reservada Bool\";\r\n      case Tipo.p_res_Class:\r\n          return \"Palabra Reservada Class\";\r\n      case Tipo.p_res_static:\r\n          return \"Palabra Reservada static\";\r\n      case Tipo.p_res_void:\r\n          return \"Palabra Reservada void\";\r\n      case Tipo.p_res_Main:\r\n          return \"Palabra Reservada Main\";\r\n      case Tipo.p_res_false:\r\n          return \"Palabra Reservada false\";\r\n      case Tipo.p_res_true:\r\n          return \"Palabra Reservada true\";\r\n      case Tipo.p_res_if:\r\n          return \"Palabra Reservada if\";\r\n      case Tipo.p_res_else:\r\n          return \"Palabra Reservada else\";\r\n      case Tipo.p_res_switch:\r\n          return \"Palabra Reservada switch\";\r\n      case Tipo.p_res_case:\r\n          return \"Palabra Reservada case\";\r\n      case Tipo.p_res_break:\r\n          return \"Palabra Reservada break\";\r\n      case Tipo.p_res_default:\r\n          return \"Palabra Reservada default\";\r\n      case Tipo.p_res_continue:\r\n          return \"Palabra Reservada Continue\";\r\n\r\n      case Tipo.p_Console:\r\n          return \"Objeto Console\";\r\n      case Tipo.p_Write:\r\n          return \"Propiedad Write\";\r\n\r\n      case Tipo.punto:\r\n          return \"punto\";\r\n      case Tipo.p_for:\r\n          return \"for\";\r\n      case   Tipo.P_res_return:\r\n           return \"Palabra reservada return\";\r\n      case Tipo.sb_and:\r\n          return \"AND LOGICO \";\r\n      case Tipo.sb_or:\r\n          return \"OR LOGICO \";\r\n      case Tipo.sb_negacion:\r\n          return \"NEGACION LOGICA\";\r\n      case Tipo.p_res_do:\r\n          return \"Palabra Reservada do\";\r\n      case Tipo.p_res_double:\r\n          return\"Palabra Reservada double\";\r\n      case Tipo.html:\r\n           return \"Cadena HTML\";\r\n      default:\r\n         return \"FALTO ESPECIFICAR\";// ME AVISA SI HAY UNO QUE ME FALTO REGISTRAR EN MI CLASE ENUM\r\n\r\n      }\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  \r\n\r\n}\r\n","import { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\r\n\r\n\r\nexport class formateaHTML{\r\n    private contadorTab:number; \r\n    private nuevaCadena:string;\r\n    private cadenaVieja:string;\r\n    private cadenajson: string; \r\n    // para analisis lexico simple \r\n    private estado:number;\r\n    private aux_lexico:string = \"\";\r\n    \r\n\r\n\r\n    // PARA TRADUCIR EL JSON \r\n    private ID_PURO:boolean= true; \r\n    private atributo_actual:string = \"\"; \r\n    private ES_BR:boolean;\r\n    constructor(cadena_html:string){\r\n        this.contadorTab = 0 ; \r\n        this.nuevaCadena = cadena_html;\r\n        this.cadenaVieja = cadena_html;\r\n        this.ejecuta_formato();\r\n        this.generarJson();\r\n        this.addCOMILLAS_AL_JSON();\r\n    }\r\n\r\n    public getNuevaCadena():string{\r\n        return this.nuevaCadena;\r\n    }\r\n    public getCADENA_JSON():string{\r\n        return this.cadenajson;\r\n    }\r\n\r\n    private ejecuta_formato(){\r\n        console.log(\"CADENA HTML: \" + this.cadenaVieja);\r\n        this.nuevaCadena = \"\"; // LA LIMPIO \r\n        this.cadenajson = \"\";\r\n        this.cadenaVieja += \"\\n\";\r\n        this.estado = 0; // inicia en el estado de inicio \r\n        this.aux_lexico = \"\"; // cadena acumuladora de lexema acutual \r\n        let act:string =\"\"; // caracter actual  o tipo string \r\n        let posPasado = 0;\r\n        for(let i = 0 ; i < this.cadenaVieja.length ; i++){\r\n            act = this.cadenaVieja[i]; \r\n            switch(this.estado){\r\n                case 0:\r\n                    if (act ==\"<\")  { \r\n                        posPasado = i;\r\n                        this.tab(); \r\n                        this.nuevaCadena += this.aux_lexico;\r\n                        this.aux_lexico =\"\";\r\n                        this.nuevaCadena += \"\\n\";\r\n                        this.aux_lexico += this.cadenaVieja[i];\r\n                        this.estado = 1; \r\n                        this.ES_BR = false;\r\n                    }else{\r\n\r\n                        this.aux_lexico += this.cadenaVieja[i];\r\n                        // de una se adjunta \r\n                    }\r\n                break;\r\n                case 1: // este estado determina si resto o sumo \r\n               \r\n    \r\n\r\n                if (act ==\"/\" && (posPasado - i == -1) )  {  //\"</ \"\r\n                   // this.aux_lexico = \"\";\r\n                    this.aux_lexico += this.cadenaVieja[i];\r\n                    this.estado = 2;\r\n                    this.tab();   \r\n                    this.nuevaCadena += this.aux_lexico; // adjunta \r\n                    this.contadorTab--;\r\n                   \r\n                }else{\r\n                    this.aux_lexico += this.cadenaVieja[i];\r\n                    this.estado = 2 ; \r\n                    let atributo:string = this.getAtributo_etiqueta(i);\r\n                    if(atributo[0] == \"b\" || atributo[0] == \"B\" ){\r\n                        this.ES_BR = true;\r\n                    }\r\n                    this.contadorTab++;\r\n                    this.tab();   \r\n                    this.nuevaCadena += this.aux_lexico; // adjunta \r\n\r\n                   // this.aux_lexico = \"\"; \r\n                }\r\n                this.aux_lexico =\"\"; // se limpia \r\n                break;\r\n                case 2: // estoy en la parte interna de la etiqueta \r\n                if(act == \">\" ){\r\n                    this.nuevaCadena += this.cadenaVieja[i];\r\n                    this.nuevaCadena+=\"\\n\";\r\n                    this.estado = 0; \r\n\r\n                    if(this.ES_BR == true){\r\n                       this.contadorTab--;\r\n                    } \r\n\r\n\r\n                }else{ // viene el puro id        \r\n                     this.nuevaCadena += this.cadenaVieja[i];\r\n                }\r\n                break;\r\n            \r\n\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    private generarJson(){\r\n        this.contadorTab = 0 ;\r\n      //  this.nuevaCadena = \"\"; // LA LIMPIO \r\n        this.cadenajson = \"\";\r\n        this.cadenaVieja += \"\\n\";\r\n        this.estado = 0; // inicia en el estado de inicio \r\n        this.aux_lexico = \"\"; // cadena acumuladora de lexema acutual \r\n        let act:string =\"\"; // caracter actual  o tipo string \r\n        let posPasado = 0;\r\n        for(let i = 0 ; i < this.cadenaVieja.length ; i++){\r\n            act = this.cadenaVieja[i]; \r\n            switch(this.estado){\r\n                case 0:\r\n                    if (act ==\"<\")  { \r\n                        posPasado = i;\r\n                        this.t_();\r\n                         this.aux_lexico = this.aux_lexico.trim();\r\n                        if(this.aux_lexico.length > 0 ){\r\n                            this.cadenajson += \"\\\"TEXT\\\":\" +\"\\\"\" +this.aux_lexico +\"\\\"\";\r\n                        }\r\n                        \r\n                        this.aux_lexico =\"\";\r\n                        this.cadenajson += \"\\n\";\r\n                        this.aux_lexico += \"\\\"\";\r\n                        this.ES_BR = false;\r\n                        this.estado = 1; \r\n                    }else{\r\n                            this.aux_lexico += this.cadenaVieja[i]; \r\n                    }\r\n                break;\r\n                case 1: // este estado determina si resto o sumo \r\n               \r\n    \r\n\r\n                if (act ==\"/\" && (posPasado - i == -1) )  {  //\"</ \"\r\n                   // this.aux_lexico = \"\";\r\n                    this.aux_lexico += this.cadenaVieja[i];\r\n                    this.estado = 3;\r\n                    \r\n                    this.t_();   \r\n                    this.cadenajson += \"}\"; // adjunta \r\n                    this.contadorTab--;\r\n                   \r\n                }else{\r\n                    this.aux_lexico += this.cadenaVieja[i]; // ES UNA LETRA \"A\"\r\n                    this.estado = 2 ;\r\n                    let atributo:string = this.getAtributo_etiqueta(i);\r\n                    if(atributo[0] == \"\\\"\"){\r\n                        console.log(\"si es un atributo\");\r\n                        this.atributo_actual = atributo;\r\n                    }else{\r\n                        console.log(\"VIENE-\" + atributo );\r\n                        this.atributo_actual  = \"\"; \r\n                    }\r\n                    if(atributo[0] == \"b\" || atributo[0] == \"B\" ){\r\n                        this.ES_BR = true;\r\n                        console.log(\"VIENE BR \"  + atributo);\r\n                    }\r\n                    \r\n                    this.ID_PURO = true;\r\n                    this.contadorTab++;\r\n                    this.t_();   \r\n                    this.cadenajson += this.aux_lexico; // adjunta \r\n\r\n                   // this.aux_lexico = \"\"; \r\n                }\r\n                this.aux_lexico =\"\"; // se limpia \r\n\r\n\r\n                break;\r\n\r\n\r\n\r\n                case 2: // estoy en la parte interna de la etiqueta \r\n                if(act == \">\" ){\r\n                    // TENGO QUE IMPRIMIR SOLO EL ID \r\n                  //  console.log(\"> ENTRA \"+ this.aux_lexico);\r\n                    this.cadenajson += this.aux_lexico;\r\n                    this.aux_lexico =\"\";\r\n                    this.cadenajson+= \"\\\":{\\n\"\r\n                    if(this.atributo_actual.length != 0 ){\r\n                    this.t_();  this.cadenajson+=\"\\\"STYLE\\\":\"+this.atributo_actual+\"\\n\";\r\n                    }\r\n                    this.estado = 0;\r\n                    if(this.ES_BR == true){\r\n                        this.t_();   this.cadenajson+=\"}\\n\"; this.contadorTab--;\r\n                    } \r\n                }else{ // viene el puro id   \r\n                    \r\n                    if(act == \" \"){\r\n                        this.aux_lexico.trim();\r\n                        if(this.aux_lexico.length != 0 && this.ID_PURO == true ){\r\n                          //  console.log(\"in if \"+ this.aux_lexico);\r\n                            this.cadenajson += this.aux_lexico;\r\n                            this.ID_PURO = false;\r\n                        }\r\n                        this.aux_lexico=\"\";\r\n                    }else if(this.ID_PURO == true){\r\n\r\n                        if(act != \"\\n\"){// ESTO NO PODRIA VENIR PERO POR SI ACASO :V \r\n                         \r\n                              this.aux_lexico+= act;\r\n                        }\r\n                       \r\n                    }     \r\n                     \r\n                }\r\n                break;\r\n\r\n\r\n\r\n                case 3:\r\n\r\n                    if(act == \">\" ){\r\n                        this.estado = 0 ; \r\n                        this.aux_lexico =\"\";\r\n                        this.nuevaCadena+=\"\\n\";\r\n                    }else{         \r\n                         // LOS DESCARTO \r\n                    }\r\n            \r\n                \r\n                break;\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    private tab():void {\r\n   \r\n        for (let i:number = 0; i < this.contadorTab ; i++)\r\n        {\r\n            this.nuevaCadena += \"\\t\";\r\n        }\r\n    }\r\n\r\n    // ESTO SERIA PARA PONERLE LAS COMILLAS \r\n\r\n    private getSig(i:number): string{\r\n      //  console.log(\"________________________________________________________________________________\");\r\n        let k:number = 0 ; \r\n      //  console.log(\"ACTUAL: \" + this.cadenajson[i]);\r\n        let sig:string = this.cadenajson[i+1];\r\n        while (sig ==\" \"|| sig ==\"\\n\" || sig ==\"\\t\" || sig==\"\\r\")\r\n        {\r\n            k++;\r\n            sig = this.cadenajson[i + k];\r\n        //    console.log(\"Temp sigueinte:\" + sig);\r\n        }\r\n       // console.log(\"siguiente definitivo:\" + sig);\r\n      //  console.log(\"________________________________________________________________________________\");\r\n        return sig;\r\n    }\r\n\r\n\r\n   \r\n    private getAtributo_etiqueta(x:number): string{\r\n        let char_actual:string;\r\n        let ATRIB:string = \"\"; \r\n        for(let i = x ; i < this.cadenaVieja.length ; i++){\r\n            char_actual = this.cadenaVieja[i]; \r\n            if(char_actual == \"=\"){\r\n                ATRIB=\"\";\r\n            }else if(char_actual == \">\"){\r\n                break;\r\n            }\r\n            else{\r\n                ATRIB += char_actual;\r\n            }\r\n        }\r\n        ATRIB = ATRIB.trim();\r\n        if(ATRIB[0] == \"\\\"\"){\r\n            console.log(\"RETORNA ATRIBUTO: \"+ATRIB);\r\n        }\r\n        return ATRIB; \r\n    }\r\n\r\n\r\n    public addCOMILLAS_AL_JSON(){\r\n        let nueva_cadena_json_con_comillas:string=\"\";\r\n        let actual:string = \"\";\r\n        for(let indice = 0 ; indice < this.cadenajson.length ; indice++){\r\n            actual = this.cadenajson[indice]; \r\n\r\n\r\n            if(actual == \"}\"){\r\n                // CASO 1 \r\n            let sig:any = this.getSig(indice); \r\n            if(sig == \"\\\"\"){\r\n                nueva_cadena_json_con_comillas +=actual+\",\";\r\n            }\r\n            else\r\n            {\r\n                nueva_cadena_json_con_comillas +=actual;\r\n            }\r\n\r\n\r\n            }else if(actual == \"\\\"\"){\r\n                // CASO 2 \r\n                let siguiente:any = this.getSig(indice);\r\n\r\n                if(siguiente == \"\\\"\"){\r\n                    nueva_cadena_json_con_comillas +=actual+\",\";\r\n                }\r\n                else\r\n                {\r\n                    nueva_cadena_json_con_comillas +=actual;\r\n                }\r\n\r\n\r\n            }else{\r\n                // CASO 3 NO INTERESA SOLO LO ADJUNTO \r\n\r\n                nueva_cadena_json_con_comillas +=actual;\r\n            }\r\n        }\r\n\r\n\r\n\r\n        this.cadenajson = nueva_cadena_json_con_comillas; // HASTA ACA YA ESTAN BIEN LAS COMILLAS DE LAS LLAVES \r\n    \r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    private t_():void {\r\n   \r\n        for (let i:number = 0; i < this.contadorTab ; i++)\r\n        {\r\n            this.cadenajson += \"\\t\";\r\n        }\r\n    }\r\n    \r\n\r\n\r\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport {NavComponent} from  './COMPONENTES/nav/nav.component' ; // siempre importo el compoonente \nimport {LexicoComponent} from './COMPONENTES/lexico/lexico.component';\nimport {SintacticoComponent} from './COMPONENTES/sintactico/sintactico.component';\n\nconst routes: Routes = [\n  {path:'' , redirectTo:'principal', pathMatch:'full' },\n  {path:'principal' , component: NavComponent } , \n  {path:'lexico' , component:LexicoComponent},\n  {path:'sintactico' , component:SintacticoComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'PRACTICA 2 COMPI 1 ';\n}\n","\n\n<div class=\"container p-2\">\n  <router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule} from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavComponent } from './COMPONENTES/nav/nav.component';\nimport { LexicoComponent } from './COMPONENTES/lexico/lexico.component';\nimport { SintacticoComponent } from './COMPONENTES/sintactico/sintactico.component';\nimport { RegresoComponent } from './COMPONENTES/regreso/regreso.component';\n\nimport { CodemirrorModule } from '@ctrl/ngx-codemirror';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavComponent,\n    LexicoComponent,\n    SintacticoComponent,\n    RegresoComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    CodemirrorModule\n    \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport 'codemirror/mode/javascript/javascript';\nimport 'codemirror/mode/markdown/markdown';\nimport 'codemirror/mode/go/go';\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}