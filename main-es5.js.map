{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/COMPONENTES/lexico/lexico.component.ts","webpack:///src/app/COMPONENTES/lexico/lexico.component.html","webpack:///src/app/COMPONENTES/nav/nav.component.ts","webpack:///src/app/COMPONENTES/nav/nav.component.html","webpack:///src/app/COMPONENTES/regreso/regreso.component.ts","webpack:///src/app/COMPONENTES/regreso/regreso.component.html","webpack:///src/app/COMPONENTES/sintactico/sintactico.component.ts","webpack:///src/app/COMPONENTES/sintactico/sintactico.component.html","webpack:///src/app/MODELS/An_lexico.ts","webpack:///src/app/MODELS/An_sintactico.ts","webpack:///src/app/MODELS/Entrada.ts","webpack:///src/app/MODELS/ErrorLexico.ts","webpack:///src/app/MODELS/ErroresSintacticos.ts","webpack:///src/app/MODELS/Estatico.ts","webpack:///src/app/MODELS/Tabla_Simbolos.ts","webpack:///src/app/MODELS/Token.ts","webpack:///src/app/MODELS/formateaHTML.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","LexicoComponent","tokens","errores","lista_mostrar_tokens","lista_mostrar_errores_lexicos","selector","templateUrl","styleUrls","NavComponent","router","clases","listaTXT","guarda","filestring","cadena_traducir","cadena_html","cadena_json","guarda_traduccion","guarda_cadena_html","guarda_cadena_json","tabla_sin","llenarListaTxt","restablecer","guarda_entrada","lista_mostrar_tabla_simbolos","file","target","files","uploadDocument","fileReader","FileReader","onload","console","log","result","readAsText","alert","push","limpiarVariables","entrada","analizador","analisis_lexico","getListaTokens","getListaErrores","sharp","lista_analizar","llama_sintactico","lista_mostrar_errores_sintacticos","pop","length","traduce","getCADENATRADUCIDA","getTablaSIMBOLOS","getCADENA_HTML","cadena","llama_formato","getNuevaCadena","getCADENA_JSON","COLUMNAS","FILAS","CONTADORTOKEN","CONTADOR_ERRORES","CONT_SINTACTICOS","navigate","cadena_del_sintactico","t1","comentarioBloque","cadena__py","cadena__html","cadena__json","data_py","Blob","type","data_html","data_json","c_sharp_entrada","crear_nueva_ventana","fileChanged","GUARDA_ARCHIVO","ir_lexico","ir_sitactico","analizar","SA_VE","RegresoComponent","ir_principal","SintacticoComponent","An_lexico","ListaTokens_Salida","ListaErroresLexicos","aux_lexico","cadena_entrada","estado","act","i","addToken","sb_por","parentesis_izq","parentesis_derecho","llave_izq","llave_derecha","dosPuntos","punto_y_coma","corchete_izquierdo","corchete_derecho","coma","punto","esDigito","esLetra","addError","numero","decimales","sb_or","incremento","sb_mas","igualComparacion","igual","decremento","sb_menos","sb_division","comentarioLinea","comentarioBloques","mayor_o_igual","mayor_que","menor_o_igual","menor_que","diferente","sb_negacion","sb_and","act2","caracter","html","error","p_res_Int","p_res_Char","p_res_String","p_res_Bool","p_res_Class","p_res_void","p_res_do","p_res_double","p_res_false","p_res_true","p_res_if","p_for","p_res_else","p_res_switch","p_res_case","p_res_break","p_res_default","p_res_while","p_Console","p_Write","p_res_continue","P_res_return","x","getValor_lexema","getTipo_str","getFila","getColumna","t","getValor","getTipo_error","ascii","charCodeAt","toUpperCase","tipoToken","An_sintatico","hay_error","lista_errores_sin","acepta_sentencia_break","acepta_sentencia_continue","acepta_return_funciones","acepta_return_metodos","esta_en_el_switch","listaTok","INTERVALO1_","INTERVALO2_","save_expression","GUARDAR_EXPRESION","nombres_variables_declaracion","tabla","TipoActualVariable","nombreVar","esElMain","guardarIntervalo","intervalo1","intervalo2","simboloComparativoFor","viene_de_sentencia_imprimir","al_menos_una_cadena","NO_salto","contadorTab","Traducir","cadena_traducida","sig","tokenActual","tomarLLaves","ignoraComentarios","inicio","imprimirTABLA_SEND","sentencia_clase","lista_clasesP","parea","getTipo","Lista_Declaraciones_metFunVar","Declaracion","Lista_Declaraciones_metFunVarP","Instruccion","Lista_instP","tab","sentencia_if","sentenciaImprime","asignacionSimple","DECLARACION_ADENTRO_DE_METODOS_FUNCIONES","sentencia_while","sentencia_do_while","sentencia_for","sentencia_switch","sentencia_return_metodos","sentencia_return_funciones","sentencia_continue","sentencia_break","vaciarVariables","getParaTabla","Tipo","getValorPorDefecto","DeclaracionP_metodos","Lista_ids","asignacion","setValorAsignacion","llenarListaTabla","ListaCases","Default_","salto","Lista_inst","caseP","ListaCasesP","opcionCase","declaracionFOR","lista_expresiones_condicionales","definirRango_for","DecrementoIncremento","ListaIns_entreLLaves","expresion","fila","opcionMetodoFuncion","DeclaracionP","Vaciar","getNombre","tipo","lista_parametros","obj","OpcionAsignacion","sentencia_llama_metodo","ListaExpresionesP","ListaExpresiones","elseP","multiplesIf","sentencia_elif","guardaIntervalorFor","lista_expresiones_condicionalesP","E","simboloComparacionOpcional","T","EP","F","TP","loqueVenga","expresionMetodo","cad_temporal","k","la_cadena_son_solo_numeros","num","parseInt","num2","intervaloN","tip","getTipoParaError","ControldeLLaves","p_res_Float","p_res_static","p_res_Main","Entrada","ErrorLexico","Valor_error","columna","valor","ErroresSintacticos","fila_","columna_","encontro","Estatico","nickname","nombre","carnet","correo","pass","rol","Tabla_Simbolos","nom","fil","valo","val","filaaa","Token","tipo_","valor_","Tipo_token","valor_lexema","formateaHTML","ID_PURO","atributo_actual","nuevaCadena","cadenaVieja","ejecuta_formato","generarJson","addCOMILLAS_AL_JSON","cadenajson","posPasado","ES_BR","atributo","getAtributo_etiqueta","t_","trim","char_actual","ATRIB","nueva_cadena_json_con_comillas","actual","indice","getSig","siguiente","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","imports","AppComponent","title","AppModule","declarations","providers","bootstrap","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport {Estatico} from '../../MODELS/Estatico';\n@Component({\n  selector: 'app-lexico',\n  templateUrl: './lexico.component.html',\n  styleUrls: ['./lexico.component.css']\n})\nexport class LexicoComponent implements OnInit {\n  \n  tokens: any = [];\n  errores:any = [];\n  constructor() {\n    \n    this.tokens = Estatico.lista_mostrar_tokens;\n    this.errores = Estatico.lista_mostrar_errores_lexicos;\n   }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class = \"col-12\">\n    <app-regreso></app-regreso>\n</div>\n<div class=\"row\">\n    \n<table class=\"table table-bordered col-6 tabl\">\n    <thead>\n        <tr > \n           <th colspan=\"5\" class=\"tituloTb\"> LISTA DE TOKENS </th> \n        </tr>\n      <tr>\n        <th scope=\"col\">#</th>\n        <th scope=\"col\">Lexema</th>\n        <th scope=\"col\">Tipo </th>\n        <th scope=\"col\">Fila</th>\n        <th scope=\"col\">Columna</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr  *ngFor='let token of tokens' >\n        <th scope=\"row\">{{token.getID()}}</th>\n        <td>{{token.getValor_lexema()}}</td>\n        <td>{{token.getTipo_str()}}</td>\n        <td>{{token.getFila()}}</td>\n        <td>{{token.getColumna()}}</td>\n      </tr>\n      \n    </tbody>\n  </table>\n\n  <table class=\"table table-bordered col-6 tabl\">\n    <thead>\n        <tr > \n            <th colspan=\"5\" class=\"tituloErr\"> LISTA DE ERRORES </th> \n         </tr>\n      <tr>\n        <th scope=\"col\">#</th>\n        <th scope=\"col\">Valor</th>\n        <th scope=\"col\">Tipo</th>\n        <th scope=\"col\">Fila</th>\n        <th scope=\"col\">Columna</th>\n      </tr>\n    </thead>\n    <tbody>\n        <tr  *ngFor='let error of errores' >\n            <th scope=\"row\">{{error.getID()}}</th>\n            <td>{{error.getValor()}}</td>\n            <td>{{error.getTipo_error()}}</td>\n            <td>{{error.getFila()}}</td>\n            <td>{{error.getColumna()}}</td>\n          </tr>\n    </tbody>\n  </table>\n\n</div>\n","import { Component, OnInit ,HostBinding} from '@angular/core';\nimport { Estatico} from '../../MODELS/Estatico';// lo importo\nimport { Entrada } from 'src/app/MODELS/Entrada';\nimport {Token ,Tipo} from '../../MODELS/Token';\nimport {An_lexico} from '../../MODELS/An_lexico';\nimport{Router} from '@angular/router';\nimport {ErrorLexico} from '../../MODELS/ErrorLexico';\nimport {ErroresSintacticos} from '../../MODELS/ErroresSintacticos';\nimport { An_sintatico } from 'src/app/MODELS/An_sintactico';\nimport {formateaHTML} from '../../MODELS/formateaHTML';\n\nimport * as File_ from 'file-saver';\nimport {saveAs} from 'file-saver';\n\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n  @HostBinding('class') clases = 'row';\n  listaTXT : any = []; // lista de text area\n  guarda:string  = \"\";\n\n\n\n\n\n\n\n\n  public filestring:any = \"ESTE TEXTAREA ES SOLO PARA LEER ARCHIVOS , NO MODIFICAR\"; \n  file:any; \n  unlocown:any; \n  \nfileChanged(e) {\n  this.file = e.target.files[0];\n  this.uploadDocument();\n}\n\n\nuploadDocument(){\nlet fileReader = new FileReader(); \nfileReader.onload = (e) =>{\nconsole.log(fileReader.result);\nthis.filestring = fileReader.result;\n}\nfileReader.readAsText(this.file);\n}\n\n\n  cadena_traducir:Entrada = new Entrada(10,\"\");\n  cadena_html:Entrada = new Entrada(10,\"\");\n  cadena_json:Entrada = new Entrada(10,\"\");\n  guarda_traduccion:string =\"\"; // igual para HTML Y JSON \n  guarda_cadena_html:string = \"\"; \n  guarda_cadena_json:string=\"\";\n  tabla_sin:any = [];\n\n  constructor(private router:Router) {\n    this.guarda_traduccion = Estatico.guarda_traduccion;\n    this.guarda_cadena_html= Estatico.guarda_cadena_html; \n    this.guarda_cadena_json = Estatico.guarda_cadena_json;\n    this.llenarListaTxt();    \n    this.restablecer();\n    this.filestring = Estatico.guarda_entrada;\n    this.tabla_sin = Estatico.lista_mostrar_tabla_simbolos;\n   }\n\n  \n  ngOnInit(): void {\n\n  }\n\n  llenarListaTxt(){\n\n   this.listaTXT = Estatico.listaTXT;\n  }\n\n \n  crear_nueva_ventana(){\n    alert(\"creando nueva ventana\");\n    this.listaTXT.push(new Entrada(2,\"\"));\n  }\n\n  analizar(){\n    this.limpiarVariables();\n    let entrada:string = this.filestring;\n    let analizador:An_lexico = new An_lexico(); \n    Estatico.guarda_entrada = entrada;\n    analizador.analisis_lexico(entrada);\n    Estatico.lista_mostrar_tokens = analizador.getListaTokens();\n    Estatico.lista_mostrar_errores_lexicos = analizador.getListaErrores();\n    \n   \n\n    let sharp:Token  = new Token(Tipo.sharp, \"fin_de_entrada\");\n    let lista_analizar:any[] = analizador.getListaTokens();\n    lista_analizar.push(sharp);\n    let llama_sintactico:An_sintatico = new An_sintatico(lista_analizar);\n    Estatico.lista_mostrar_errores_sintacticos = llama_sintactico.getListaErrores();\n    lista_analizar.pop();\n\n\n    if(analizador.getListaErrores().length == 0 &&  llama_sintactico.getListaErrores().length == 0 ){\n      this.traduce(llama_sintactico.getCADENATRADUCIDA());\n      Estatico.lista_mostrar_tabla_simbolos = llama_sintactico.getTablaSIMBOLOS();\n      this.tabla_sin =  Estatico.lista_mostrar_tabla_simbolos ;\n      this.guarda_cadena_html = llama_sintactico.getCADENA_HTML();\n      this.cadena_html.cadena =  this.guarda_cadena_html;\n\n      let llama_formato:formateaHTML = new formateaHTML(this.guarda_cadena_html);\n      this.guarda_cadena_html = llama_formato.getNuevaCadena();\n      this.cadena_html.cadena =  llama_formato.getNuevaCadena();\n      this.guarda_cadena_json = llama_formato.getCADENA_JSON();\n      this.cadena_json.cadena = llama_formato.getCADENA_JSON();\n\n    }else{\n      alert(\"LA ENTRADA POSEE ERRORES\");\n      this.guarda_traduccion = \"\";\n      this.cadena_traducir.cadena = \"\";\n    }\n   \n   \n    alert(\"Analizando...\");\n    \n    // lo envio a mi clase de analizador_lexico \n    // a la clase de mi analizador sintactico \n    // si todo bien traduce sino nel \n\n  }\n  analizar2(cadena:any){\n    this.limpiarVariables();\n    let analizador:An_lexico = new An_lexico(); \n    analizador.analisis_lexico(cadena);\n    Estatico.lista_mostrar_tokens = analizador.getListaTokens();\n    Estatico.lista_mostrar_errores_lexicos = analizador.getListaErrores();\n    \n    let sharp:Token  = new Token(Tipo.sharp, \"fin_de_entrada\");\n    let lista_analizar:any[] = analizador.getListaTokens();\n    lista_analizar.push(sharp);\n    let llama_sintactico:An_sintatico = new An_sintatico(lista_analizar);\n    Estatico.lista_mostrar_errores_sintacticos = llama_sintactico.getListaErrores();\n    lista_analizar.pop();\n\n    if(analizador.getListaErrores().length == 0 &&  llama_sintactico.getListaErrores().length == 0 ){\n      this.traduce(llama_sintactico.getCADENATRADUCIDA());\n      Estatico.lista_mostrar_tabla_simbolos = llama_sintactico.getTablaSIMBOLOS();\n      this.tabla_sin =  Estatico.lista_mostrar_tabla_simbolos ;\n      this.guarda_cadena_html = llama_sintactico.getCADENA_HTML();\n      this.cadena_html.cadena =  this.guarda_cadena_html;\n\n      \n      let llama_formato:formateaHTML = new formateaHTML(this.guarda_cadena_html);\n      this.guarda_cadena_html = llama_formato.getNuevaCadena();\n      this.cadena_html.cadena =  llama_formato.getNuevaCadena();\n      this.guarda_cadena_json = llama_formato.getCADENA_JSON();\n      this.cadena_json.cadena = llama_formato.getCADENA_JSON();\n\n\n    }else{\n      alert(\"LA ENTRADA POSEE ERRORES\");\n      this.guarda_traduccion = \"\";\n      this.cadena_traducir.cadena = \"\";\n    }\n   \n\n    alert(\"Analizando...\");\n    // lo envio a mi clase de analizador_lexico \n    // a la clase de mi analizador sintactico \n    // si todo bien traduce sino nel \n\n  }\n\n  limpiarVariables(){\n    Estatico.COLUMNAS = 0;\n    Estatico.FILAS = 1;\n    Token.CONTADORTOKEN = 1;\n    ErrorLexico.CONTADOR_ERRORES = 1;\n    ErroresSintacticos.CONT_SINTACTICOS = 1;\n  }\n\n\n  ir_lexico(){\n    this.router.navigate(['/lexico']);\n    Estatico.listaTXT = this.listaTXT;\n    Estatico.guarda_traduccion = this.guarda_traduccion;\n  }\n\n  ir_sitactico(){\n    this.router.navigate(['/sintactico']);\n    Estatico.listaTXT = this.listaTXT;\n    Estatico.guarda_traduccion = this.guarda_traduccion;\n  }\n    \n  restablecer(){\n    this.cadena_traducir.cadena = this.guarda_traduccion;\n    this.cadena_html.cadena = this.guarda_cadena_html; // DARLES SUS THIS DE CADA CADENA \n    this.cadena_json.cadena = this.guarda_cadena_json;\n    \n  }\n\n\n  \n\n\n\n  traduce(cadena_del_sintactico:string){\n    let t1:string  = \"\";\n    let comentarioBloque:string = \"\\'\" + \" \" + \"\\'\" + \" \" + \"\\'\";\n    this.guarda_traduccion = cadena_del_sintactico;\n    this.cadena_traducir.cadena = cadena_del_sintactico;\n  }\n  \n  GUARDA_ARCHIVO(){\n    try{\n      let cadena__py:any = this.cadena_traducir.cadena;\n      let cadena__html:any = this.cadena_html.cadena; \n      let cadena__json:any = this.cadena_json.cadena;\n      let data_py = new Blob([cadena__py], { type: \"text/csv;charset=utf-8\" });\n      let data_html = new Blob([cadena__html],{ type: \"text/csv;charset=utf-8\" });\n      let data_json = new Blob([cadena__json], { type: \"text/csv;charset=utf-8\" });\n      saveAs(data_py, \"TRADUCCION.py\");\n      saveAs(data_html, \"CODIGO_HTML.html\");\n      saveAs(data_json, \"CODIGO_JSON.json\");\n      alert(\"GENERANDO REPORTES...\");\n    }catch(e){\n      alert(\"algo salio mal..\");\n    }\n    \n  }\n\n  SA_VE(){\n    try{ \n    let c_sharp_entrada = new Blob([this.filestring], { type: \"text/csv;charset=utf-8\" });\n    saveAs(c_sharp_entrada, \"Entrada_.cs\");\n    alert(\"Entrada guardada correctamente\");\n  }catch(e){\n    alert(\"algo salio mal..\");\n  }\n  }\n\n\n\n\n\n\n\n\n\n}\n\n","<nav class=\"navbar navbar-dark bg-dark navbar-expand-lg navbar-light bg-light alert alert-dark col-12\" role=\"alert\" >\n    <div class=\"container \">\n\n        <a class=\"navbar-brand\"  routerLink=\"/menuAux\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\"> <i class=\"fas fa-code\"></i> COMPI 1 </a>\n        <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span class=\"navbar-toggler-icon\"></span>\n        </button>\n      \n        <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul class=\"navbar-nav mr-auto\">\n            <li class=\"nav-item \">\n              <button class = \"nav-link btn \" (click) = \"crear_nueva_ventana()\">\n                <p>NUEVO <i class =\"fas fa-plus-circle\"></i></p>\n              </button>\n              \n            </li>\n\n            <li class=\"nav-item\">\n              \n              <input id=\"fileInput\"  type=\"file\" size=\"40\" (change) =\"fileChanged($event)\" class = \"nav-link btn  \">\n              \n            </li>\n                           \n            <li class=\"nav-item\">\n              <button class = \"nav-link btn  \" (click) = \"GUARDA_ARCHIVO()\">\n                <p> REPORTES <i class=\"fa fa-clone\" aria-hidden=\"true\"></i>    </p>\n              </button>\n            </li>\n\n\n            <li class=\"nav-item\">\n             \n              <button class = \"nav-link btn  \" (click) = \"ir_lexico()\">\n                <p> LEXICO <i class=\"fa fa-inbox\" aria-hidden=\"true\"></i>   </p>\n              </button>\n              \n            </li>\n\n            <li class=\"nav-item\">\n              <button class = \"nav-link btn \" (click) = \"ir_sitactico()\">\n                <p> SINTACTICO <i class=\"fa fa-inbox\" aria-hidden=\"true\"></i>   </p>\n              </button>\n              \n            </li>\n          </ul>\n        </div>\n    </div>\n  </nav>\n\n\n  <!--                 FORMA VISUAL            -->\n  \n\n  \n\n\n  \n  \n  \n<div class = \"container\"> \n  <div class = \"row\">\n    <div id=\"carouselExampleControls\" class=\"carousel slide  col-6 tam_carusel\" data-ride=\"carousel\" data-interval=\"false\">\n    \n      <div class=\"carousel-inner tam_carusel\">\n        <div class=\"carousel-item active tam_carusel\">\n          <ngx-codemirror \n          \n          id = \"abrir\" \n          [(ngModel)] = \"filestring\"\n         [options]=\"{\n           lineNumbers: true,\n           matchBrackets:true,\n           styeleActiveLine:true,\n           theme: 'eclipse',\n           mode: 'javascript'\n         }\"\n       >\n       </ngx-codemirror>\n\n           \n         \n          <button class = \"btn btn-primary adecuada\" (click) = \"analizar()\">\n            <p>ANALIZAR <i class=\"fa fa-check-square\" aria-hidden=\"true\"></i></p>\n          </button>\n        </div>\n  \n  \n     <!-- el modelo teine que ser de tipo entrada-->\n        <div class=\"carousel-item acomodaTexAr\" *ngFor='let obj of listaTXT' > \n          <textarea [(ngModel)] = \"obj.cadena\" class=\"d-block  justify-content-center acomodaTexAr\">\n          \n          </textarea>   \n\n       \n\n\n\n         \n          <button class = \"btn btn-primary col-11\" (click) = \"analizar2(obj.cadena)\">\n            <p>ANALIZAR <i class=\"fa fa-check-square\" aria-hidden=\"true\" ></i></p>\n          </button>\n        </div>\n  \n  \n      </div>\n  \n      <a class=\"carousel-control-prev \" href=\"#carouselExampleControls\" role=\"button\" data-slide=\"prev\">\n        <span class=\"carousel-control-prev-icon bg-black\" ></span>\n        <span class=\"sr-only\">Previous</span>\n      </a>\n      <a class=\"carousel-control-next\" href=\"#carouselExampleControls\" role=\"button\" data-slide=\"next\">\n        <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n        <span class=\"sr-only\">Next</span>\n      </a>\n    </div>\n\n\n\n\n\n\n\n\n\n    <!--ROW\n     <textarea id = \"traductor\"   [(ngModel)] = \"cadena_traducir.cadena\" (focus) = \"restablecer()\" (change) = \"restablecer()\" class=\"d-block  justify-content-center \">\n      </textarea>  \n\n    -->\n \n\n     \n\n    \n<ngx-codemirror \nid = \"traductor\"   [(ngModel)] = \"cadena_traducir.cadena\" (focus) = \"restablecer()\" (change) = \"restablecer()\"\n[options]=\"{\n lineNumbers: true,\n readOnly: 'nocursor',\n matchBrackets:true,\n styeleActiveLine:true,\n theme: 'dracula',\n mode: 'javascript'\n}\"\n>\n\n</ngx-codemirror>\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    <div id=\"posCarusel\"  class=\"carousel slide  col-8 \" data-ride=\"carousel\" data-interval=\"false\">\n    \n      <div class=\"carousel-inner\" >\n        <div class=\"carousel-item active \">\n\n          <ngx-codemirror \n          id=\"H_tml\"   [(ngModel)] = \"cadena_html.cadena\" (focus) = \"restablecer()\" (change) = \"restablecer()\"\n[options]=\"{\n lineNumbers: true,\n matchBrackets:true,\n readOnly: 'nocursor',\n styeleActiveLine:true,\n theme: 'twilight',\n mode: 'javascript'\n}\"\n>\n\n</ngx-codemirror>\n\n\n          <!--\n          <textarea [(ngModel)] = \"cadena_html.cadena\"   class=\"d-block justify-content-center\" id=\"H_tml\">\n           MUESTRA HTML\n          </textarea> \n          -->\n           \n        </div>\n\n\n        <div class=\"carousel-item\">\n\n          <textarea id=\"J_son\" [(ngModel)] = \"cadena_json.cadena\" class=\"d-block justify-content-center\" (change) = \"restablecer()\">\n           MUESTRA JSON \n          </textarea>   \n        \n\n\n\n        </div>\n\n\n\n      </div>\n  \n      <a class=\"carousel-control-prev \" href=\"#posCarusel\" role=\"button\" data-slide=\"prev\" id=\" posCarusel\">\n        <span class=\"carousel-control-prev-icon bg-black\" ></span>\n        <span class=\"sr-only\">Previous</span>\n      </a>\n      <a class=\"carousel-control-next\" href=\"#posCarusel\" role=\"button\" data-slide=\"next\">\n        <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n        <span class=\"sr-only\">Next</span>\n      </a>\n    </div>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    <!--TERMINA LAS ROW -->\n  </div>\n</div>\n\n\n\n\n\n\n\n\n\n\n  \n\n          \n\n<table class=\"table table-bordered col-8 tabl subir_tabla\">\n  <thead>\n      <tr > \n          <th colspan=\"3\" class=\"tituloErr\"> TABLA DE VARIABLES </th> \n       </tr>\n    <tr>\n      <th scope=\"col\">Nombre</th>\n      <th scope=\"col\">Tipo</th>\n      <th scope=\"col\">Linea</th>\n    </tr>\n  </thead>\n  <tbody>\n       <tr  *ngFor='let variable of tabla_sin' >\n         <th scope=\"row\">{{variable.getNombre()}}</th>\n          <td>{{variable.getTipo()}}</td>\n          <td>{{variable.getFila()}}</td>\n        </tr>\n  </tbody>\n</table>\n\n\n\n\n\n\n\n<button class = \"btn btn-primary save_\" (click) = \"SA_VE()\">\n  <p>SAVE</p>\n</button>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-regreso',\n  templateUrl: './regreso.component.html',\n  styleUrls: ['./regreso.component.css']\n})\nexport class RegresoComponent implements OnInit {\n\n  constructor(private router:Router) {\n\n   }\n\n  ngOnInit(): void {\n  }\n  ir_principal(){\n    this.router.navigate(['/principal']);\n  }\n  ir_lexico(){\n    this.router.navigate(['/lexico']);\n  }\n\n  ir_sitactico(){\n    this.router.navigate(['/sintactico']);\n  }\n    \n}\n","\n<nav class=\"navbar navbar-dark bg-dark navbar-expand-lg navbar-light bg-light alert alert-dark col-12\" role=\"alert\" >\n    <div class=\"container \">\n\n        <a class=\"navbar-brand\"  routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\"> <i class=\"fas fa-code\"></i> COMPI 1 </a>\n        <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span class=\"navbar-toggler-icon\"></span>\n        </button>\n      \n        <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul class=\"navbar-nav mr-auto\">\n            <li class=\"nav-item\">\n             \n                <button class = \"nav-link btn  \" (click) = \"ir_principal()\">\n                  <p> BACK <i class=\"fa fa-inbox\" aria-hidden=\"true\"></i>   </p>\n                </button>\n                \n              </li>\n\n            <li class=\"nav-item\">\n             \n              <button class = \"nav-link btn  \" (click) = \"ir_lexico()\">\n                <p> LEXICO <i class=\"fa fa-inbox\" aria-hidden=\"true\"></i>   </p>\n              </button>\n              \n            </li>\n\n            <li class=\"nav-item\">\n              <button class = \"nav-link btn \" (click) = \"ir_sitactico()\">\n                <p> SINTACTICO <i class=\"fa fa-inbox\" aria-hidden=\"true\"></i>   </p>\n              </button>\n              \n            </li>\n          \n               \n              \n\n            \n          </ul>\n        </div>\n    </div>\n  </nav>","import { Component, OnInit } from '@angular/core';\r\nimport {Estatico} from '../../MODELS/Estatico';\r\n@Component({\r\n  selector: 'app-sintactico',\r\n  templateUrl: './sintactico.component.html',\r\n  styleUrls: ['./sintactico.component.css']\r\n})\r\nexport class SintacticoComponent implements OnInit {\r\n\r\n  \r\n  errores:any = [];\r\n   constructor() {\r\n    this.errores = Estatico.lista_mostrar_errores_sintacticos;\r\n   }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class = \"col-12\">\n    <app-regreso></app-regreso>\n</div>\n\n\n<table class=\"table table-bordered col-12 tabl\">\n    <thead>\n        <tr > \n            <th colspan=\"5\" class=\"tituloErr\"> LISTA DE ERRORES SINTACTICOS </th> \n         </tr>\n      <tr>\n        <th scope=\"col\">#</th>\n        <th scope=\"col\">Valor</th>\n        <th scope=\"col\">Tipo</th>\n        <th scope=\"col\">Fila</th>\n        <th scope=\"col\">Columna</th>\n      </tr>\n    </thead>\n    <tbody>\n         <tr  *ngFor='let error of errores' >\n           <th scope=\"row\">{{error.getID()}}</th>\n            <td>{{error.getError()}}</td>\n            <td>{{error.getTipo_error()}}</td>\n            <td>{{error.getFila()}}</td>\n            <td>{{error.getColumna()}}</td> \n          </tr>\n    </tbody>\n  </table>\n\n","import {Token , Tipo} from'./Token';\r\nimport {ErrorLexico} from './ErrorLexico';\r\nimport { Estatico } from './Estatico';\r\nexport class An_lexico{\r\n\r\n    private ListaTokens_Salida : any = []; // simulan mi linkenList\r\n    private ListaErroresLexicos :any = []; \r\n    private estado:number;\r\n    private aux_lexico:string = \"\";\r\n    constructor(){\r\n        this.aux_lexico=\"\";\r\n    }\r\n\r\n    public analisis_lexico(cadena_entrada:string ){\r\n        console.log(\"ANALIZANDO: \" + cadena_entrada);\r\n        cadena_entrada += \"\\n\";\r\n        this.estado = 0; // inicia en el estado de inicio \r\n        this.aux_lexico = \"\"; // cadena acumuladora de lexema acutual \r\n        let act:string =\"\"; // caracter actual  o tipo string \r\n\r\n        for (let i = 0; i < cadena_entrada.length; i++) {\r\n            Estatico.COLUMNAS++;\r\n            act = cadena_entrada[i]; \r\n            \r\n            switch (this.estado)\r\n            {\r\n                case 0: \r\n                if (act == \"\\n\")\r\n                {\r\n                    Estatico.FILAS++;\r\n                    Estatico.COLUMNAS = 0 ;            \r\n                }else if (act == \" \" || act == \"\\t\")\r\n                {\r\n                    // solo no lo reconoce como un error\r\n                }else if (act ==\"+\"){ this.aux_lexico += act; this.estado = 5; }\r\n                else if (act ==\"-\") {this.aux_lexico += act; this.estado = 7; }\r\n                else if (act ==\"*\") { this.aux_lexico += act; this.addToken(Tipo.sb_por);}\r\n                else if (act ==\"/\") { this.aux_lexico += act; this.estado = 8; }\r\n                else if (act ==\"(\") { this.aux_lexico += act; this.addToken(Tipo.parentesis_izq);}\r\n                else if (act ==\")\")  { this.aux_lexico += act; this.addToken(Tipo.parentesis_derecho); }\r\n                else if (act ==\"{\")  { this.aux_lexico += act; this.addToken(Tipo.llave_izq); }\r\n                else if (act ==\"}\")  { this.aux_lexico += act; this.addToken(Tipo.llave_derecha); }\r\n                else if (act ==\"=\")  { this.aux_lexico += act; this.estado = 6; }\r\n                else if (act ==\":\")  { this.aux_lexico += act; this.addToken(Tipo.dosPuntos); }\r\n                else if (act ==\";\")  { this.aux_lexico += act; this.addToken(Tipo.punto_y_coma); }\r\n                else if (act ==\">\")  { this.aux_lexico += act; this.estado = 12; }\r\n                else if (act ==\"<\")  { this.aux_lexico += act; this.estado = 13; }\r\n                else if (act ==\"[\")  {\r\n                    this.aux_lexico += act; \r\n                    this.addToken(Tipo.corchete_izquierdo);\r\n                 }\r\n                else if (act ==\"]\")  { this.aux_lexico += act; this.addToken(Tipo.corchete_derecho); }\r\n                else if (act ==\"!\")  { this.aux_lexico += act; this.estado = 14; }\r\n                else if (act ==\"\\'\"){ this.aux_lexico += act; this.estado = 16; } // VERIFICAR SI FUNCIONA \r\n                else if (act ==\"|\"){ this.aux_lexico += act; this.estado = 4; }\r\n                else if (act ==\"&\"){ this.aux_lexico += act; this.estado = 15; } \r\n                else if (act ==\",\"){ this.aux_lexico += act; this.addToken(Tipo.coma); }\r\n                else if (act ==\".\") { this.aux_lexico += act; this.addToken(Tipo.punto); }\r\n                else if (this.esDigito(act)) //NUMEROS Y DECIMALES\r\n                { this.aux_lexico += act; this.estado = 1; }\r\n                else if (act== \"\\\"\") // cadenas de texto \r\n                {\r\n                this.aux_lexico += act;\r\n                this.estado = 17;\r\n                }\r\n                else if (this.esLetra(act))// palabras reservadas\r\n                {\r\n                this.aux_lexico += act;\r\n                this.estado = 18;\r\n                }\r\n                else{\r\n                this.aux_lexico += act;\r\n                //  Form1.pintar(inicio, i + 1, \"rojo\");\r\n                this.addError(this.aux_lexico);\r\n                }\r\n\r\n                break; // FIN DEL CASO 0 \r\n                case 1:\r\n                    if (this.esDigito(act))\r\n                    {\r\n                        this.aux_lexico += act;\r\n                       \r\n                    } else if (act == \".\"){\r\n                        this.aux_lexico += act;\r\n                        this.estado = 2;\r\n                    }\r\n                    else\r\n                    {\r\n                        Estatico.COLUMNAS--;\r\n                        this.addToken(Tipo.numero);\r\n                        i--;\r\n                    }\r\n                break;// FIN DEL CASO 1 -- DIGITOS\r\n                case 2:\r\n                    if (this.esDigito(act)) // ACEPTA CASOS DECIMALES \r\n                    {\r\n                        this.aux_lexico += act;\r\n                       \r\n                    }\r\n                    else\r\n                    {\r\n                        Estatico.COLUMNAS--;\r\n                        this.addToken(Tipo.decimales);\r\n                        i--;\r\n                    }\r\n                break; // FIN CASO 2    \r\n                case 3:\r\n                      \r\n\r\n\r\n                break; // CASO DE LO DECIMALES\r\n                case 4: // caso OR LOGICO \r\n                if (act == \"|\") { \r\n                    this.aux_lexico += act; \r\n                    this.addToken(Tipo.sb_or);\r\n                } \r\n                else if (act==\"\\n\")\r\n                {   \r\n                    this.addError(this.aux_lexico);    Estatico.FILAS++;    Estatico.COLUMNAS = 0;\r\n                }\r\n                else\r\n                {\r\n                    this.aux_lexico += act;\r\n                    this.addError(this.aux_lexico);\r\n                }        \r\n\r\n                break; // DISPONIBLE PARA USARSE----------------------\r\n                case 5:// INCREMENTO \r\n                        if (act == \"+\")\r\n                        { this.aux_lexico += act; this.addToken(Tipo.incremento); }\r\n                        else\r\n                        {Estatico.COLUMNAS--; this.addToken(Tipo.sb_mas); i--;} // regresa a ver que era lo que se topo que no es +\r\n\r\n                break;\r\n                case 6://COMPARA IGUAL \r\n                        if (act == \"=\")\r\n                        { this.aux_lexico += act; this.addToken(Tipo.igualComparacion);}\r\n                        else\r\n                        {Estatico.COLUMNAS--; this.addToken(Tipo.igual); i--;}\r\n                break;\r\n                case 7:// DECREMENTO \r\n                        if (act == \"-\")\r\n                        { this.aux_lexico += act; this.addToken(Tipo.decremento); }\r\n                        else\r\n                        { Estatico.COLUMNAS--; this.addToken(Tipo.sb_menos); i--; }\r\n                break;\r\n                case 8:// comentarios\r\n                        if (act == \"/\")\r\n                        { this.aux_lexico += act; this.estado = 9; }\r\n                        else if (act == \"*\")\r\n                        { this.aux_lexico += act; this.estado = 10; }\r\n                        else\r\n                        { Estatico.COLUMNAS--; this.addToken(Tipo.sb_division); i--; }\r\n                        break; // decision de comentarios \r\n                case 9:\r\n                        if (act != \"\\n\")\r\n                        {\r\n                            this.aux_lexico += act;\r\n                        }\r\n                        else {\r\n                            this.addToken(Tipo.comentarioLinea);\r\n                            Estatico.FILAS++;\r\n                            Estatico.COLUMNAS = 0;\r\n                        }\r\n                break;// FIN COMENTARIOS DE LINEA \r\n                case 10:// COMENTARIO BLOQUE \r\n                if (act ==\"\\n\")\r\n                {\r\n                   this.aux_lexico += act;\r\n                   Estatico.FILAS++; \r\n                   Estatico.COLUMNAS = 0 ; \r\n                }\r\n                else if (act == \"*\")\r\n                {\r\n                    this.aux_lexico += act;\r\n                    this.estado=11; \r\n                }\r\n                else if (i == cadena_entrada.length - 1)\r\n                {\r\n                    this.aux_lexico += act; this.addError(this.aux_lexico);\r\n                }\r\n                else\r\n                {\r\n                    this.aux_lexico += act;}\r\n                break;\r\n            case 11:// COMENTARIO BLOQUE \r\n                if (act == \"/\" )\r\n                { this.aux_lexico += act; this.addToken(Tipo.comentarioBloques);}\r\n                else if (i == cadena_entrada.length-1)//-----------------------------------------------------------------------------------\r\n                {\r\n                    this.aux_lexico += act; this.addError(this.aux_lexico);\r\n                }\r\n                else\r\n                {\r\n                    this.aux_lexico += act;\r\n                    this.estado = 10;\r\n\r\n                }\r\n                break;\r\n            case 12://MAYOR O IGUAL  \r\n                if (act == \"=\")\r\n                { this.aux_lexico += act; this.addToken(Tipo.mayor_o_igual); }\r\n                else\r\n                {Estatico.COLUMNAS--; this.addToken(Tipo.mayor_que); i--; }\r\n                break;\r\n            case 13://menor O IGUAL  \r\n                if (act == \"=\")\r\n                { this.aux_lexico += act; this.addToken(Tipo.menor_o_igual); }\r\n                else\r\n                { Estatico.COLUMNAS--;this.addToken(Tipo.menor_que); i--; }\r\n                break;\r\n            case 14://diferente  \r\n                if (act ==\"=\") \r\n                { this.aux_lexico += act; this.addToken(Tipo.diferente); }\r\n                else\r\n                { Estatico.COLUMNAS--;this.addToken(Tipo.sb_negacion); i--; }\r\n                break;\r\n            case 15:\r\n                if (act == \"&\") {  // AND LOGICO \r\n                    this.aux_lexico += act;\r\n                    this.addToken(Tipo.sb_and);\r\n                } \r\n                else if (act==\"\\n\")\r\n                {   \r\n                    this.addError(this.aux_lexico);    Estatico.FILAS++;    Estatico.COLUMNAS = 0;\r\n                }\r\n                else\r\n                {\r\n                    this.aux_lexico += act;\r\n                    this.addError(this.aux_lexico);\r\n                }        \r\n\r\n            break;\r\n            case 16:\r\n                if (act != \"\\'\")\r\n                {\r\n                    let act2:any = act;\r\n                    this.aux_lexico += act;\r\n                    if (cadena_entrada.length - 1 == i)\r\n                    {\r\n\r\n                        this.addError(this.aux_lexico);\r\n                        alert(\" no se encontro comilla de cierre\");\r\n                    }\r\n                    if  (act2 == \"\\n\")\r\n                    {\r\n                        Estatico.FILAS++;\r\n                        Estatico.COLUMNAS = 0 ; \r\n                    }\r\n                   \r\n                }\r\n                else\r\n                {\r\n                   \r\n                    this.aux_lexico += act; \r\n                    if(this.aux_lexico.length <= 3){\r\n                        this.addToken(Tipo.caracter);\r\n                    }else{\r\n                        this.addToken(Tipo.html);\r\n                    }\r\n                \r\n                }\r\n                break;\r\n            case 17:\r\n                try\r\n                {\r\n\r\n                    if(act != \"\\\"\")\r\n                    {\r\n                        let act2:any = act;\r\n                        this.aux_lexico += act;\r\n                        if (cadena_entrada.length - 1 == i)\r\n                        {\r\n\r\n                            this.addError(this.aux_lexico);\r\n                            alert(\" no se encontro comillas de cierre\");\r\n                        }\r\n                        if  (act2 == \"\\n\")\r\n                        {\r\n                            Estatico.FILAS++;\r\n                            Estatico.COLUMNAS = 0 ; \r\n                        }\r\n                    }\r\n                    else if (act== \"\\\"\")\r\n                    {\r\n                        this.aux_lexico += act;\r\n                        this.addToken(Tipo.cadena);\r\n                    }\r\n                }\r\n                catch (error)\r\n                {\r\n                    console.log(\"FALLO EN LAS CADENAS\" + error);\r\n                }\r\n                break;\r\n\r\n            case 18:\r\n                if(this.esDigito(act) || this.esLetra(act) || act == \"_\")\r\n                {\r\n\r\n                    this.aux_lexico += act;\r\n\r\n                }\r\n                else\r\n                {\r\n\r\n                    i--;\r\n                    Estatico.COLUMNAS--;\r\n\r\n\r\n                    if (this.aux_lexico == \"int\")\r\n                    {\r\n                        \r\n                        this.addToken(Tipo.p_res_Int);\r\n\r\n                    }\r\n                    else if  (this.aux_lexico ==\"char\" || this.aux_lexico ==\"Char\")\r\n                    {\r\n                        \r\n                        this.addToken(Tipo.p_res_Char);\r\n\r\n                    }\r\n                    else if (this.aux_lexico ==\"String\" || this.aux_lexico ==\"string\")   // MAYUSCULA O NO  IMPORTA ? \r\n                    {\r\n                        \r\n                        this.addToken(Tipo.p_res_String);\r\n                       \r\n                    }\r\n                    else if (this.aux_lexico ==\"bool\") \r\n                    {\r\n                        \r\n                        this.addToken(Tipo.p_res_Bool);\r\n\r\n                    }\r\n                    else if (this.aux_lexico ==\"class\")\r\n                    {\r\n                        \r\n                        this.addToken(Tipo.p_res_Class);\r\n\r\n                    }\r\n                   /* else if (aux_lexico.CompareTo(\"static\") == 0)\r\n                    {\r\n                        estado = 0;\r\n                        añadeToken(Token.Tipo.p_res_static);\r\n\r\n                    }*/\r\n                    else if (this.aux_lexico ==\"void\")\r\n                    {\r\n                        \r\n                        this.addToken(Tipo.p_res_void);\r\n\r\n                    }\r\n                    else if (this.aux_lexico ==\"do\")\r\n                    {\r\n                        \r\n                        this.addToken(Tipo.p_res_do);\r\n\r\n                    }else if(this.aux_lexico == \"double\"){\r\n                        this.addToken(Tipo.p_res_double);\r\n                    }\r\n                    /*else if (this.aux_lexico==\"Main\") \r\n                    {\r\n                        this.estado = 0;\r\n                        this.addToken(Tipo.p_res_Main);\r\n\r\n                    }*/\r\n                    else if (this.aux_lexico==\"false\")\r\n                    {\r\n                        \r\n                        this.addToken(Tipo.p_res_false);\r\n\r\n                    }\r\n                    else if (this.aux_lexico==\"true\") \r\n                    {\r\n                        \r\n                        this.addToken(Tipo.p_res_true);\r\n\r\n                    }\r\n                    else if (this.aux_lexico==\"if\") \r\n                    {\r\n                       \r\n                    this.addToken(Tipo.p_res_if);\r\n\r\n                    }\r\n                    else if (this.aux_lexico==\"for\")\r\n                    {\r\n                        \r\n                        this.addToken(Tipo.p_for);\r\n\r\n                    }\r\n\r\n                    else if (this.aux_lexico==\"else\")                     {\r\n                      \r\n                        this.addToken(Tipo.p_res_else);\r\n\r\n                    }\r\n                    else if (this.aux_lexico==\"switch\") \r\n                    {\r\n                        \r\n                        this.addToken(Tipo.p_res_switch);\r\n\r\n                    }\r\n                    else if (this.aux_lexico==\"case\")\r\n                    {\r\n                        \r\n                        this.addToken(Tipo.p_res_case);\r\n\r\n                    }\r\n                    else if (this.aux_lexico==\"break\")\r\n                    {\r\n                       \r\n                        this.addToken(Tipo.p_res_break);\r\n\r\n                    }\r\n                    else if (this.aux_lexico==\"default\") \r\n                    {\r\n                        \r\n                        this.addToken(Tipo.p_res_default);\r\n\r\n                    }\r\n                  /*  else if (aux_lexico.CompareTo(\"new\") == 0)\r\n                    {\r\n                        estado = 0;\r\n                        añadeToken(Token.Tipo.p_res_new);\r\n\r\n                    }*/\r\n                    else if (this.aux_lexico==\"while\") \r\n                    {\r\n                        this.addToken(Tipo.p_res_while);\r\n\r\n                    }\r\n                    else if (this.aux_lexico==\"Console\")\r\n                    {\r\n                        this.addToken(Tipo.p_Console);\r\n                        // System.Windows.Forms.MessageBox.Show(aux_lexico);\r\n                    }\r\n                    else if (this.aux_lexico==\"Write\")\r\n                    {\r\n                      //  System.Windows.Forms.MessageBox.Show(\"entra \" + aux_lexico +\"   \"+act);\r\n                        this.addToken(Tipo.p_Write);\r\n\r\n                    } \r\n                      else if (this.aux_lexico==\"continue\")\r\n                    {\r\n                      \r\n                        this.addToken(Tipo.p_res_continue);\r\n\r\n                    }   \r\n                    else if (this.aux_lexico==\"return\")\r\n                    {\r\n                      \r\n                        this.addToken(Tipo.P_res_return);\r\n\r\n                    }\r\n\r\n                    else\r\n                    {\r\n                        // es un id \r\n                        this.addToken(Tipo.id);\r\n\r\n                    }\r\n\r\n                }\r\n\r\n                break;\r\n\r\n\r\n\r\n\r\n\r\n            } // FIN DEL SWITCH \r\n            \r\n        }// FIN DEL FOR \r\n\r\n    }\r\n\r\n    \r\n\r\n    public imprimir_tokens():void{ // --------------------------- PROBAR SI FUNCIONAAA\r\n        for (let x = 0; x < this.ListaTokens_Salida.length; x++) {\r\n      console.log(\"LEXEMA-> \" + this.ListaTokens_Salida[x].getValor_lexema() + \" TIPO: \" + this.ListaTokens_Salida[x].getTipo_str() + \" Fila \" + this.ListaTokens_Salida[x].getFila() + \" Columna \" + this.ListaTokens_Salida[x].getColumna());\r\n        }\r\n   \r\n      \r\n    }\r\n\r\n\r\n    public imprimir_Errores():void{ // --------------------------- PROBAR SI FUNCIONAAA\r\n        for (let t = 0; t < this.ListaErroresLexicos.length; t++) {\r\n             console.log(\"LEXEMA-> \" + this.ListaErroresLexicos[t].getValor() + \" TIPO: \" + this.ListaErroresLexicos[t].getTipo_error() + \" Fila \" + this.ListaErroresLexicos[t].getFila() + \" Columna \" + this.ListaErroresLexicos[t].getColumna());\r\n        }\r\n    }\r\n\r\n    esDigito (caracter){\r\n        let ascii = caracter.charCodeAt(0);\r\n        return ascii > 47 && ascii < 58;\r\n    }\r\n    esLetra(caracter){\r\n        let ascii = caracter.toUpperCase().charCodeAt(0);\r\n        return ascii > 64 && ascii < 91;\r\n    }\r\n\r\n    public addError(Error:string){\r\n      if(Error != \"\\n\" && Error != \"\\r\"){\r\n        this.ListaErroresLexicos.push(new ErrorLexico(Error));\r\n      }\r\n      this.aux_lexico = \"\";//LIMIPIA EL ACUMULADOR \r\n      this.estado = 0; // REINICIA EL ESTADO , implemetar el booleano \r\n\r\n    }\r\n\r\n    public addToken(tipoToken: Tipo){\r\n        this.ListaTokens_Salida.push(new Token(tipoToken, this.aux_lexico));\r\n        this.aux_lexico = \"\";// LIMPIA LE ACUMULADOR\r\n        this.estado = 0;\r\n    };\r\n\r\n    public getListaTokens():any[] {\r\n        return this.ListaTokens_Salida;\r\n    };\r\n    public getListaErrores():any[] {\r\n        return this.ListaErroresLexicos;\r\n    };\r\n}","import {ErroresSintacticos} from './ErroresSintacticos';\r\nimport {Token, Tipo} from './Token';\r\nimport {Tabla_Simbolos} from './Tabla_Simbolos';\r\nimport { Estatico } from './Estatico';\r\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\r\n\r\nexport class An_sintatico{\r\n     // variables solo para el parea \r\n     private hay_error:boolean = false; \r\n     //--------------------------------\r\n    private  Traducir:boolean;\r\n    private contadorTab:number; \r\n    private cadena_traducida:string;\r\n    private NO_salto:boolean;\r\n    private lista_errores_sin:any = []; \r\n    private  tomarLLaves:boolean;\r\n    // PARA SENTENCIAS \r\n    private acepta_sentencia_break: boolean = false; // VA DAR CLAVO SI LO PONGO ADENTRO DE UN CASE \r\n    private acepta_sentencia_continue:boolean = false; \r\n    private acepta_return_funciones:boolean =  false; \r\n    private acepta_return_metodos:boolean =false;\r\n    private esta_en_el_switch:boolean = false;; \r\n    // atributos publicos PARA PARSEAR \r\n    tokenActual:Token; \r\n    listaTok:any = [];\r\n    sig :number;  \r\n  \r\n    \r\n    // ATRIBUTOS PARA TRADUCIR \r\n    \r\n    private INTERVALO1_:string=\"\";\r\n    private INTERVALO2_:string=\"\";\r\n    private save_expression:boolean = false;\r\n    private GUARDAR_EXPRESION :string=\"\";\r\n    private nombres_variables_declaracion:any=[];\r\n    private tabla:any =[];\r\n    private TipoActualVariable:string = \"\";\r\n    nombreVar:string  = \"\";\r\n    esElMain:boolean = false;\r\n    private guardarIntervalo:number = 0; \r\n    private intervalo1:any = 0; \r\n    private intervalo2:any = 0;\r\n    private simboloComparativoFor:string = \"\";\r\n    private viene_de_sentencia_imprimir:boolean = false; // IMPLEMENTAR PARA LA ,    HACER SWTICH Y DECLARACIONSE , FOR DE UNA FUNCION A OTRA \r\n    private al_menos_una_cadena:boolean = false;\r\n    // PROPIEDADES--------------\r\n    public getCADENATRADUCIDA():string{\r\n        \r\n        return this.cadena_traducida;\r\n    }\r\n    public getTablaSIMBOLOS():any[] {\r\n        return this.tabla;\r\n    }\r\n    public getListaErrores():any[]{\r\n        return this.lista_errores_sin; \r\n    }\r\n    public getCADENA_HTML():string{\r\n        return this.cadena_html;\r\n    }\r\n    private cadena_html:string = \"\";\r\n    // trabar al metodo cuando haya un error y esperar a que llegue a un punto y coma\r\n    // luego seguir analizando como si  nada \r\n    constructor(tokens:any[]){\r\n    this.NO_salto = false; \r\n    this.contadorTab = 0 ; \r\n    this.Traducir = false; \r\n    this.cadena_traducida = \"\"; \r\n    this.listaTok = tokens;\r\n    this.sig = 0 ; \r\n    this.tokenActual = this.listaTok[this.sig];\r\n    //tokenActual = listaTok.ElementAt(sig);\r\n    this.tomarLLaves = true;\r\n    // LISTO PARA INICIAR EL SINTACTICO \r\n    console.log(\"INICIA A ANALIZAR\");\r\n    this.ignoraComentarios();\r\n    this.inicio();\r\n\r\n    console.log(\"TERMINO DE ANALIZAR\");\r\n    if(this.lista_errores_sin.length === 0){\r\n        console.log(\"ENTRADA ESTRICTAMENTE ACEPTADA\");\r\n    }else{\r\n        console.log(\"ESA ONDA TIENE ERROES SINTACTICOS\");\r\n    }\r\n\r\n  \r\n   this.imprimirTABLA_SEND();\r\n \r\n    }\r\n\r\n    private inicio():void{\r\n        this.sentencia_clase();\r\n        this.lista_clasesP();\r\n        this.parea(Tipo.sharp);\r\n    }\r\n    private lista_clasesP(){\r\n        this.ignoraComentarios();\r\n        if(this.tokenActual.getTipo() == Tipo.p_res_Class){\r\n            this.sentencia_clase();\r\n            this.lista_clasesP();\r\n        }else{\r\n\r\n        }\r\n     \r\n    }\r\n    private sentencia_clase(){\r\n        this.Traducir = true;\r\n        this.parea(Tipo.p_res_Class); this.cadena_traducida+=\" \";\r\n        this.parea(Tipo.id); this.cadena_traducida+=\":\";\r\n        this.parea(Tipo.llave_izq);\r\n        this.Lista_Declaraciones_metFunVar();\r\n        this.parea(Tipo.llave_derecha);\r\n        this.Traducir = false;\r\n    }\r\n    private Lista_Declaraciones_metFunVar(){\r\n        //Declaracion Lista_Declaraciones_metFunVarP\r\n        this.ignoraComentarios();\r\n        if(this.tokenActual.getTipo() == Tipo.llave_derecha){\r\n\r\n        }else{\r\n            this.Declaracion(); \r\n            this.Lista_Declaraciones_metFunVarP();\r\n        }\r\n        /*  ACA NO ME RECONOCIA BIEN LOS ERRORES :v \r\n               if(this.tokenActual.getTipo() == Tipo.p_res_Int || this.tokenActual.getTipo() == Tipo.p_res_double  || this.tokenActual.getTipo() == Tipo.p_res_Char || this.tokenActual.getTipo() == Tipo.p_res_String  || this.tokenActual.getTipo() == Tipo.p_res_Bool || this.tokenActual.getTipo() == Tipo.p_res_void){\r\n            this.Declaracion(); \r\n            this.Lista_Declaraciones_metFunVarP();\r\n        }\r\n        else{\r\n            // epsilon \r\n        }*/\r\n     \r\n    }\r\n    private Lista_Declaraciones_metFunVarP(){\r\n        this.ignoraComentarios();\r\n        if(this.tokenActual.getTipo() == Tipo.p_res_Int || this.tokenActual.getTipo() == Tipo.p_res_double  || this.tokenActual.getTipo() == Tipo.p_res_Char || this.tokenActual.getTipo() == Tipo.p_res_String  || this.tokenActual.getTipo() == Tipo.p_res_Bool || this.tokenActual.getTipo() == Tipo.p_res_void){\r\n            this.Declaracion(); \r\n            this.Lista_Declaraciones_metFunVarP();\r\n        }\r\n        else if ( (this.tokenActual.getTipo() == Tipo.punto_y_coma || this.tokenActual.getTipo() == Tipo.llave_derecha) && this.hay_error == true ) {\r\n            this.hay_error = false;\r\n            console.log(\"[HAMBITO DE CLASE ] SE RECUPERO CON EL SIMBOLO ; O }  EN LA FILA :\"+this.tokenActual.getFila()+\"   \"+this.tokenActual.getValor_lexema());\r\n            this.sig++;\r\n            this.tokenActual = this.listaTok[this.sig];  \r\n            this.Declaracion(); \r\n            this.Lista_Declaraciones_metFunVarP();\r\n        }\r\n        else{\r\n            // epsilon \r\n        }\r\n\r\n    }\r\n    private Lista_inst(){\r\n        this.Instruccion();\r\n        this.Lista_instP();// prima , solol pregunta si hay mas instrucciones \r\n    }\r\n\r\n    //----------------------------->>>>>>>>>>>>>> INIT INSTRUCCIONES \r\n\r\n    private Instruccion(){ \r\n       \r\n        this.ignoraComentarios(); \r\n\r\n        if(this.tokenActual.getTipo() == Tipo.p_res_if){// instruccion IF \r\n            this.tab(); \r\n            this.sentencia_if();\r\n        }else if(this.tokenActual.getTipo() == Tipo.p_Console){// CONSOLE.WRITE\r\n            this.tab(); \r\n            this.sentenciaImprime();\r\n        }else if(this.tokenActual.getTipo() == Tipo.id ){\r\n            this.tab(); \r\n            this.asignacionSimple();\r\n        }else if(this.tokenActual.getTipo() == Tipo.p_res_Int || this.tokenActual.getTipo() == Tipo.p_res_double  || this.tokenActual.getTipo() == Tipo.p_res_Char || this.tokenActual.getTipo() == Tipo.p_res_String  || this.tokenActual.getTipo() == Tipo.p_res_Bool){\r\n            this.tab(); \r\n            this.DECLARACION_ADENTRO_DE_METODOS_FUNCIONES();\r\n        }else if(this.tokenActual.getTipo() == Tipo.p_res_while){\r\n            this.tab();\r\n            this.sentencia_while();\r\n        }else if(this.tokenActual.getTipo() == Tipo.p_res_do){\r\n            this.tab();\r\n            this.sentencia_do_while();\r\n        }else if(this.tokenActual.getTipo() == Tipo.p_for){\r\n           this.tab(); \r\n           this.sentencia_for();\r\n        }else if(this.tokenActual.getTipo() == Tipo.p_res_switch){\r\n           this.tab();\r\n           this.sentencia_switch();\r\n        }else if(this.tokenActual.getTipo() == Tipo.P_res_return && this.acepta_return_metodos == true){\r\n            this.tab();\r\n            this.sentencia_return_metodos();\r\n        }else if(this.tokenActual.getTipo() == Tipo.P_res_return && this.acepta_return_funciones == true){\r\n            this.tab();\r\n            this.sentencia_return_funciones();\r\n        }else if(this.tokenActual.getTipo() == Tipo.p_res_continue && this.acepta_sentencia_continue == true){\r\n            this.tab(); \r\n            this.sentencia_continue();\r\n        }else if(this.tokenActual.getTipo() == Tipo.p_res_break && this.esta_en_el_switch == false && this.acepta_sentencia_break == true){\r\n            this.tab();\r\n            this.sentencia_break();\r\n        }\r\n        else{\r\n            // epsilon \r\n        }\r\n\r\n    }\r\n    \r\n    private Lista_instP(){\r\n        this.ignoraComentarios(); // siempre que voy a ver hacia que produccion ir \r\n        if(this.tokenActual.getTipo() == Tipo.p_res_if){\r\n            this.Instruccion(); \r\n            this.Lista_instP();\r\n        }else if(this.tokenActual.getTipo() == Tipo.p_Console){\r\n            this.Instruccion(); \r\n            this.Lista_instP(); \r\n        }else if(this.tokenActual.getTipo() == Tipo.id ){\r\n            this.Instruccion();\r\n            this.Lista_instP();\r\n        }else if(this.tokenActual.getTipo() == Tipo.p_res_Int || this.tokenActual.getTipo() == Tipo.p_res_double  || this.tokenActual.getTipo() == Tipo.p_res_Char || this.tokenActual.getTipo() == Tipo.p_res_String  || this.tokenActual.getTipo() == Tipo.p_res_Bool){\r\n            this.Instruccion();\r\n            this.Lista_instP();  \r\n        }else if(this.tokenActual.getTipo() == Tipo.p_res_while){\r\n            this.Instruccion();\r\n            this.Lista_instP();\r\n        }else if(this.tokenActual.getTipo() == Tipo.p_res_do){\r\n            this.Instruccion();\r\n            this.Lista_instP();\r\n        }else if(this.tokenActual.getTipo() == Tipo.p_for){\r\n            this.Instruccion();\r\n            this.Lista_instP();\r\n        }else if(this.tokenActual.getTipo() == Tipo.p_res_switch){\r\n            this.Instruccion();\r\n            this.Lista_instP();\r\n        }else if(this.tokenActual.getTipo() == Tipo.P_res_return && this.acepta_return_metodos == true){\r\n           this.Instruccion(); \r\n           this.Lista_instP();\r\n        }else if(this.tokenActual.getTipo() == Tipo.P_res_return && this.acepta_return_funciones == true){\r\n            this.Instruccion(); \r\n            this.Lista_instP();\r\n        }else if(this.tokenActual.getTipo() == Tipo.p_res_continue && this.acepta_sentencia_continue == true){\r\n            this.Instruccion(); \r\n            this.Lista_instP();\r\n        }else if(this.tokenActual.getTipo() == Tipo.p_res_break && this.esta_en_el_switch == false && this.acepta_sentencia_break == true){\r\n            this.Instruccion(); \r\n            this.Lista_instP();\r\n        }else if ( (this.tokenActual.getTipo() == Tipo.punto_y_coma || this.tokenActual.getTipo() == Tipo.llave_derecha) && this.hay_error == true ) {\r\n            this.hay_error = false;\r\n            console.log(\"[INSTRUCCION] SE RECUPERO CON EL SIMBOLO ; O }  EN LA FILA :\"+this.tokenActual.getFila());\r\n            this.sig++;\r\n            this.tokenActual = this.listaTok[this.sig];  \r\n            this.Instruccion();\r\n            this.Lista_instP();\r\n        } else {\r\n           \r\n              // epsilon -----\r\n              \r\n        }\r\n\r\n\r\n        // el ELSE ES MI EPSILON \r\n    }\r\n\r\n    //--------------------> INSTRUCCIONES FIN  <---------------------\r\n     /*   DECLARACION_ADENTRO_DE_METODOS_FUNCIONES-> tipo ID DeclaracionP_metodos\r\n    DeclaracionP_metodos -> Lista_ids asignacion \";\"*/\r\n    private DECLARACION_ADENTRO_DE_METODOS_FUNCIONES(){\r\n        this.vaciarVariables()//VACIA CONTENEDOR AUX \r\n        this.TipoActualVariable = this.tokenActual.getParaTabla();\r\n        this.Tipo(); \r\n        this.nombreVar = this.tokenActual.getValor_lexema();\r\n        this.nombres_variables_declaracion.push(new Tabla_Simbolos(this.tokenActual.getValor_lexema(),this.TipoActualVariable , this.tokenActual.getFila(), this.getValorPorDefecto(this.TipoActualVariable))); // NOM , TIP , FIL , VAL\r\n        this.Traducir = false;\r\n        this.parea(Tipo.id);\r\n        this.Traducir = true;\r\n        this.DeclaracionP_metodos();\r\n    }\r\n    private DeclaracionP_metodos(){\r\n        this.Lista_ids();\r\n        this.asignacion();\r\n        this.parea(Tipo.punto_y_coma);\r\n        // PUNTO DE SEND CANDENA TRADUCIDA \r\n        this.setValorAsignacion();\r\n     //   this.imprimirTABLA();\r\n        this.llenarListaTabla();\r\n    }\r\n\r\n    private sentencia_switch():void{\r\n        this.esta_en_el_switch = true;this.cadena_traducida+=\"def \";\r\n        this.parea(Tipo.p_res_switch);\r\n        this.parea(Tipo.parentesis_izq);  this.cadena_traducida +=\"case,\"\r\n        this.parea(Tipo.id);\r\n        this.parea(Tipo.parentesis_derecho); this.cadena_traducida+=\":\";\r\n        this.parea(Tipo.llave_izq);\r\n        this.tab(); this.cadena_traducida += \"switcher = {\\n\"; this.contadorTab++;\r\n        this.ListaCases();  // PREGUNTAR SI EL RETURN FUNCIONARIA EN VEZ DE UN BREAK\r\n        this.Default_();\r\n        this.tab(); this.cadena_traducida+= \"}\\n\";this.contadorTab--;\r\n        this.parea(Tipo.llave_derecha);\r\n        this.esta_en_el_switch = false;\r\n    }\r\n    private Default_(){\r\n        this.ignoraComentarios(); // SIEMPRE PARA PREGUNTAR A DONDE IR \r\n        if (this.tokenActual.getTipo() == Tipo.p_res_default)\r\n        {\r\n            this.tab();\r\n            this.parea(Tipo.p_res_default);\r\n            this.parea(Tipo.dosPuntos); this.salto();\r\n            this.Lista_inst(); \r\n            this.tab(); \r\n            this.parea(Tipo.p_res_break);this.cadena_traducida+=\",\";\r\n            this.parea(Tipo.punto_y_coma);\r\n        }\r\n        else {\r\n            // epsilón :v\r\n        }\r\n\r\n    }\r\n    private ListaCases(){\r\n        this.caseP();\r\n        this.ListaCasesP();\r\n    }\r\n\r\n    public recuperarDelError(){\r\n\r\n        if(this.hay_error == true && (this.tokenActual.getTipo() == Tipo.punto_y_coma || this.tokenActual.getTipo() == Tipo.llave_derecha  )){\r\n            this.hay_error = false; \r\n            this.sig++;\r\n            this.tokenActual = this.listaTok[this.sig];\r\n\r\n        }\r\n    }\r\n\r\n    private  ListaCasesP() {\r\n        this.ignoraComentarios();\r\n        if (this.tokenActual.getTipo() == Tipo.p_res_case)\r\n        {\r\n            this.caseP();\r\n            this.ListaCasesP();\r\n        }else if (this.tokenActual.getTipo() != Tipo.llave_derecha  && this.tokenActual.getTipo() != Tipo.sharp && this.tokenActual.getTipo() != Tipo.p_res_default   ) {\r\n            console.log(\"[ListaCasesP] RECUPERACION -->  \" + this.tokenActual.getValor_lexema()+\"   EN FILA : \"+this.tokenActual.getFila());\r\n            this.sig++;\r\n            this.tokenActual = this.listaTok[this.sig];\r\n            this.caseP();\r\n            this.ListaCasesP();\r\n          }\r\n        else\r\n        {\r\n            // epsilon -----\r\n        }\r\n\r\n\r\n    }\r\n    private caseP(){\r\n        this.tab(); this.Traducir = false;\r\n        this.parea(Tipo.p_res_case);  this.Traducir = true;\r\n        this.opcionCase(); \r\n        this.parea(Tipo.dosPuntos); this.cadena_traducida+=\"\\n\";\r\n        this.Lista_inst(); \r\n        this.tab(); \r\n        this.parea(Tipo.p_res_break);this.cadena_traducida+=\",\";\r\n        this.parea(Tipo.punto_y_coma);\r\n    }\r\n    private  opcionCase() {\r\n        this.ignoraComentarios();\r\n        \r\n        if (this.tokenActual.getTipo() == Tipo.numero) {\r\n            this.parea(Tipo.numero);\r\n        } else if (this.tokenActual.getTipo() == Tipo.cadena) {\r\n            this.parea(Tipo.cadena);\r\n        } else if(this.tokenActual.getTipo() == Tipo.id){\r\n            this.parea(Tipo.id);\r\n        }\r\n        else {\r\n            this.parea(Tipo.caracter); // cae un error si no es un caracter acá\r\n        }\r\n    }\r\n    private sentencia_for():void{ this.acepta_sentencia_continue = true;  this.acepta_sentencia_break =true ;\r\n    this.parea(Tipo.p_for);this.Traducir= false;\r\n    this.parea(Tipo.parentesis_izq);\r\n    this.declaracionFOR();this.NO_salto =true;\r\n    this.parea(Tipo.punto_y_coma);// PUNTO Y COMA DONDE NO DEBE HACER SALTO \r\n    this.lista_expresiones_condicionales();this.definirRango_for();\r\n    this.parea(Tipo.punto_y_coma);// PUNTO Y COMA DONDE NO DEBE HACER SALTO \r\n    this.parea(Tipo.id);this.NO_salto =false;\r\n    this.DecrementoIncremento();\r\n    this.parea(Tipo.parentesis_derecho);\r\n    this.ListaIns_entreLLaves(); \r\n    this.acepta_sentencia_continue = false; this.acepta_sentencia_break =false ; this.guardarIntervalo = 0;\r\n    }\r\n    private declaracionFOR(){\r\n        this.ignoraComentarios(); // VA SIEMPRE ANTES DE PREGUNTAR A DONDE MOVERME \r\n        if(this.tokenActual.getTipo() == Tipo.id){this.Traducir = true;this.cadena_traducida += \" \";\r\n            this.parea(Tipo.id);\r\n            this.cadena_traducida+= \" in range(\" ;this.Traducir= false;\r\n            this.parea(Tipo.igual);this.guardarIntervalo = 1 ; \r\n            this.expresion();\r\n           // this.cadena_traducida+=this.intervalo1 +\",\";\r\n        }else{\r\n            this.TipoActualVariable = this.tokenActual.getParaTabla(); // GUARDO EL TIPO \r\n            this.Tipo(); this.Traducir = true; this.cadena_traducida += \" \";\r\n            let id:string = \"\"; \r\n            id = this.tokenActual.getValor_lexema();\r\n            let fila:number = 0; \r\n            fila = this.tokenActual.getFila();\r\n            this.parea(Tipo.id);\r\n            this.cadena_traducida+= \" in range(\" ;this.Traducir= false;\r\n            this.parea(Tipo.igual);\r\n            this.guardarIntervalo = 1 ;// interruptor para saber en donde guardar\r\n            this.GUARDAR_EXPRESION=\"\";// LIMPIA \r\n            this.save_expression = true;\r\n            this.expresion();\r\n            this.save_expression = false;\r\n            console.log(\"INTERVALO 1 \"+id+\" = \"+ this.GUARDAR_EXPRESION);\r\n            this.INTERVALO1_  = this.GUARDAR_EXPRESION;\r\n            this.tabla.push(new Tabla_Simbolos(id,this.TipoActualVariable ,fila ,this.GUARDAR_EXPRESION )); // NOM , TIP , FIL , VAL\r\n            // this.cadena_traducida+=this.intervalo1 +\",\";\r\n        }\r\n    }\r\n    private DecrementoIncremento(){\r\n        this.ignoraComentarios();\r\n        if(this.tokenActual.getTipo() == Tipo.decremento){\r\n            this.parea(Tipo.decremento);\r\n        }else{\r\n            this.parea(Tipo.incremento);\r\n        }\r\n    }\r\n    private sentencia_do_while():void{this.acepta_sentencia_continue = true; this.acepta_sentencia_break =true ; this.Traducir = false; \r\n        this.cadena_traducida+=\"while True:\";\r\n        this.parea(Tipo.p_res_do);this.Traducir = true;\r\n        this.ListaIns_entreLLaves();\r\n        this.Traducir = false;\r\n        this.parea(Tipo.p_res_while);this.tab(); this.cadena_traducida+=\"if \"; this.Traducir = true;\r\n        this.parea(Tipo.parentesis_izq);\r\n        this.lista_expresiones_condicionales(); \r\n        this.parea(Tipo.parentesis_derecho);this.cadena_traducida+=\":\\n\";this.tab(); this.cadena_traducida+=\"\\tbreak\\n\" \r\n        this.parea(Tipo.punto_y_coma);this.acepta_sentencia_continue = false;this.acepta_sentencia_break = false;\r\n    }\r\n    private sentencia_while():void{ this.acepta_sentencia_continue = true; this.acepta_sentencia_break = true ;\r\n        this.parea(Tipo.p_res_while);\r\n        this.parea(Tipo.parentesis_izq);\r\n        this.lista_expresiones_condicionales();\r\n        this.parea(Tipo.parentesis_derecho);\r\n        this.ListaIns_entreLLaves();\r\n        this.acepta_sentencia_continue = false;  this.acepta_sentencia_break = false ;\r\n    }\r\n\r\n    private Declaracion(){\r\n        this.ignoraComentarios();\r\n        this.Traducir = false;\r\n        if(this.tokenActual.getTipo() == Tipo.p_res_void){\r\n            \r\n          this.parea(Tipo.p_res_void);this.Traducir = true;this.acepta_return_metodos = true; \r\n          this.tab();\r\n           this.cadena_traducida += \"def \";\r\n            if(this.tokenActual.getValor_lexema() == \"main\"){\r\n                this.esElMain = true;\r\n            }\r\n            this.parea(Tipo.id);\r\n            this.parea(Tipo.parentesis_izq);\r\n            this.opcionMetodoFuncion();\r\n        }else{\r\n            this.vaciarVariables()//VACIA CONTENEDOR AUX \r\n            this.TipoActualVariable = this.tokenActual.getParaTabla();\r\n            \r\n            this.Tipo(); \r\n            this.nombreVar = this.tokenActual.getValor_lexema();\r\n            this.nombres_variables_declaracion.push(new Tabla_Simbolos(this.tokenActual.getValor_lexema(),this.TipoActualVariable , this.tokenActual.getFila(), this.getValorPorDefecto(this.TipoActualVariable))); // NOM , TIP , FIL , VAL\r\n            this.Traducir = false; \r\n            this.parea(Tipo.id);\r\n            this.Traducir = true;\r\n            this.DeclaracionP();\r\n        }\r\n    }\r\n    private vaciarVariables(){\r\n        let Vaciar:any =[];\r\n        this.nombres_variables_declaracion = Vaciar;\r\n    }\r\n    public imprimirTABLA(){\r\n        console.log(\"-------IMPRIMIENDO TABLA-------\");\r\n        for (let x = 0; x <this.nombres_variables_declaracion.length; x++) {\r\n            console.log(\"VARIABLE \" + this.nombres_variables_declaracion[x].getNombre() + \" TIPO: \" + this.nombres_variables_declaracion[x].getTipo() + \" Fila \" + this.nombres_variables_declaracion[x].getFila() );\r\n        }\r\n    }\r\n    public getValorPorDefecto(tipo:string):string{\r\n        if(tipo == \"int\"){// SI CAMBIO ALGO ACA TENGO QUE CAMBIARLO TAMBIEN EN TOKEN \r\n            return \"0\";\r\n        }\r\n        else if(tipo == \"char\"){\r\n            return \"\\' \\'\"\r\n\r\n        }else if(tipo == \"string\"){\r\n            return \"\\\"\\\"\";\r\n\r\n        }else if(tipo == \"Bool\"){\r\n            return \"True\"\r\n        }else if(tipo == \"Double\"){\r\n            return \"0.00\"\r\n        }else{\r\n            return \" \";\r\n        }\r\n    }\r\n    \r\n    private opcionMetodoFuncion(){\r\n        this.ignoraComentarios();\r\n        if(this.tokenActual.getTipo() == Tipo.parentesis_derecho || this.esElMain == true){\r\n            this.parea(Tipo.parentesis_derecho); this.cadena_traducida += \":\";\r\n            this.ListaIns_entreLLaves();\r\n            this.acepta_return_metodos = false;\r\n             this.acepta_return_funciones = false; \r\n             this.esElMain = false;\r\n        }else{\r\n            this.Tipo(); \r\n            this.parea(Tipo.id);\r\n            this.lista_parametros(); \r\n            this.parea(Tipo.parentesis_derecho);this.cadena_traducida += \":\";\r\n            this.ListaIns_entreLLaves();this.acepta_return_metodos = false;\r\n            this.acepta_return_funciones = false;  \r\n            this.esElMain = false;  \r\n        }\r\n    }\r\n    private ListaIns_entreLLaves(){\r\n      \r\n        this.parea(Tipo.llave_izq);\r\n        this.Lista_inst();\r\n        this.Traducir= false;\r\n        if(this.esElMain == true){\r\n            this.cadena_traducida +=\"\\n\";\r\n            this.tab();\r\n            this.cadena_traducida += \"if_name_ = \\\"_main_\\\": \\n\";\r\n            this.tab(); \r\n            this.cadena_traducida+=\"\\tmain()\\n\";\r\n        }\r\n        this.parea(Tipo.llave_derecha);\r\n       this.Traducir = true;\r\n    }\r\n    private DeclaracionP(){\r\n        this.ignoraComentarios();\r\n        if(this.tokenActual.getTipo() == Tipo.parentesis_izq){\r\n            this.tab();this.cadena_traducida+=\"def \"+ this.nombreVar;\r\n            this.parea(Tipo.parentesis_izq);this.acepta_return_funciones = true;\r\n            this.opcionMetodoFuncion();\r\n        }else{\r\n             this.Lista_ids();\r\n             this.asignacion();\r\n             this.parea(Tipo.punto_y_coma);\r\n             // PUNTO DE SEND CANDENA TRADUCIDA \r\n             this.setValorAsignacion();\r\n          //   this.imprimirTABLA();\r\n             this.llenarListaTabla();\r\n            }\r\n    }\r\n    public llenarListaTabla(){\r\n        for (let x = 0; x <this.nombres_variables_declaracion.length; x++) {\r\n            let obj:Tabla_Simbolos = new Tabla_Simbolos(this.nombres_variables_declaracion[x].getNombre() , this.nombres_variables_declaracion[x].getTipo() , this.nombres_variables_declaracion[x].getFila()  , this.nombres_variables_declaracion[x].getValor());\r\n            this.tabla.push(obj);\r\n        } \r\n    }\r\n    private setValorAsignacion(){\r\n        if(this.GUARDAR_EXPRESION ==\"NO\"){\r\n            for (let x = 0; x <this.nombres_variables_declaracion.length; x++) {\r\n                this.tab();\r\n                this.cadena_traducida+=\"var \" +this.nombres_variables_declaracion[x].getNombre() +\" = \" +this.nombres_variables_declaracion[x].getValor() +\"\\n\";\r\n            }\r\n             \r\n        }else{\r\n            for (let x = 0; x <this.nombres_variables_declaracion.length; x++) {\r\n                this.tab();\r\n                this.cadena_traducida+=\"var \" + this.nombres_variables_declaracion[x].getNombre() +\" = \" +this.GUARDAR_EXPRESION +\"\\n\";\r\n            } \r\n           \r\n        }\r\n    }\r\n    public imprimirTABLA_SEND(){\r\n        console.log(\" IMPRIMIENDO TABLA a MOSTRAR \");\r\n        for (let x = 0; x < this.tabla.length; x++) {\r\n            console.log(\"VAR: \" + this.tabla[x].getNombre() + \" TIPO: \" + this.tabla[x].getTipo() + \" Fila \" + this.tabla[x].getFila() +\" VALOR: \"+this.tabla[x].getValor());\r\n        }    \r\n    }\r\n    private Lista_ids(){\r\n        this.ignoraComentarios();\r\n        if(this.tokenActual.getTipo() == Tipo.coma ){\r\n            this.Traducir = false;\r\n            this.parea(Tipo.coma);\r\n            this.nombres_variables_declaracion.push(new Tabla_Simbolos(this.tokenActual.getValor_lexema(),this.TipoActualVariable , this.tokenActual.getFila(), this.getValorPorDefecto(this.TipoActualVariable))); // NOM , TIP , FIL , VAL\r\n            this.parea(Tipo.id);\r\n            this.Lista_ids();\r\n            this.Traducir = true;\r\n             // PARA VER QUE PEX :v\r\n\r\n        }else{\r\n            // EPSILON \r\n        }\r\n       \r\n    }\r\n    private asignacion(){\r\n        this.ignoraComentarios();\r\n        if(this.tokenActual.getTipo() == Tipo.igual){\r\n            this.Traducir = false;\r\n            this.GUARDAR_EXPRESION =\"\";\r\n            this.parea(Tipo.igual);\r\n            this.save_expression = true;\r\n            this.expresion();\r\n            this.save_expression = false;\r\n            this.Traducir = true;\r\n        }else{\r\n             this.GUARDAR_EXPRESION =\"NO\";\r\n            // epsilon \r\n        }\r\n    }\r\n    private asignacionSimple():void{\r\n        this.parea(Tipo.id);\r\n        this.OpcionAsignacion();\r\n    }\r\n    private OpcionAsignacion(){\r\n        this.ignoraComentarios();\r\n        if(this.tokenActual.getTipo() == Tipo.parentesis_izq){\r\n         // CASO DE LLAMANDO METODO \r\n         this.parea(Tipo.parentesis_izq);\r\n         this.sentencia_llama_metodo(); \r\n         this.parea(Tipo.punto_y_coma); // this.salto();\r\n        }else{\r\n            \r\n           this.parea(Tipo.igual);\r\n          \r\n           this.expresion();\r\n           this.parea(Tipo.punto_y_coma);// this.salto();\r\n        }\r\n    }\r\n    private ListaExpresiones(){\r\n        this.expresion();\r\n       this.ListaExpresionesP();\r\n    }\r\n    private ListaExpresionesP(){\r\n        this.ignoraComentarios();\r\n        if(this.tokenActual.getTipo() == Tipo.coma){\r\n            this.parea(Tipo.coma);\r\n            this.expresion();\r\n            this.ListaExpresionesP();\r\n        }else{\r\n            // epsilon \r\n        }\r\n    }\r\n    private sentencia_llama_metodo(){\r\n        this.ignoraComentarios();\r\n        if(this.tokenActual.getTipo() == Tipo.parentesis_derecho){     \r\n            this.parea(Tipo.parentesis_derecho);\r\n        }else{\r\n             this.ListaExpresiones();\r\n             this.parea(Tipo.parentesis_derecho);\r\n        }\r\n    }\r\n    private  lista_parametros(){\r\n        this.ignoraComentarios();\r\n        if(this.tokenActual.getTipo() == Tipo.coma){\r\n            this.parea(Tipo.coma);\r\n            this.Tipo(); \r\n            this.parea(Tipo.id);\r\n            this.lista_parametros();\r\n        }else{\r\n            // epsilon \r\n        }\r\n\r\n    }\r\n    private Tipo(){\r\n        this.ignoraComentarios();\r\n        this.Traducir = false; \r\n        if(this.tokenActual.getTipo() == Tipo.p_res_Int){\r\n            this.parea(Tipo.p_res_Int);\r\n        }else if( this.tokenActual.getTipo() == Tipo.p_res_double ){\r\n            this.parea(Tipo.p_res_double);\r\n        }else if ( this.tokenActual.getTipo() == Tipo.p_res_Char){\r\n            this.parea(Tipo.p_res_Char);\r\n        }else if(this.tokenActual.getTipo() == Tipo.p_res_String){\r\n            this.parea(Tipo.p_res_String);\r\n        }else{\r\n            this.parea(Tipo.p_res_Bool);\r\n        }\r\n        this.Traducir = true;\r\n    }\r\n   \r\n    private sentenciaImprime():void{\r\n        this.Traducir = false;this.viene_de_sentencia_imprimir = true;\r\n        this.cadena_traducida += \"print\";\r\n        this.parea(Tipo.p_Console);\r\n        this.parea(Tipo.punto);\r\n        this.parea(Tipo.p_Write);this.al_menos_una_cadena = false;\r\n        this.Traducir = true;\r\n        this.parea(Tipo.parentesis_izq);\r\n        this.expresion();\r\n        this.parea(Tipo.parentesis_derecho);\r\n        this.parea(Tipo.punto_y_coma);this.viene_de_sentencia_imprimir = false; this.al_menos_una_cadena = true;\r\n    }\r\n        \r\n    \r\n    private sentencia_if(){\r\n        this.parea(Tipo.p_res_if);this.cadena_traducida+=\" \";this.Traducir = false;\r\n        this.parea(Tipo.parentesis_izq);this.Traducir = true;\r\n        this.lista_expresiones_condicionales();this.Traducir = false;\r\n        this.parea(Tipo.parentesis_derecho); this.Traducir = true; this.cadena_traducida +=\":\";this.Traducir = false;\r\n        this.parea(Tipo.llave_izq); this.Traducir = true; //this.salto();\r\n        this.Lista_inst(); this.Traducir = false;\r\n        this.parea(Tipo.llave_derecha);this.Traducir = true; //this.salto();\r\n        this.elseP();\r\n    }\r\n    private elseP(){\r\n        this.tab(); this.ignoraComentarios();\r\n\r\n        if (this.tokenActual.getTipo() == Tipo.p_res_else) {\r\n            this.Traducir = false;\r\n            this.parea(Tipo.p_res_else);\r\n            this.Traducir= true; \r\n            this.multiplesIf();\r\n        } else { \r\n            // EPSILON \r\n        }\r\n       \r\n    }\r\n    private multiplesIf(){\r\n        this.ignoraComentarios();\r\n        if(this.tokenActual.getTipo() == Tipo.llave_izq){\r\n            this.cadena_traducida+=\"else\"; this.Traducir = false;\r\n            this.parea(Tipo.llave_izq);  this.Traducir= true; //this.salto();\r\n            this.Lista_inst();this.Traducir = false;\r\n            this.parea(Tipo.llave_derecha); this.Traducir = true; //this.salto();\r\n        }else{\r\n\r\n            this.sentencia_elif();\r\n        }\r\n    }\r\n    private sentencia_elif(){\r\n        this.Traducir = false; this.cadena_traducida +=\"elif\";\r\n        this.parea(Tipo.p_res_if);this.cadena_traducida+=\" \";this.Traducir = false;\r\n        this.parea(Tipo.parentesis_izq);this.Traducir = true;\r\n        this.lista_expresiones_condicionales();this.Traducir = false;\r\n        this.parea(Tipo.parentesis_derecho); this.Traducir = true; this.cadena_traducida +=\":\";this.Traducir = false;\r\n        this.parea(Tipo.llave_izq); this.Traducir = true; //this.salto();\r\n        this.Lista_inst(); this.Traducir = false;\r\n        this.parea(Tipo.llave_derecha); this.Traducir = true;//this.salto();\r\n        this.elseP();        \r\n    }\r\n    private sentencia_return_funciones(){\r\n        this.parea(Tipo.P_res_return);this.cadena_traducida+=\" \";\r\n        this.lista_expresiones_condicionales(); \r\n        this.parea(Tipo.punto_y_coma); \r\n    }\r\n    private sentencia_return_metodos(){\r\n        this.parea(Tipo.P_res_return);\r\n        this.parea(Tipo.punto_y_coma); \r\n    }\r\n    private sentencia_continue(){\r\n        this.parea(Tipo.p_res_continue);\r\n        this.parea(Tipo.punto_y_coma);\r\n    }\r\n    private sentencia_break(){\r\n        this.parea(Tipo.p_res_break);\r\n        this.parea(Tipo.punto_y_coma);\r\n    }\r\n\r\n    private lista_expresiones_condicionales(){\r\n        this.guardarIntervalo= 2;this.guardaIntervalorFor(this.tokenActual.getValor_lexema());\r\n        this.expresion(); this.guardarIntervalo =0;\r\n        this.lista_expresiones_condicionalesP();\r\n    }\r\n\r\n    private lista_expresiones_condicionalesP(){\r\n        this.ignoraComentarios();\r\n       if(this.tokenActual.getTipo() == Tipo.sb_and){ this.cadena_traducida+=\" and \";this.Traducir = false;\r\n        this.parea(Tipo.sb_and);this.Traducir = true;\r\n        this.expresion(); \r\n        this.lista_expresiones_condicionalesP();\r\n       }else if(this.tokenActual.getTipo() == Tipo.sb_or){this.cadena_traducida+=\" or \";this.Traducir = false;\r\n        this.parea(Tipo.sb_or);this.Traducir = true;\r\n        this.expresion(); \r\n        this.lista_expresiones_condicionalesP();\r\n       }else{\r\n           // epsilon \r\n       }\r\n    }\r\n    \r\n    // ------------------> EXPRESIONES <----------------------------\r\n    private expresionMetodo(){\r\n        this.ignoraComentarios();\r\n        if(this.tokenActual.getTipo() == Tipo.parentesis_izq){\r\n            this.parea(Tipo.parentesis_izq);\r\n            this.sentencia_llama_metodo(); \r\n          \r\n        }else{\r\n            // EPSILON \r\n        }\r\n    }\r\n    private  expresion() {\r\n        this.E();\r\n        this.simboloComparacionOpcional();\r\n    }\r\n    private E(){ // E-> T() EP\r\n        this.T();\r\n        this.EP();// E PRIMA \r\n\r\n    }\r\n    private T(){\r\n            // T->F TP  = T-> FT'\r\n        this.F();\r\n        this.TP();\r\n    }\r\n    private TP ():void\r\n    {\r\n        this.ignoraComentarios();\r\n        if (this.tokenActual.getTipo() == Tipo.sb_por)\r\n        {\r\n            // TP-> * F TP\r\n            this.parea(Tipo.sb_por);\r\n            this.F();\r\n            this.TP();\r\n        }\r\n        else if (this.tokenActual.getTipo() == Tipo.sb_division)\r\n        {\r\n            // TP-> / F TP\r\n            this.parea(Tipo.sb_division);\r\n            this.F();\r\n            this.TP();\r\n        }\r\n        else\r\n        {\r\n            // TP-> EPSILON\r\n        }\r\n    }\r\n    private guardaIntervalorFor(loqueVenga:any){\r\n        if(this.guardarIntervalo == 1){\r\n            this.intervalo1 = loqueVenga;\r\n        }else if(this.guardarIntervalo == 2){\r\n            this.intervalo2 = loqueVenga;\r\n        }\r\n    }\r\n    public  F():void\r\n    {\r\n        this.ignoraComentarios(); \r\n  \r\n       if(this.tokenActual.getTipo() == Tipo.numero){\r\n        this.guardaIntervalorFor(this.tokenActual.getValor_lexema());\r\n       }\r\n\r\n        if (this.tokenActual.getTipo() == Tipo.decimales)\r\n        {\r\n            //F->  NUMERO\r\n            this.parea(Tipo.decimales);\r\n        }\r\n        else if (this.tokenActual.getTipo() == Tipo.parentesis_izq)\r\n        {\r\n            //F->  (E)\r\n            this.parea(Tipo.parentesis_izq);\r\n            this.expresion();\r\n            this.parea(Tipo.parentesis_derecho);\r\n        }\r\n        \r\n        else if (this.tokenActual.getTipo() == Tipo.cadena)\r\n        {\r\n            //F->  CADENA\r\n            this.al_menos_una_cadena = true;\r\n            this.parea(Tipo.cadena);\r\n        }\r\n        else if (this.tokenActual.getTipo() == Tipo.id)\r\n        {\r\n            //F->  id\r\n            this.parea(Tipo.id);\r\n            this.expresionMetodo();\r\n        }\r\n        else if (this.tokenActual.getTipo() == Tipo.p_res_true)\r\n        {\r\n            //F->  TRUE\r\n            this.Traducir = false; this.cadena_traducida+=\"True\";\r\n            this.parea(Tipo.p_res_true);\r\n            this.Traducir= true;\r\n        }\r\n        else if (this.tokenActual.getTipo() == Tipo.p_res_false)\r\n        {\r\n            //F->  FALSE\r\n            this.Traducir = false; this.cadena_traducida+=\"False\";\r\n            this.parea(Tipo.p_res_false);\r\n            this.Traducir= true;\r\n        }\r\n        else if (this.tokenActual.getTipo() == Tipo.caracter)\r\n        {\r\n            // caracter \r\n \r\n            this.parea(Tipo.caracter);\r\n        }\r\n        else if(this.tokenActual.getTipo() == Tipo.sb_negacion){\r\n            this.Traducir= false;\r\n            this.parea(Tipo.sb_negacion);this.cadena_traducida +=\" not \"; this.Traducir= true;\r\n            this.E();\r\n        }else if(this.viene_de_sentencia_imprimir == true && this.tokenActual.getTipo() == Tipo.html){\r\n                let cad_temporal = this.tokenActual.getValor_lexema();\r\n                for(let k = 1 ; k< cad_temporal.length-1 ; k++){\r\n                    this.cadena_html+=cad_temporal[k];\r\n                }\r\n                \r\n                this.parea(Tipo.html);\r\n        }\r\n        else \r\n        {\r\n            // EXCEPTION  \r\n            this.parea(Tipo.numero);\r\n        }\r\n    }\r\n    private EP(){\r\n        this.ignoraComentarios();\r\n            if (this.tokenActual.getTipo() == Tipo.sb_mas)\r\n            {\r\n                //EP-> + T EP\r\n\r\n                this.parea(Tipo.sb_mas);\r\n                this.T();\r\n                this.EP();\r\n            }\r\n            else if (this.tokenActual.getTipo() == Tipo.sb_menos)\r\n            {\r\n                //EP-> - T EP\r\n                this.parea(Tipo.sb_menos);\r\n                this.T();\r\n                this.EP();\r\n            }\r\n            else\r\n            {\r\n                // EP-> EPSILON\r\n            }\r\n    }\r\n\r\n    public definirRango_for(){ // numero , numero): saLTO DE LINEA\r\n        if(this.la_cadena_son_solo_numeros(this.INTERVALO1_) == true && this.la_cadena_son_solo_numeros(this.INTERVALO2_) == true ){\r\n            if(this.simboloComparativoFor == \">=\"){\r\n                // quiere decir que el primero es mas pequeño \r\n                let num:number = parseInt( this.intervalo1)+1;\r\n                let num2:number = parseInt( this.intervalo2) + 1;\r\n                this.cadena_traducida+=num2+\",\"+num+\"):\\n\";\r\n            }else if (this.simboloComparativoFor == \"<=\"){\r\n                let num:number = parseInt( this.intervalo1) + 1;\r\n                let num2:number = parseInt( this.intervalo2) + 1;\r\n                this.cadena_traducida+=num +\",\"+num2+\"):\\n\";\r\n            }else if (this.simboloComparativoFor == \"<\"){\r\n                let num:number = parseInt( this.intervalo1) + 1;\r\n                this.cadena_traducida+= num+\",\"+ this.intervalo2+\"):\\n\";\r\n            }else if (this.simboloComparativoFor == \">\"){\r\n                let num2:number = parseInt( this.intervalo2) + 1;\r\n                this.cadena_traducida+=num2+\",\"+this.intervalo1+\"):\\n\";\r\n            }\r\n        }else{\r\n            this.cadena_traducida+= this.INTERVALO1_+\",\"+this.INTERVALO2_+\"):\\n\";\r\n        }\r\n\r\n    }\r\n\r\n    private simboloComparacionOpcional(){\r\n        this.ignoraComentarios();\r\n        // PARA TRAUDCIR\r\n        if(this.guardarIntervalo == 2){\r\n           this.simboloComparativoFor = this.tokenActual.getValor_lexema();\r\n        }    \r\n        //----\r\n        if (this.tokenActual.getTipo() == Tipo.igualComparacion)\r\n        {             // simboloComparacionOpcional  -> == E\r\n            this.parea(Tipo.igualComparacion);\r\n            if(this.guardarIntervalo == 2){\r\n                this.GUARDAR_EXPRESION=\"\";// LIMPIA \r\n                this.save_expression = true;\r\n                this.E();\r\n                this.save_expression = false;\r\n                console.log(\"INTERVALO 2 == \"+ this.GUARDAR_EXPRESION);\r\n                this.INTERVALO2_ = this.GUARDAR_EXPRESION;\r\n             }else{\r\n                this.E();\r\n             }    \r\n\r\n        }\r\n        else if (this.tokenActual.getTipo() == Tipo.mayor_que)\r\n        {             // simboloComparacionOpcional  -> > E\r\n            this.parea(Tipo.mayor_que);\r\n            if(this.guardarIntervalo == 2){\r\n                this.GUARDAR_EXPRESION=\"\";// LIMPIA \r\n                this.save_expression = true;\r\n                this.E();\r\n                this.save_expression = false;\r\n                console.log(\"INTERVALO 2 > \"+ this.GUARDAR_EXPRESION);\r\n                this.INTERVALO2_ = this.GUARDAR_EXPRESION;\r\n             }else{\r\n                this.E();\r\n             }    \r\n        }\r\n        else if (this.tokenActual.getTipo() == Tipo.menor_que)\r\n        {\r\n            this.parea(Tipo.menor_que);\r\n            if(this.guardarIntervalo == 2){\r\n                this.GUARDAR_EXPRESION=\"\";// LIMPIA \r\n                this.save_expression = true;\r\n                this.E();\r\n                this.save_expression = false;\r\n                console.log(\"INTERVALO 2 < \"+ this.GUARDAR_EXPRESION);\r\n                this.INTERVALO2_ = this.GUARDAR_EXPRESION;\r\n             }else{\r\n                this.E();\r\n             }    \r\n        }\r\n        else if (this.tokenActual.getTipo() == Tipo.menor_o_igual)\r\n        { \r\n            this.parea(Tipo.menor_o_igual);\r\n            if(this.guardarIntervalo == 2){\r\n                this.GUARDAR_EXPRESION=\"\";// LIMPIA \r\n                this.save_expression = true;\r\n                this.E();\r\n                this.save_expression = false;\r\n                console.log(\"INTERVALO 2 <= \"+ this.GUARDAR_EXPRESION);\r\n                this.INTERVALO2_ = this.GUARDAR_EXPRESION;\r\n             }else{\r\n                this.E();\r\n             }    \r\n        }\r\n        else if (this.tokenActual.getTipo() == Tipo.mayor_o_igual)\r\n        {             // simboloComparacionOpcional  ->   >= E\r\n            this.parea(Tipo.mayor_o_igual);\r\n            if(this.guardarIntervalo == 2){\r\n                this.GUARDAR_EXPRESION=\"\";// LIMPIA \r\n                this.save_expression = true;\r\n                this.E();\r\n                this.save_expression = false;\r\n                console.log(\"INTERVALO 2 >= \"+ this.GUARDAR_EXPRESION);\r\n                this.INTERVALO2_ = this.GUARDAR_EXPRESION;\r\n             }else{\r\n                this.E();\r\n             }    \r\n        }\r\n        else if (this.tokenActual.getTipo() == Tipo.diferente)\r\n        {             // simboloComparacionOpcional  ->   != E\r\n            this.parea(Tipo.diferente);\r\n            if(this.guardarIntervalo == 2){\r\n                this.GUARDAR_EXPRESION=\"\";// LIMPIA \r\n                this.save_expression = true;\r\n                this.E();\r\n                this.save_expression = false;\r\n                console.log(\"INTERVALO 2 != \"+ this.GUARDAR_EXPRESION);\r\n                this.INTERVALO2_ = this.GUARDAR_EXPRESION;\r\n             }else{\r\n                this.E();\r\n             }    \r\n        }\r\n        else\r\n        {\r\n            // simboloComparacionOpcional  -> -EPSILON\r\n        }\r\n    } \r\n    public la_cadena_son_solo_numeros(intervaloN:string):boolean{\r\n        console.log(\"***********************************************\");\r\n        console.log(\"Revisando el intervalo: \" + intervaloN);\r\n        for (let i = 0; i < intervaloN.length; i++) {\r\n            let caracter:any = intervaloN[i];\r\n              if(this.esDigito(caracter)){\r\n\r\n              }else{\r\n                  console.log(\"NO es un numero\");\r\n                  console.log(\"***********************************************\");\r\n\r\n                  return false;\r\n              }\r\n        }\r\n        console.log(\"SI es un numero\");\r\n        console.log(\"***********************************************\");\r\n\r\n        return true; \r\n    }\r\n\r\n    public esDigito (caracter){\r\n        let ascii = caracter.charCodeAt(0);\r\n        return ascii > 47 && ascii < 58;\r\n    }\r\n\r\n   \r\n    private parea(tip : Tipo):void{\r\n    // LLAMAR A IGNORA COMENTARIOS \r\n    this.ignoraComentarios();\r\n    if(this.tokenActual.getTipo() != tip){\r\n    if(this.hay_error == false){\r\n        this.lista_errores_sin.push(new ErroresSintacticos(this.tokenActual.getFila() , this.tokenActual.getColumna() ,this.getTipoParaError(tip), this.tokenActual.getTipo_str() ));\r\n        console.log(\"se activo un   ERROR en la fila \" + this.tokenActual.getFila() + \"SE ESPERABA \" + this.getTipoParaError(tip) + \"en lugar de \"+ this.tokenActual.getTipo_str() );\r\n        this.hay_error = true;\r\n    }\r\n    }\r\n            \r\n    if((this.hay_error == true && this.tokenActual.getTipo() == Tipo.punto_y_coma && tip == Tipo.punto_y_coma) || (this.hay_error == true && this.tokenActual.getTipo() == Tipo.llave_derecha && tip == Tipo.llave_derecha) ){// truncamiento de fin de \r\n        this.hay_error = false;\r\n        console.log(\"[PAREA]SE RECUPERO a partir de la fila :  \" + this.tokenActual.getFila());\r\n    }\r\n\r\n    if (this.tokenActual.getTipo() != Tipo.sharp) // AGREGAR EL SHARP \r\n    {  \r\n        if(this.tomarLLaves){   \r\n            this.ControldeLLaves();\r\n        }\r\n\r\n        if((this.tokenActual.getTipo() == Tipo.punto_y_coma|| this.tokenActual.getTipo() == Tipo.llave_derecha || this.tokenActual.getTipo() == Tipo.llave_izq) && this.NO_salto == false){\r\n            this.cadena_traducida = this.cadena_traducida + \"\\n\";\r\n        }\r\n        if(this.save_expression == true){\r\n            this.GUARDAR_EXPRESION += this.tokenActual.getValor_lexema();\r\n        }\r\n \r\n            if (this.Traducir) {\r\n            if(this.tokenActual.getTipo() != Tipo.punto_y_coma && this.tokenActual.getTipo() != Tipo.llave_izq && this.tokenActual.getTipo() != Tipo.llave_derecha){\r\n                // si viene un switcher si le agrego LAS LLAVES  \r\n                if(this.viene_de_sentencia_imprimir == true && this.al_menos_una_cadena == true && this.tokenActual.getTipo() == Tipo.sb_mas){\r\n                    this.cadena_traducida+=\",\";\r\n                }else{\r\n                    this.cadena_traducida += this.tokenActual.getValor_lexema();\r\n                } \r\n            }    \r\n            }// fin traducir\r\n         \r\n        if(this.hay_error){\r\n            // CUANDO DEJO DE CAMBIAR DE TOKENS , debo desechar hasta llegar a punto y coma o llave de cierre\r\n            if(\r\n               this.tokenActual.getTipo() != Tipo.punto_y_coma &&\r\n               this.tokenActual.getTipo() != Tipo.llave_derecha &&\r\n               this.tokenActual.getTipo() != Tipo.sharp\r\n               ){\r\n            this.sig++;\r\n            this.tokenActual = this.listaTok[this.sig];\r\n            }   \r\n          \r\n        }else{\r\n            this.sig++;\r\n            this.tokenActual = this.listaTok[this.sig];\r\n        }\r\n    \r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nprivate salto():void{\r\n    // es solo para los primeros de cada instruccion \r\n    this.cadena_traducida += \"\\n\";\r\n}\r\n\r\nprivate ControldeLLaves():void{ // QUITAR 2 CASOS \r\n\r\n    if (this.tokenActual.getTipo() == Tipo.llave_izq)\r\n    {\r\n\r\n        this.contadorTab++;\r\n       //alert(\"contador de tabs POR LLAVE + :\" + this.contadorTab  +\"  en linea: \" +this.tokenActual.getFila());\r\n\r\n\r\n    } else if (this.tokenActual.getTipo() == Tipo.llave_derecha) {\r\n        this.contadorTab--;\r\n      //alert(\"contador de tabs POR LLAVE - en :\" + this.contadorTab+\"  en linea: \" +this.tokenActual.getFila());\r\n    }\r\n}\r\n\r\nprivate ignoraComentarios():void {\r\n    while (this.tokenActual.getTipo() == Tipo.comentarioBloques || this.tokenActual.getTipo() == Tipo.comentarioLinea)\r\n    {\r\n        this.sig++;\r\n        this.tokenActual = this.listaTok[this.sig];\r\n    }\r\n}\r\n\r\nprivate tab():void {\r\n   \r\n    for (let i:number = 0; i < this.contadorTab ; i++)\r\n    {\r\n        this.cadena_traducida += \"\\t\";\r\n    }\r\n}\r\n\r\n\r\nprivate getTipoParaError(tip : Tipo):string{\r\nswitch (tip) {\r\n    case Tipo.sb_mas:\r\n        return \"mas\";\r\n    case Tipo.sb_menos:\r\n        return \"menos\";\r\n    case Tipo.sb_por:\r\n        return \"Por\";\r\n    case Tipo.sb_division:\r\n        return \"division\";\r\n    case Tipo.parentesis_izq:\r\n        return \"Parentesis_izquierdo\";\r\n    case Tipo.parentesis_derecho:\r\n        return \"Parentesis Derecho\";\r\n    case Tipo.llave_izq:\r\n        return \"LLave_izquierda\";\r\n    case Tipo.llave_derecha:\r\n        return \"llave_Derecha\";\r\n    case Tipo.caracter:\r\n        return \"caracter\";\r\n    case Tipo.decimales:\r\n        return \"Numero Decimal\";\r\n    case Tipo.comentarioLinea:\r\n        return \"ComentarioLineal\";\r\n    case Tipo.comentarioBloques:\r\n        return \"ComentarioBloque\";\r\n    case Tipo.numero:\r\n        return \"Numero_Entero\";\r\n\r\n    case Tipo.cadena:\r\n        return \"cadena\";\r\n\r\n    case Tipo.igual:\r\n        return \"Signo_Igual\";\r\n    case Tipo.mayor_que:\r\n        return \"MayorQue\";\r\n\r\n    case Tipo.menor_que:\r\n        return \"MenorQue\";\r\n    case Tipo.dosPuntos:\r\n        return \"Dos_puntos\";\r\n\r\n    case Tipo.punto_y_coma:\r\n        return \"Punto_y_coma\";\r\n    case Tipo.corchete_derecho:\r\n    return \"Corchete Derecho\";\r\ncase Tipo.igualComparacion:\r\n    return \"igual comparacion\";\r\ncase Tipo.diferente:\r\n    return \"diferente de\";\r\ncase Tipo.mayor_o_igual:\r\n    return \"mayor o igual \";\r\ncase Tipo.menor_o_igual:\r\n    return \"menor o igual \";\r\ncase Tipo.incremento:\r\n    return \"incremento \";\r\ncase Tipo.decremento:\r\n    return \"decremento \";\r\ncase Tipo.coma:\r\n    return \"coma \";\r\ncase Tipo.id:\r\n    return \"ID \";\r\ncase Tipo.corchete_izquierdo:\r\n    return \"Corchete izquierdo \";\r\ncase Tipo.sharp:\r\n    return  \"FINALIZACION\";\r\ncase Tipo.p_res_Int:\r\n    return \"Palabra Reservada Int\";\r\ncase Tipo.p_res_Float:\r\n    return \"Palabra Reservada Float\";\r\ncase Tipo.p_res_Char:\r\n    return \"Palabra Reservada Char\";\r\ncase Tipo.p_res_String:\r\n    return \"Palabra Reservada String\";\r\ncase Tipo.p_res_while:\r\n    return \"Palabra Reservada Int\";\r\ncase Tipo.p_res_Bool:\r\n    return \"TIPO DE DATO\";\r\ncase Tipo.p_res_Class:\r\n    return \"Palabra Reservada Class\";\r\ncase Tipo.p_res_static:\r\n    return \"Palabra Reservada static\";\r\ncase Tipo.p_res_void:\r\n    return \"Palabra Reservada void\";\r\ncase Tipo.p_res_Main:\r\n    return \"Palabra Reservada Main\";\r\ncase Tipo.p_res_false:\r\n    return \"Palabra Reservada false\";\r\ncase Tipo.p_res_true:\r\n    return \"Palabra Reservada true\";\r\ncase Tipo.p_res_if:\r\n    return \"Palabra Reservada if\";\r\ncase Tipo.p_res_else:\r\n    return \"Palabra Reservada else\";\r\ncase Tipo.p_res_switch:\r\n    return \"Palabra Reservada switch\";\r\ncase Tipo.p_res_case:\r\n    return \"Palabra Reservada case\";\r\ncase Tipo.p_res_break:\r\n    return \"Palabra Reservada break\";\r\ncase Tipo.p_res_default:\r\n    return \"Palabra Reservada default\";\r\ncase Tipo.p_res_continue:\r\n    return \"Palabra Reservada Continue\";\r\n\r\ncase Tipo.p_Console:\r\n    return \"Objeto Console\";\r\ncase Tipo.p_Write:\r\n    return \"Propiedad Write\";\r\n\r\ncase Tipo.punto:\r\n    return \"punto\";\r\ncase Tipo.p_for:\r\n    return \"for\";\r\ncase   Tipo.P_res_return:\r\n     return \"Palabra reservada return\";\r\ncase Tipo.sb_and:\r\n    return \"AND LOGICO \";\r\ncase Tipo.sb_or:\r\n    return \"OR LOGICO \";\r\ncase Tipo.sb_negacion:\r\n    return \"NEGACION LOGICA\";\r\ncase Tipo.p_res_do:\r\n    return \"Palabra Reservada do\";\r\ncase Tipo.p_res_double:\r\n    return\"Palabra Reservada double\";\r\ncase Tipo.html:\r\n    return \"Cadena HTML\";\r\n\r\n    default:\r\n        console.log(\"ERROR NO RECONOCIDO\");\r\n        return \"ERROR NO RECONOCIDO \";\r\n        break;\r\n}\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}// FIN CLASE ","\r\nexport class Entrada{\r\n    id?:any;\r\n    cadena?:String;\r\n\r\nconstructor(id?:any, cadena?:string){\r\nthis.id = id; \r\nthis.cadena = cadena;\r\n}\r\n\r\n}","\r\nimport { Estatico} from './Estatico';// lo importo\r\nexport class ErrorLexico{\r\n    public static CONTADOR_ERRORES:number = 1 ;\r\n    private fila:number;\r\n    private tipo:string;// PUEDO USAR LA CLASE ENUM Y AHORRAR  ESCRINIR EL TIPO EN EL ANALIZADOR\r\n    private valor:string;\r\n    private columna:number;\r\n    private id:number;\r\n  \r\nconstructor(Valor_error:string){\r\n           this.fila = Estatico.FILAS;\r\n           this.columna = Estatico.COLUMNAS;\r\n            this.valor = Valor_error;\r\n            this.tipo = \"ERROR LEXICO\";\r\n            this.id = ErrorLexico.CONTADOR_ERRORES;\r\n            ErrorLexico.CONTADOR_ERRORES++;\r\n}\r\n\r\npublic getID():number{\r\n    return this.id;\r\n}\r\n\r\npublic getValor():string\r\n{\r\n    return this.valor;\r\n}\r\n\r\npublic  getTipo_error():string\r\n{\r\n    return this.tipo;\r\n}\r\n\r\npublic  getFila() :number\r\n{\r\n    return this.fila;\r\n}\r\npublic getColumna():number\r\n{\r\n    return this.columna;\r\n}\r\n\r\n}","export class ErroresSintacticos{\r\n    public static CONT_SINTACTICOS : number = 1;\r\n    private columna:number ; \r\n    private fila : number ; \r\n    private error:string;\r\n    private id:number;\r\n    constructor(fila_ : number , columna_:number , error:string , encontro:any){// fil acolumna error\r\n        this.id = ErroresSintacticos.CONT_SINTACTICOS; \r\n        ErroresSintacticos.CONT_SINTACTICOS++; \r\n        this.fila = fila_; \r\n        this.columna = columna_; \r\n        this.error = \"se esperaba  \" + error  + \"   en lugar de   \"+encontro +\"   \";\r\n    }\r\n     \r\n    public getID():number{\r\n        return this.id;\r\n    }\r\n    \r\n    public getError():string\r\n    {\r\n        return this.error;\r\n    }\r\n    \r\n    public  getTipo_error():string\r\n    {\r\n        return \"Error Sintactico\";\r\n    }\r\n    \r\n    public  getFila() :number\r\n    {\r\n        return this.fila;\r\n    }\r\n    public getColumna():number\r\n    {\r\n        return this.columna;\r\n    }\r\n\r\n\r\n\r\n}","import { Tabla_Simbolos } from './Tabla_Simbolos';\r\n\r\nexport class Estatico{\r\n    nickname?:string;\r\n     rol?:any;\r\nconstructor(nickname?:string, nombre?:string,carnet?:any,correo?:string, pass?:String , rol?:any){\r\n\r\n}\r\n\r\npublic static FILAS:number = 1;\r\npublic static COLUMNAS:number = 0;// ejemplo de commo importar algo estatico \r\n\r\n\r\npublic static lista_mostrar_tokens:any = [];\r\npublic static lista_mostrar_errores_lexicos:any = [];\r\npublic static lista_mostrar_errores_sintacticos:any=[];\r\npublic static listaTXT:any = [];\r\npublic static guarda_entrada:any = \"\"; \r\npublic static lista_mostrar_tabla_simbolos:any = [];\r\n\r\npublic static guarda_traduccion:string = \"\"; \r\npublic static guarda_cadena_html:string = \"\"; \r\npublic static guarda_cadena_json:string = \"\"; \r\n\r\n}","\r\n\r\n\r\nexport class Tabla_Simbolos{\r\nprivate nombre:string; \r\nprivate tipo:string;\r\nprivate fila:number;\r\nprivate valor:string;\r\n\r\nconstructor(nom:string , tip:string , fil:number , valo:string){\r\nthis.nombre = nom; \r\nthis.tipo = tip; \r\nthis.fila = fil; \r\nthis.valor = valo; \r\n}\r\n\r\npublic getTipo():string{\r\n    return this.tipo;\r\n}\r\n\r\npublic getNombre():string{\r\n    return this.nombre; \r\n}\r\n\r\npublic  getFila() :number\r\n{\r\n    return this.fila;\r\n}\r\npublic getValor():string{\r\n    return this.valor;\r\n}\r\npublic setValor( val: string){\r\n    this.valor = val;\r\n}\r\npublic setTipo(tip:string){\r\n    this.tipo = tip; \r\n}\r\n\r\npublic setNombre(nom: string){\r\n    this.nombre = nom;\r\n}\r\npublic setFila(filaaa:number){\r\n    this.fila = filaaa;\r\n}\r\n\r\n\r\npublic esNueva():boolean{\r\n\r\n    return true;\r\n}\r\n\r\n\r\n\r\n\r\n}","import { Estatico} from './Estatico';// lo importo\r\n\r\nexport enum Tipo {\r\n    sb_mas,\r\n    sb_menos,\r\n    sb_por,\r\n    sb_division,\r\n    parentesis_izq,\r\n    parentesis_derecho,\r\n    llave_izq,\r\n    llave_derecha,\r\n    caracter,\r\n    decimales,\r\n    comentarioLinea,\r\n    comentarioBloques,\r\n    numero,\r\n    cadena,\r\n    igual,\r\n    mayor_que,\r\n    menor_que,\r\n    dosPuntos,\r\n    punto_y_coma,\r\n    corchete_derecho,\r\n    igualComparacion,\r\n    diferente,\r\n    mayor_o_igual,\r\n    menor_o_igual,\r\n    incremento,\r\n    decremento,\r\n    coma,\r\n    id,\r\n    corchete_izquierdo,\r\n    sharp, // FINALIZA \r\n    p_res_Int,//  comienzan palabras reservadas\r\n    p_res_Float,\r\n    p_res_Char,\r\n    p_res_String,\r\n    p_res_while,//\r\n    p_res_Bool,\r\n    p_res_Class,\r\n    p_res_static, // TAL VEZ YA NO VENGA \r\n    p_res_void,\r\n    p_res_Main,\r\n    p_res_false,\r\n    p_res_true,\r\n    p_res_if,\r\n    p_res_else,\r\n    p_res_switch,\r\n    p_res_case,\r\n    p_res_break,\r\n    p_res_default,\r\n    p_res_continue,\r\n    p_Console,\r\n    p_Write,\r\n    punto,\r\n    p_for,\r\n    P_res_return,\r\n    sb_and,\r\n    sb_or,\r\n    sb_negacion, \r\n    p_res_do,\r\n    p_res_double,\r\n    html\r\n}\r\nexport class Token{ // si falla implementar el '?' \r\n  public static CONTADORTOKEN : number = 1; // cada vez que le de analizar regresa a 0 \r\n  private id: number; \r\n  private fila:number;\r\n  private Tipo_token:Tipo;// PUEDO USAR LA CLASE ENUM Y AHORRAR  ESCRINIR EL TIPO EN EL ANALIZADOR\r\n  private valor_lexema: string;\r\n  private columna: number;\r\n\r\n  constructor(tipo_: Tipo,valor_:string){\r\n  this.Tipo_token = tipo_;\r\n  this.valor_lexema = valor_; \r\n  this.id = Token.CONTADORTOKEN;\r\n  Token.CONTADORTOKEN++;\r\n  this.fila = Estatico.FILAS; \r\n  this.columna = Estatico.COLUMNAS;\r\n  }\r\n\r\n  public getID():number{\r\n      return this.id;\r\n  }\r\n\r\n  \r\n  public getValor_lexema():string\r\n  {\r\n      return this.valor_lexema;\r\n  }\r\n\r\n  public  getTipo():Tipo\r\n  {\r\n      return this.Tipo_token;\r\n  }\r\n  \r\n  public  getFila() :number\r\n  {\r\n      return this.fila;\r\n  }\r\n  public getColumna():number\r\n  {\r\n      return this.columna;\r\n  }\r\n\r\n  public getParaTabla():string{\r\n      switch(this.Tipo_token){\r\n            case Tipo.p_res_Int:\r\n                 return \"int\";\r\n            case Tipo.p_res_Char:\r\n                return \"char\";\r\n            case Tipo.p_res_String:\r\n                return \"string\";\r\n          \r\n            case Tipo.p_res_Bool:\r\n                return \"Bool\";\r\n\r\n            case Tipo.p_res_double:\r\n                return\"Double\";\r\n            default:\r\n                return\"any\";\r\n      }\r\n  }\r\n\r\n  public  getTipo_str():string\r\n  {\r\n      switch (this.Tipo_token)\r\n      {\r\n          case Tipo.sb_mas:\r\n              return \"mas\";\r\n          case Tipo.sb_menos:\r\n              return \"menos\";\r\n          case Tipo.sb_por:\r\n              return \"Por\";\r\n          case Tipo.sb_division:\r\n              return \"division\";\r\n          case Tipo.parentesis_izq:\r\n              return \"Parentesis_izquierdo\";\r\n          case Tipo.parentesis_derecho:\r\n              return \"Parentesis Derecho\";\r\n          case Tipo.llave_izq:\r\n              return \"LLave_izquierda\";\r\n          case Tipo.llave_derecha:\r\n              return \"llave_Derecha\";\r\n          case Tipo.caracter:\r\n              return \"caracter\";\r\n          case Tipo.decimales:\r\n              return \"Numero Decimal\";\r\n          case Tipo.comentarioLinea:\r\n              return \"ComentarioLineal\";\r\n          case Tipo.comentarioBloques:\r\n              return \"ComentarioBloque\";\r\n          case Tipo.numero:\r\n              return \"Numero_Entero\";\r\n\r\n          case Tipo.cadena:\r\n              return \"cadena\";\r\n\r\n          case Tipo.igual:\r\n              return \"Signo_Igual\";\r\n          case Tipo.mayor_que:\r\n              return \"MayorQue\";\r\n\r\n          case Tipo.menor_que:\r\n              return \"MenorQue\";\r\n          case Tipo.dosPuntos:\r\n              return \"Dos_puntos\";\r\n\r\n          case Tipo.punto_y_coma:\r\n              return \"Punto_y_coma\";\r\n      case Tipo.corchete_derecho:\r\n          return \"Corchete Derecho\";\r\n      case Tipo.igualComparacion:\r\n          return \"igual comparacion\";\r\n      case Tipo.diferente:\r\n          return \"diferente de\";\r\n      case Tipo.mayor_o_igual:\r\n          return \"mayor o igual \";\r\n      case Tipo.menor_o_igual:\r\n          return \"menor o igual \";\r\n      case Tipo.incremento:\r\n          return \"incremento \";\r\n      case Tipo.decremento:\r\n          return \"decremento \";\r\n      case Tipo.coma:\r\n          return \"coma \";\r\n      case Tipo.id:\r\n          return \"ID \";\r\n      case Tipo.corchete_izquierdo:\r\n          return \"Corchete izquierdo \";\r\n      case Tipo.sharp:\r\n          return  \"FINALIZACION\";\r\n      case Tipo.p_res_Int:\r\n          return \"Palabra Reservada Int\";\r\n      case Tipo.p_res_Float:\r\n          return \"Palabra Reservada Float\";\r\n      case Tipo.p_res_Char:\r\n          return \"Palabra Reservada Char\";\r\n      case Tipo.p_res_String:\r\n          return \"Palabra Reservada String\";\r\n      case Tipo.p_res_while:\r\n          return \"Palabra Reservada While\";\r\n      case Tipo.p_res_Bool:\r\n          return \"Palabra Reservada Bool\";\r\n      case Tipo.p_res_Class:\r\n          return \"Palabra Reservada Class\";\r\n      case Tipo.p_res_static:\r\n          return \"Palabra Reservada static\";\r\n      case Tipo.p_res_void:\r\n          return \"Palabra Reservada void\";\r\n      case Tipo.p_res_Main:\r\n          return \"Palabra Reservada Main\";\r\n      case Tipo.p_res_false:\r\n          return \"Palabra Reservada false\";\r\n      case Tipo.p_res_true:\r\n          return \"Palabra Reservada true\";\r\n      case Tipo.p_res_if:\r\n          return \"Palabra Reservada if\";\r\n      case Tipo.p_res_else:\r\n          return \"Palabra Reservada else\";\r\n      case Tipo.p_res_switch:\r\n          return \"Palabra Reservada switch\";\r\n      case Tipo.p_res_case:\r\n          return \"Palabra Reservada case\";\r\n      case Tipo.p_res_break:\r\n          return \"Palabra Reservada break\";\r\n      case Tipo.p_res_default:\r\n          return \"Palabra Reservada default\";\r\n      case Tipo.p_res_continue:\r\n          return \"Palabra Reservada Continue\";\r\n\r\n      case Tipo.p_Console:\r\n          return \"Objeto Console\";\r\n      case Tipo.p_Write:\r\n          return \"Propiedad Write\";\r\n\r\n      case Tipo.punto:\r\n          return \"punto\";\r\n      case Tipo.p_for:\r\n          return \"for\";\r\n      case   Tipo.P_res_return:\r\n           return \"Palabra reservada return\";\r\n      case Tipo.sb_and:\r\n          return \"AND LOGICO \";\r\n      case Tipo.sb_or:\r\n          return \"OR LOGICO \";\r\n      case Tipo.sb_negacion:\r\n          return \"NEGACION LOGICA\";\r\n      case Tipo.p_res_do:\r\n          return \"Palabra Reservada do\";\r\n      case Tipo.p_res_double:\r\n          return\"Palabra Reservada double\";\r\n      case Tipo.html:\r\n           return \"Cadena HTML\";\r\n      default:\r\n         return \"FALTO ESPECIFICAR\";// ME AVISA SI HAY UNO QUE ME FALTO REGISTRAR EN MI CLASE ENUM\r\n\r\n      }\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  \r\n\r\n}\r\n","import { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\r\n\r\n\r\nexport class formateaHTML{\r\n    private contadorTab:number; \r\n    private nuevaCadena:string;\r\n    private cadenaVieja:string;\r\n    private cadenajson: string; \r\n    // para analisis lexico simple \r\n    private estado:number;\r\n    private aux_lexico:string = \"\";\r\n    \r\n\r\n\r\n    // PARA TRADUCIR EL JSON \r\n    private ID_PURO:boolean= true; \r\n    private atributo_actual:string = \"\"; \r\n    private ES_BR:boolean;\r\n    constructor(cadena_html:string){\r\n        this.contadorTab = 0 ; \r\n        this.nuevaCadena = cadena_html;\r\n        this.cadenaVieja = cadena_html;\r\n        this.ejecuta_formato();\r\n        this.generarJson();\r\n        this.addCOMILLAS_AL_JSON();\r\n    }\r\n\r\n    public getNuevaCadena():string{\r\n        return this.nuevaCadena;\r\n    }\r\n    public getCADENA_JSON():string{\r\n        return this.cadenajson;\r\n    }\r\n\r\n    private ejecuta_formato(){\r\n        console.log(\"CADENA HTML: \" + this.cadenaVieja);\r\n        this.nuevaCadena = \"\"; // LA LIMPIO \r\n        this.cadenajson = \"\";\r\n        this.cadenaVieja += \"\\n\";\r\n        this.estado = 0; // inicia en el estado de inicio \r\n        this.aux_lexico = \"\"; // cadena acumuladora de lexema acutual \r\n        let act:string =\"\"; // caracter actual  o tipo string \r\n        let posPasado = 0;\r\n        for(let i = 0 ; i < this.cadenaVieja.length ; i++){\r\n            act = this.cadenaVieja[i]; \r\n            switch(this.estado){\r\n                case 0:\r\n                    if (act ==\"<\")  { \r\n                        posPasado = i;\r\n                        this.tab(); \r\n                        this.nuevaCadena += this.aux_lexico;\r\n                        this.aux_lexico =\"\";\r\n                        this.nuevaCadena += \"\\n\";\r\n                        this.aux_lexico += this.cadenaVieja[i];\r\n                        this.estado = 1; \r\n                        this.ES_BR = false;\r\n                    }else{\r\n\r\n                        this.aux_lexico += this.cadenaVieja[i];\r\n                        // de una se adjunta \r\n                    }\r\n                break;\r\n                case 1: // este estado determina si resto o sumo \r\n               \r\n    \r\n\r\n                if (act ==\"/\" && (posPasado - i == -1) )  {  //\"</ \"\r\n                   // this.aux_lexico = \"\";\r\n                    this.aux_lexico += this.cadenaVieja[i];\r\n                    this.estado = 2;\r\n                    this.tab();   \r\n                    this.nuevaCadena += this.aux_lexico; // adjunta \r\n                    this.contadorTab--;\r\n                   \r\n                }else{\r\n                    this.aux_lexico += this.cadenaVieja[i];\r\n                    this.estado = 2 ; \r\n                    let atributo:string = this.getAtributo_etiqueta(i);\r\n                    if(atributo[0] == \"b\" || atributo[0] == \"B\" ){\r\n                        this.ES_BR = true;\r\n                    }\r\n                    this.contadorTab++;\r\n                    this.tab();   \r\n                    this.nuevaCadena += this.aux_lexico; // adjunta \r\n\r\n                   // this.aux_lexico = \"\"; \r\n                }\r\n                this.aux_lexico =\"\"; // se limpia \r\n                break;\r\n                case 2: // estoy en la parte interna de la etiqueta \r\n                if(act == \">\" ){\r\n                    this.nuevaCadena += this.cadenaVieja[i];\r\n                    this.nuevaCadena+=\"\\n\";\r\n                    this.estado = 0; \r\n\r\n                    if(this.ES_BR == true){\r\n                       this.contadorTab--;\r\n                    } \r\n\r\n\r\n                }else{ // viene el puro id        \r\n                     this.nuevaCadena += this.cadenaVieja[i];\r\n                }\r\n                break;\r\n            \r\n\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    private generarJson(){\r\n        this.contadorTab = 0 ;\r\n      //  this.nuevaCadena = \"\"; // LA LIMPIO \r\n        this.cadenajson = \"\";\r\n        this.cadenaVieja += \"\\n\";\r\n        this.estado = 0; // inicia en el estado de inicio \r\n        this.aux_lexico = \"\"; // cadena acumuladora de lexema acutual \r\n        let act:string =\"\"; // caracter actual  o tipo string \r\n        let posPasado = 0;\r\n        for(let i = 0 ; i < this.cadenaVieja.length ; i++){\r\n            act = this.cadenaVieja[i]; \r\n            switch(this.estado){\r\n                case 0:\r\n                    if (act ==\"<\")  { \r\n                        posPasado = i;\r\n                        this.t_();\r\n                         this.aux_lexico = this.aux_lexico.trim();\r\n                        if(this.aux_lexico.length > 0 ){\r\n                            this.cadenajson += \"\\\"TEXT\\\":\" +\"\\\"\" +this.aux_lexico +\"\\\"\";\r\n                        }\r\n                        \r\n                        this.aux_lexico =\"\";\r\n                        this.cadenajson += \"\\n\";\r\n                        this.aux_lexico += \"\\\"\";\r\n                        this.ES_BR = false;\r\n                        this.estado = 1; \r\n                    }else{\r\n                            this.aux_lexico += this.cadenaVieja[i]; \r\n                    }\r\n                break;\r\n                case 1: // este estado determina si resto o sumo \r\n               \r\n    \r\n\r\n                if (act ==\"/\" && (posPasado - i == -1) )  {  //\"</ \"\r\n                   // this.aux_lexico = \"\";\r\n                    this.aux_lexico += this.cadenaVieja[i];\r\n                    this.estado = 3;\r\n                    \r\n                    this.t_();   \r\n                    this.cadenajson += \"}\"; // adjunta \r\n                    this.contadorTab--;\r\n                   \r\n                }else{\r\n                    this.aux_lexico += this.cadenaVieja[i]; // ES UNA LETRA \"A\"\r\n                    this.estado = 2 ;\r\n                    let atributo:string = this.getAtributo_etiqueta(i);\r\n                    if(atributo[0] == \"\\\"\"){\r\n                        console.log(\"si es un atributo\");\r\n                        this.atributo_actual = atributo;\r\n                    }else{\r\n                        console.log(\"VIENE-\" + atributo );\r\n                        this.atributo_actual  = \"\"; \r\n                    }\r\n                    if(atributo[0] == \"b\" || atributo[0] == \"B\" ){\r\n                        this.ES_BR = true;\r\n                        console.log(\"VIENE BR \"  + atributo);\r\n                    }\r\n                    \r\n                    this.ID_PURO = true;\r\n                    this.contadorTab++;\r\n                    this.t_();   \r\n                    this.cadenajson += this.aux_lexico; // adjunta \r\n\r\n                   // this.aux_lexico = \"\"; \r\n                }\r\n                this.aux_lexico =\"\"; // se limpia \r\n\r\n\r\n                break;\r\n\r\n\r\n\r\n                case 2: // estoy en la parte interna de la etiqueta \r\n                if(act == \">\" ){\r\n                    // TENGO QUE IMPRIMIR SOLO EL ID \r\n                  //  console.log(\"> ENTRA \"+ this.aux_lexico);\r\n                    this.cadenajson += this.aux_lexico;\r\n                    this.aux_lexico =\"\";\r\n                    this.cadenajson+= \"\\\":{\\n\"\r\n                    if(this.atributo_actual.length != 0 ){\r\n                    this.t_();  this.cadenajson+=\"\\\"STYLE\\\":\"+this.atributo_actual+\"\\n\";\r\n                    }\r\n                    this.estado = 0;\r\n                    if(this.ES_BR == true){\r\n                        this.t_();   this.cadenajson+=\"}\\n\"; this.contadorTab--;\r\n                    } \r\n                }else{ // viene el puro id   \r\n                    \r\n                    if(act == \" \"){\r\n                        this.aux_lexico.trim();\r\n                        if(this.aux_lexico.length != 0 && this.ID_PURO == true ){\r\n                          //  console.log(\"in if \"+ this.aux_lexico);\r\n                            this.cadenajson += this.aux_lexico;\r\n                            this.ID_PURO = false;\r\n                        }\r\n                        this.aux_lexico=\"\";\r\n                    }else if(this.ID_PURO == true){\r\n\r\n                        if(act != \"\\n\"){// ESTO NO PODRIA VENIR PERO POR SI ACASO :V \r\n                         \r\n                              this.aux_lexico+= act;\r\n                        }\r\n                       \r\n                    }     \r\n                     \r\n                }\r\n                break;\r\n\r\n\r\n\r\n                case 3:\r\n\r\n                    if(act == \">\" ){\r\n                        this.estado = 0 ; \r\n                        this.aux_lexico =\"\";\r\n                        this.nuevaCadena+=\"\\n\";\r\n                    }else{         \r\n                         // LOS DESCARTO \r\n                    }\r\n            \r\n                \r\n                break;\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    private tab():void {\r\n   \r\n        for (let i:number = 0; i < this.contadorTab ; i++)\r\n        {\r\n            this.nuevaCadena += \"\\t\";\r\n        }\r\n    }\r\n\r\n    // ESTO SERIA PARA PONERLE LAS COMILLAS \r\n\r\n    private getSig(i:number): string{\r\n      //  console.log(\"________________________________________________________________________________\");\r\n        let k:number = 0 ; \r\n      //  console.log(\"ACTUAL: \" + this.cadenajson[i]);\r\n        let sig:string = this.cadenajson[i+1];\r\n        while (sig ==\" \"|| sig ==\"\\n\" || sig ==\"\\t\" || sig==\"\\r\")\r\n        {\r\n            k++;\r\n            sig = this.cadenajson[i + k];\r\n        //    console.log(\"Temp sigueinte:\" + sig);\r\n        }\r\n       // console.log(\"siguiente definitivo:\" + sig);\r\n      //  console.log(\"________________________________________________________________________________\");\r\n        return sig;\r\n    }\r\n\r\n\r\n   \r\n    private getAtributo_etiqueta(x:number): string{\r\n        let char_actual:string;\r\n        let ATRIB:string = \"\"; \r\n        for(let i = x ; i < this.cadenaVieja.length ; i++){\r\n            char_actual = this.cadenaVieja[i]; \r\n            if(char_actual == \"=\"){\r\n                ATRIB=\"\";\r\n            }else if(char_actual == \">\"){\r\n                break;\r\n            }\r\n            else{\r\n                ATRIB += char_actual;\r\n            }\r\n        }\r\n        ATRIB = ATRIB.trim();\r\n        if(ATRIB[0] == \"\\\"\"){\r\n            console.log(\"RETORNA ATRIBUTO: \"+ATRIB);\r\n        }\r\n        return ATRIB; \r\n    }\r\n\r\n\r\n    public addCOMILLAS_AL_JSON(){\r\n        let nueva_cadena_json_con_comillas:string=\"\";\r\n        let actual:string = \"\";\r\n        for(let indice = 0 ; indice < this.cadenajson.length ; indice++){\r\n            actual = this.cadenajson[indice]; \r\n\r\n\r\n            if(actual == \"}\"){\r\n                // CASO 1 \r\n            let sig:any = this.getSig(indice); \r\n            if(sig == \"\\\"\"){\r\n                nueva_cadena_json_con_comillas +=actual+\",\";\r\n            }\r\n            else\r\n            {\r\n                nueva_cadena_json_con_comillas +=actual;\r\n            }\r\n\r\n\r\n            }else if(actual == \"\\\"\"){\r\n                // CASO 2 \r\n                let siguiente:any = this.getSig(indice);\r\n\r\n                if(siguiente == \"\\\"\"){\r\n                    nueva_cadena_json_con_comillas +=actual+\",\";\r\n                }\r\n                else\r\n                {\r\n                    nueva_cadena_json_con_comillas +=actual;\r\n                }\r\n\r\n\r\n            }else{\r\n                // CASO 3 NO INTERESA SOLO LO ADJUNTO \r\n\r\n                nueva_cadena_json_con_comillas +=actual;\r\n            }\r\n        }\r\n\r\n\r\n\r\n        this.cadenajson = nueva_cadena_json_con_comillas; // HASTA ACA YA ESTAN BIEN LAS COMILLAS DE LAS LLAVES \r\n    \r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    private t_():void {\r\n   \r\n        for (let i:number = 0; i < this.contadorTab ; i++)\r\n        {\r\n            this.cadenajson += \"\\t\";\r\n        }\r\n    }\r\n    \r\n\r\n\r\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport {NavComponent} from  './COMPONENTES/nav/nav.component' ; // siempre importo el compoonente \nimport {LexicoComponent} from './COMPONENTES/lexico/lexico.component';\nimport {SintacticoComponent} from './COMPONENTES/sintactico/sintactico.component';\n\nconst routes: Routes = [\n  {path:'' , redirectTo:'principal', pathMatch:'full' },\n  {path:'principal' , component: NavComponent } , \n  {path:'lexico' , component:LexicoComponent},\n  {path:'sintactico' , component:SintacticoComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'PRACTICA 2 COMPI 1 ';\n}\n","\n\n<div class=\"container p-2\">\n  <router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule} from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavComponent } from './COMPONENTES/nav/nav.component';\nimport { LexicoComponent } from './COMPONENTES/lexico/lexico.component';\nimport { SintacticoComponent } from './COMPONENTES/sintactico/sintactico.component';\nimport { RegresoComponent } from './COMPONENTES/regreso/regreso.component';\n\nimport { CodemirrorModule } from '@ctrl/ngx-codemirror';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavComponent,\n    LexicoComponent,\n    SintacticoComponent,\n    RegresoComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    CodemirrorModule\n    \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport 'codemirror/mode/javascript/javascript';\nimport 'codemirror/mode/markdown/markdown';\nimport 'codemirror/mode/go/go';\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}